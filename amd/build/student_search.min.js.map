{"version":3,"sources":["../src/student_search.js"],"names":["contextid","hoursAhead","hoursBehind","refreshPeriod","counterid","refreshCounter","reset","progressElement","document","getElementById","clearInterval","setAttribute","setInterval","progressWidthAria","getAttribute","progressStep","TableHandler","getTable","tableSearchAheadSet","event","preventDefault","target","tagName","toLowerCase","hours","dataset","metric","UserPreference","setUserPreference","then","fail","Notification","exception","Error","tableSearchBehindSet","refreshAction","element","closest","id","period","init","context","tableSearchInputElement","tableSearchResetElement","tableSearchRowsElement","tableSearchAheadElement","tableSearchBehindElement","refreshElement","addEventListener","tableSearch","tableSearchReset","tableSearchRowSet","$","when","getUserPreference","response","preferences","value","done","OverrideModal"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for student search display and processing.\n *\n * @module     local_assessfreq/student_search\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Notification from 'core/notification';\nimport OverrideModal from 'local_assessfreq/override_modal';\nimport * as TableHandler from 'local_assessfreq/table_handler';\nimport * as UserPreference from 'local_assessfreq/user_preferences';\n\n/**\n * Module level variables.\n */\nvar contextid;\nvar hoursAhead = 4;\nvar hoursBehind = 1;\nvar refreshPeriod = 60;\nvar counterid;\n\n/**\n * Function for refreshing the counter.\n *\n * @param {boolean} reset the current count process.\n */\nconst refreshCounter = (reset = true) => {\n    let progressElement = document.getElementById('local-assessfreq-period-progress');\n\n    // Reset the current count process.\n    if (reset === true) {\n        clearInterval(counterid);\n        counterid = null;\n        progressElement.setAttribute('style', 'width: 100%');\n        progressElement.setAttribute('aria-valuenow', 100);\n    }\n\n    // Exit early if there is already a counter running.\n    if (counterid) {\n        return;\n    }\n\n    counterid = setInterval(() => {\n        let progressWidthAria = progressElement.getAttribute('aria-valuenow');\n        const progressStep = 100 / refreshPeriod;\n\n        if ((progressWidthAria - progressStep) > 0) {\n            progressElement.setAttribute('style', 'width: ' + (progressWidthAria - progressStep) + '%');\n            progressElement.setAttribute('aria-valuenow', (progressWidthAria - progressStep));\n        } else {\n            clearInterval(counterid);\n            counterid = null;\n            progressElement.setAttribute('style', 'width: 100%');\n            progressElement.setAttribute('aria-valuenow', 100);\n            TableHandler.getTable(0, [hoursAhead, hoursBehind], null);\n            refreshCounter();\n        }\n    }, (1000));\n};\n\n/**\n * Process the hours ahead event from the student table.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst tableSearchAheadSet = (event) => {\n    event.preventDefault();\n    if (event.target.tagName.toLowerCase() === 'a') {\n        let hours = event.target.dataset.metric;\n        UserPreference.setUserPreference('local_assessfreq_student_search_table_hoursahead_preference', hours)\n        .then(() => {\n            hoursAhead = hours;\n            TableHandler.getTable(0, [hoursAhead, hoursBehind], null); // Reload the table. // Reload the table.\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to update user preference: hours ahead'));\n        });\n    }\n};\n\n/**\n * Process the hours behind event from the student table.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst tableSearchBehindSet = (event) => {\n    event.preventDefault();\n    if (event.target.tagName.toLowerCase() === 'a') {\n        let hours = event.target.dataset.metric;\n        UserPreference.setUserPreference('local_assessfreq_student_search_table_hoursbehind_preference', hours)\n        .then(() => {\n            hoursBehind = hours;\n            TableHandler.getTable(0, [hoursAhead, hoursBehind], null); // Reload the table. // Reload the table.\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to update user preference: hours behind'));\n        });\n    }\n};\n\n/**\n * Handle processing of refresh and period button actions.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst refreshAction = (event) => {\n    event.preventDefault();\n    var element = event.target;\n\n    if (element.closest('button') !== null && element.closest('button').id === 'local-assessfreq-refresh-quiz-dashboard') {\n        refreshCounter(true);\n        TableHandler.getTable(0, [hoursAhead, hoursBehind], null);\n    } else if (element.tagName.toLowerCase() === 'a') {\n        refreshPeriod = element.dataset.period;\n        refreshCounter(true);\n        UserPreference.setUserPreference('local_assessfreq_quiz_refresh_preference', refreshPeriod);\n    }\n};\n\n/**\n * Initialise method for student search.\n *\n * @param {integer} context The current context id.\n */\nexport const init = (context) => {\n    contextid = context;\n    TableHandler.init(\n        0,\n        contextid,\n        'local-assessfreq-student-search-table',\n        'local-assessfreq-student-search',\n        'get_student_search_table',\n        'local_assessfreq_student_search_table_rows_preference',\n        'local-assessfreq-quiz-student-table-search',\n        'local_assessfreq_student_search_table',\n        'local_assessfreq_set_table_preference'\n    );\n\n    // Add required initial event listeners.\n    let tableSearchInputElement = document.getElementById('local-assessfreq-quiz-student-table-search');\n    let tableSearchResetElement = document.getElementById('local-assessfreq-quiz-student-table-search-reset');\n    let tableSearchRowsElement = document.getElementById('local-assessfreq-quiz-student-table-rows');\n    let tableSearchAheadElement = document.getElementById('local-assessfreq-quiz-student-table-hoursahead');\n    let tableSearchBehindElement = document.getElementById('local-assessfreq-quiz-student-table-hoursbehind');\n    let refreshElement = document.getElementById('local-assessfreq-period-container');\n\n    tableSearchInputElement.addEventListener('keyup', TableHandler.tableSearch);\n    tableSearchInputElement.addEventListener('paste', TableHandler.tableSearch);\n    tableSearchResetElement.addEventListener('click', TableHandler.tableSearchReset);\n    tableSearchRowsElement.addEventListener('click', TableHandler.tableSearchRowSet);\n    tableSearchAheadElement.addEventListener('click', tableSearchAheadSet);\n    tableSearchBehindElement.addEventListener('click', tableSearchBehindSet);\n    refreshElement.addEventListener('click', refreshAction);\n\n    $.when(\n        UserPreference.getUserPreference('local_assessfreq_student_search_table_hoursahead_preference')\n        .then((response) => {\n            hoursAhead = response.preferences[0].value ? response.preferences[0].value : 4;\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to get use preference: hoursahead'));\n        }),\n        UserPreference.getUserPreference('local_assessfreq_student_search_table_hoursbehind_preference')\n        .then((response) => {\n            hoursBehind = response.preferences[0].value ? response.preferences[0].value : 1;\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to get use preference: hoursahead'));\n        })\n    ).done(function() {\n        TableHandler.getTable(0, [hoursAhead, hoursBehind], null);\n        OverrideModal.init(context, TableHandler.getTable, [hoursAhead, hoursBehind]);\n    });\n};\n"],"file":"student_search.min.js"}