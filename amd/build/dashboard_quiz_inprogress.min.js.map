{"version":3,"sources":["../src/dashboard_quiz_inprogress.js"],"names":["contextid","refreshPeriod","counterid","tablesort","hoursAhead","hoursBehind","hoursFilter","cards","cardId","call","aspect","refreshCounter","reset","progressElement","document","getElementById","clearInterval","setAttribute","setInterval","progressWidthAria","getAttribute","progressStep","processDashboard","Ajax","methodname","args","then","response","quizSummary","JSON","parse","summaryElement","summarySpinner","getElementsByClassName","tableSearchInputElement","tableSearchResetElement","tableSearchRowsElement","tableSortElement","classList","remove","Templates","render","done","html","add","contentcontainer","replaceNodeContents","fail","Notification","exception","Error","ChartData","getCardCharts","TableHandler","getTable","addEventListener","tableSearch","tableSearchReset","tableSearchRowSet","tableSortButtonAction","refreshAction","event","preventDefault","element","target","closest","id","tagName","toLowerCase","dataset","period","UserPreference","setUserPreference","triggerZoomGraph","params","stringify","ZoomModal","zoomGraph","quizzesAheadSet","hours","metric","quizzesBehindSet","init","context","getUserPreference","preferences","value","refreshElement","summaryZoom","upcommingZoom","quizzesAheadElement","quizzesBehindElement"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for quizzes in progress display and processing.\n *\n * @module     local_assessfreq/dashboard_quiz_inprogress\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\nimport * as ChartData from 'local_assessfreq/chart_data';\nimport * as TableHandler from 'local_assessfreq/table_handler';\nimport * as UserPreference from 'local_assessfreq/user_preferences';\nimport * as ZoomModal from 'local_assessfreq/zoom_modal';\n\n/**\n * Module level variables.\n */\nvar contextid;\nvar refreshPeriod = 60;\nvar counterid;\nvar tablesort = 'name_asc';\nvar hoursAhead = 0;\nvar hoursBehind = 0;\n\n/**\n * Hours filter array.\n *\n * @type {array} Title to display on modal.\n */\nvar hoursFilter;\n\nconst cards = [\n    {cardId: 'local-assessfreq-quiz-summary-upcomming-graph', call: 'upcomming_quizzes', aspect: true},\n    {cardId: 'local-assessfreq-quiz-summary-inprogress-graph', call: 'all_participants_inprogress', aspect: true}\n];\n\n/**\n * Function for refreshing the counter.\n *\n * @param {boolean} reset the current count process.\n */\nconst refreshCounter = (reset = true) => {\n    let progressElement = document.getElementById('local-assessfreq-period-progress');\n\n    // Reset the current count process.\n    if (reset === true) {\n        clearInterval(counterid);\n        counterid = null;\n        progressElement.setAttribute('style', 'width: 100%');\n        progressElement.setAttribute('aria-valuenow', 100);\n    }\n\n    // Exit early if there is already a counter running.\n    if (counterid) {\n        return;\n    }\n\n    counterid = setInterval(() => {\n        let progressWidthAria = progressElement.getAttribute('aria-valuenow');\n        const progressStep = 100 / refreshPeriod;\n\n        if ((progressWidthAria - progressStep) > 0) {\n            progressElement.setAttribute('style', 'width: ' + (progressWidthAria - progressStep) + '%');\n            progressElement.setAttribute('aria-valuenow', (progressWidthAria - progressStep));\n        } else {\n            clearInterval(counterid);\n            counterid = null;\n            progressElement.setAttribute('style', 'width: 100%');\n            progressElement.setAttribute('aria-valuenow', 100);\n            processDashboard();\n            refreshCounter();\n        }\n    }, (1000));\n};\n\n/**\n * Starts the processing of the dashboard.\n */\nconst processDashboard = () => {\n    // Get summary quiz data.\n    Ajax.call([{\n        methodname: 'local_assessfreq_get_inprogress_counts',\n        args: {},\n    }])[0].then((response) => {\n        let quizSummary = JSON.parse(response);\n        let summaryElement = document.getElementById('local-assessfreq-quiz-dashboard-inprogress-summary-card');\n        let summarySpinner = summaryElement.getElementsByClassName('overlay-icon-container')[0];\n        let tableSearchInputElement = document.getElementById('local-assessfreq-quiz-inprogress-table-search');\n        let tableSearchResetElement = document.getElementById('local-assessfreq-quiz-inprogress-table-search-reset');\n        let tableSearchRowsElement = document.getElementById('local-assessfreq-quiz-inprogress-table-rows');\n        let tableSortElement = document.getElementById('local-assessfreq-inprogress-table-sort');\n\n        summaryElement.classList.remove('hide'); // Show the card.\n\n        // Populate summary card with details.\n        Templates.render('local_assessfreq/quiz-dashboard-inprogress-summary-card-content', quizSummary)\n        .done((html) => {\n            summarySpinner.classList.add('hide');\n\n            let contentcontainer = document.getElementById('local-assessfreq-quiz-dashboard-inprogress-summary-card-content');\n            Templates.replaceNodeContents(contentcontainer, html, '');\n        }).fail(() => {\n            Notification.exception(new Error('Failed to load quiz counts template.'));\n            return;\n        });\n\n        hoursFilter = [hoursAhead, hoursBehind];\n        ChartData.getCardCharts(0, hoursFilter);\n        TableHandler.getTable(0, hoursFilter, tablesort);\n        refreshCounter();\n\n        // Table event listeners.\n        tableSearchInputElement.addEventListener('keyup', TableHandler.tableSearch);\n        tableSearchInputElement.addEventListener('paste', TableHandler.tableSearch);\n        tableSearchResetElement.addEventListener('click', TableHandler.tableSearchReset);\n        tableSearchRowsElement.addEventListener('click', TableHandler.tableSearchRowSet);\n        tableSortElement.addEventListener('click', TableHandler.tableSortButtonAction);\n\n        return;\n    }).fail(() => {\n        Notification.exception(new Error('Failed to get quiz summary counts'));\n    });\n};\n\n/**\n * Handle processing of refresh and period button actions.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst refreshAction = (event) => {\n    event.preventDefault();\n    var element = event.target;\n\n    if (element.closest('button') !== null && element.closest('button').id === 'local-assessfreq-refresh-quiz-dashboard') {\n        refreshCounter(true);\n        processDashboard();\n    } else if (element.tagName.toLowerCase() === 'a') {\n        refreshPeriod = element.dataset.period;\n        refreshCounter(true);\n        UserPreference.setUserPreference('local_assessfreq_quiz_refresh_preference', refreshPeriod);\n    }\n};\n\n/**\n * Trigger the zoom graph. Thin wrapper to add extra data to click event.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst triggerZoomGraph = (event) => {\n    let call = event.target.closest('div').dataset.call;\n    let params = {'data': JSON.stringify({'call': call, 'hoursahead': hoursAhead, 'hoursbehind': hoursBehind})};\n    let method = 'get_quiz_inprogress_chart';\n\n    ZoomModal.zoomGraph(event, params, method);\n};\n\n/**\n * Process the hours ahead event from the in progress quizzes table.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst quizzesAheadSet = (event) => {\n    event.preventDefault();\n    if (event.target.tagName.toLowerCase() === 'a') {\n        let hours = event.target.dataset.metric;\n        UserPreference.setUserPreference('local_assessfreq_quizzes_inprogress_table_hoursahead_preference', hours)\n            .then(() => {\n                hoursAhead = hours;\n                processDashboard(); // Reload the table.\n            })\n            .fail(() => {\n                Notification.exception(new Error('Failed to update user preference: hours ahead'));\n            });\n    }\n};\n\n/**\n * Process the hours behind event from the in progress quizzes table.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst quizzesBehindSet = (event) => {\n    event.preventDefault();\n    if (event.target.tagName.toLowerCase() === 'a') {\n        let hours = event.target.dataset.metric;\n        UserPreference.setUserPreference('local_assessfreq_quizzes_inprogress_table_hoursbehind_preference', hours)\n            .then(() => {\n                hoursBehind = hours;\n                processDashboard(); // Reload the table.\n            })\n            .fail(() => {\n                Notification.exception(new Error('Failed to update user preference: hours behind'));\n            });\n    }\n};\n\n/**\n * Initialise method for quizzes in progress dashboard rendering.\n *\n * @param {int} context The context id.\n */\nexport const init = (context) => {\n    contextid = context;\n    ZoomModal.init(context); // Create the zoom modal.\n    TableHandler.init(\n        0,\n        contextid,\n        null,\n        'local-assessfreq-quiz-inprogress-table',\n        'get_quizzes_inprogress_table',\n        'local_assessfreq_quiz_table_inprogress_preference',\n        'local-assessfreq-quiz-inprogress-table-search'\n    );\n    ChartData.init(cards, context, 'get_quiz_inprogress_chart', 'local_assessfreq/chart');\n\n    UserPreference.getUserPreference('local_assessfreq_quiz_refresh_preference')\n    .then((response) => {\n        refreshPeriod = response.preferences[0].value ? response.preferences[0].value : 60;\n    })\n    .fail(() => {\n        Notification.exception(new Error('Failed to get use preference: refresh'));\n    });\n\n    UserPreference.getUserPreference('local_assessfreq_quiz_table_inprogress_sort_preference')\n    .then((response) => {\n        tablesort = response.preferences[0].value ? response.preferences[0].value : 'name_asc';\n    })\n    .fail(() => {\n        Notification.exception(new Error('Failed to get use preference: tablesort'));\n    });\n\n    UserPreference.getUserPreference('local_assessfreq_quizzes_inprogress_table_hoursahead_preference')\n        .then((response) => {\n            hoursAhead = response.preferences[0].value ? response.preferences[0].value : 0;\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to get use preference: hoursahead'));\n        });\n\n    UserPreference.getUserPreference('local_assessfreq_quizzes_inprogress_table_hoursbehind_preference')\n        .then((response) => {\n            hoursBehind = response.preferences[0].value ? response.preferences[0].value : 0;\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to get use preference: hoursbehind'));\n        });\n\n    // Event handling for refresh and period buttons.\n    let refreshElement = document.getElementById('local-assessfreq-period-container');\n    refreshElement.addEventListener('click', refreshAction);\n\n    // Set up zoom event listeners.\n    let summaryZoom = document.getElementById('local-assessfreq-quiz-summary-inprogress-graph-zoom');\n    summaryZoom.addEventListener('click', triggerZoomGraph);\n\n    let upcommingZoom = document.getElementById('local-assessfreq-quiz-summary-upcomming-graph-zoom');\n    upcommingZoom.addEventListener('click', triggerZoomGraph);\n\n    // Set up behind and ahead quizzes event listeners.\n    let quizzesAheadElement = document.getElementById('local-assessfreq-quiz-student-table-hoursahead');\n    quizzesAheadElement.addEventListener('click', quizzesAheadSet);\n\n    let quizzesBehindElement = document.getElementById('local-assessfreq-quiz-student-table-hoursbehind');\n    quizzesBehindElement.addEventListener('click', quizzesBehindSet);\n\n    processDashboard();\n\n};\n"],"file":"dashboard_quiz_inprogress.min.js"}