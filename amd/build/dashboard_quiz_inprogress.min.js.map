{"version":3,"sources":["../src/dashboard_quiz_inprogress.js"],"names":["define","Ajax","Templates","Fragment","ZoomModal","Str","Notification","DashboardQuizInprogress","contextid","refreshPeriod","counterid","cards","cardId","call","aspect","setUserPreference","type","value","methodname","args","preferences","getUserPreference","name","refreshCounter","reset","progressElement","document","getElementById","clearInterval","setAttribute","setInterval","progressWidthAria","getAttribute","progressStep","processDashboard","getCardCharts","forEach","cardData","cardElement","spinner","getElementsByClassName","chartbody","params","JSON","stringify","classList","remove","loadFragment","done","response","resObj","parse","hasdata","context","chart","render","html","js","add","replaceNodeContents","fail","exception","Error","get_string","then","str","noDatastr","createElement","innerHTML","outerHTML","catch","quizSummary","summaryElement","summarySpinner","contentcontainer","refreshAction","event","preventDefault","element","target","closest","id","tagName","toLowerCase","dataset","period","triggerZoomGraph","zoomGraph","init","window","console","log","refreshElement","addEventListener","summaryZoom","upcommingZoom"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for quizzes in progress display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/ajax', 'core/templates', 'core/fragment', 'local_assessfreq/zoom_modal', 'core/str', 'core/notification'],\nfunction(Ajax, Templates, Fragment, ZoomModal, Str, Notification) {\n\n    /**\n     * Module level variables.\n     */\n    var DashboardQuizInprogress = {};\n    var contextid;\n    var refreshPeriod = 60;\n    var counterid;\n\n    const cards = [\n        {cardId: 'local-assessfreq-quiz-summary-upcomming-graph', call: 'upcomming_quizzes', aspect: false},\n        {cardId: 'local-assessfreq-quiz-summary-inprogress-graph', call: 'all_participants_inprogress', aspect: true}\n    ];\n\n    /**\n     * Generic handler to persist user preferences.\n     *\n     * @param {string} type The name of the attribute you're updating\n     * @param {string} value The value of the attribute you're updating\n     * @return {object} jQuery promise\n     */\n    const setUserPreference = function(type, value) {\n        var request = {\n            methodname: 'core_user_update_user_preferences',\n            args: {\n                preferences: [{type: type, value: value}]\n            }\n        };\n\n        return Ajax.call([request])[0];\n    };\n\n    /**\n     * Generic handler to get user preference.\n     *\n     * @param {string} name The name of the attribute you're getting.\n     * @return {object} jQuery promise\n     */\n    const getUserPreference = function(name) {\n        var request = {\n            methodname: 'core_user_get_user_preferences',\n            args: {\n                'name': name\n            }\n        };\n\n        return Ajax.call([request])[0];\n    };\n\n    /**\n    *\n    */\n   const refreshCounter = function(reset) {\n       let progressElement = document.getElementById('local-assessfreq-period-progress');\n\n       // Reset the current count process.\n       if (reset == true) {\n           clearInterval(counterid);\n           counterid = null;\n           progressElement.setAttribute('style', 'width: 100%');\n           progressElement.setAttribute('aria-valuenow', 100);\n       }\n\n       // Exit early if there is already a counter running.\n       if (counterid) {\n           return;\n       }\n\n       counterid = setInterval(() => {\n           let progressWidthAria = progressElement.getAttribute('aria-valuenow');\n           const progressStep = 100 / refreshPeriod;\n\n           if ((progressWidthAria - progressStep) > 0) {\n               progressElement.setAttribute('style', 'width: ' + (progressWidthAria - progressStep) + '%');\n               progressElement.setAttribute('aria-valuenow', (progressWidthAria - progressStep));\n           } else {\n               clearInterval(counterid);\n               counterid = null;\n               progressElement.setAttribute('style', 'width: 100%');\n               progressElement.setAttribute('aria-valuenow', 100);\n               processDashboard();\n               refreshCounter();\n           }\n       }, (1000));\n   };\n\n    /**\n     * For each of the cards on the dashbaord get their corresponding chart data.\n     * Data is based on the year variable from the corresponding dropdown.\n     * Chart data is loaded via ajax.\n     *\n     */\n    const getCardCharts = function() {\n        cards.forEach((cardData) => {\n            let cardElement = document.getElementById(cardData.cardId);\n            let spinner = cardElement.getElementsByClassName('overlay-icon-container')[0];\n            let chartbody = cardElement.getElementsByClassName('chart-body')[0];\n            let params = {'data': JSON.stringify({'call': cardData.call})};\n\n            spinner.classList.remove('hide'); // Show sinner if not already shown.\n            Fragment.loadFragment('local_assessfreq', 'get_quiz_inprogress_chart', contextid, params)\n            .done((response) => {\n                let resObj = JSON.parse(response);\n                if (resObj.hasdata == true) {\n                    let context = { 'withtable' : true, 'chartdata' : JSON.stringify(resObj.chart), 'aspect' :  cardData.aspect};\n                    Templates.render('local_assessfreq/chart', context).done((html, js) => {\n                        spinner.classList.add('hide'); // Hide spinner if not already hidden.\n                        // Load card body.\n                        Templates.replaceNodeContents(chartbody, html, js);\n                    }).fail(() => {\n                        Notification.exception(new Error('Failed to load chart template.'));\n                        return;\n                    });\n                    return;\n                } else {\n                    Str.get_string('nodata', 'local_assessfreq').then((str) => {\n                        const noDatastr = document.createElement('h3');\n                        noDatastr.innerHTML = str;\n                        chartbody.innerHTML = noDatastr.outerHTML;\n                        spinner.classList.add('hide'); // Hide spinner if not already hidden.\n                        return;\n                    }).catch(() => {\n                        Notification.exception(new Error('Failed to load string: nodata'));\n                    });\n                }\n            }).fail(() => {\n                Notification.exception(new Error('Failed to load card.'));\n                return;\n            });\n        });\n    };\n\n    /**\n     * Starts the processing of the dashboard.\n     */\n    const processDashboard = function() {\n        // Get summary quiz data.\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_inprogress_counts',\n            args: {},\n        }])[0].then((response) => {\n            let quizSummary = JSON.parse(response);\n            let summaryElement = document.getElementById('local-assessfreq-quiz-dashboard-inprogress-summary-card');\n            let summarySpinner = summaryElement.getElementsByClassName('overlay-icon-container')[0];\n\n            summaryElement.classList.remove('hide'); // Show the card.\n\n            // Populate summary card with details.\n            Templates.render('local_assessfreq/quiz-dashboard-inprogress-summary-card-content', quizSummary)\n            .done((html) => {\n                summarySpinner.classList.add('hide');\n\n                let contentcontainer = document.getElementById('local-assessfreq-quiz-dashboard-inprogress-summary-card-content');\n                Templates.replaceNodeContents(contentcontainer, html);\n            }).fail(() => {\n                Notification.exception(new Error('Failed to load quiz counts template.'));\n                return;\n            });\n\n            getCardCharts();\n            refreshCounter();\n\n            return;\n        }).fail(() => {\n            Notification.exception(new Error('Failed to get quiz summary counts'));\n        });\n    };\n\n    /**\n     * Handle processing of refresh and period button actions.\n     */\n    const refreshAction = function(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.closest('button') !== null && element.closest('button').id == 'local-assessfreq-refresh-quiz-dashboard') {\n            refreshCounter(true);\n            processDashboard();\n        } else if (element.tagName.toLowerCase() === 'a') {\n            refreshPeriod = element.dataset.period;\n            refreshCounter(true);\n            setUserPreference('local_assessfreq_quiz_refresh_preference', refreshPeriod);\n        }\n    };\n\n    /**\n     * Trigger the zoom graph. Thin wrapper to add extra data to click event.\n     */\n    const triggerZoomGraph = function(event) {\n        let call = event.target.closest('div').dataset.call;\n        let params = {'data': JSON.stringify({'call': call})};\n        let method = 'get_quiz_inprogress_chart';\n\n        ZoomModal.zoomGraph(event, params, method);\n    };\n\n    /**\n     * Initialise method for quizzes in progress dashboard rendering.\n     */\n    DashboardQuizInprogress.init = function(context) {\n        contextid = context;\n        window.console.log(contextid);\n        ZoomModal.init(context); // Create the zoom modal.\n\n        getUserPreference('local_assessfreq_quiz_refresh_preference')\n        .then((response) => {\n            refreshPeriod = response.preferences[0].value ? response.preferences[0].value : 60;\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to get use preference: refresh'));\n        });\n\n        // Event handling for refresh and period buttons.\n        let refreshElement = document.getElementById('local-assessfreq-period-container');\n        refreshElement.addEventListener('click', refreshAction);\n\n        // Set up zoom event listeners.\n        let summaryZoom = document.getElementById('local-assessfreq-quiz-summary-inprogress-graph-zoom');\n        summaryZoom.addEventListener('click', triggerZoomGraph);\n\n        let upcommingZoom = document.getElementById('local-assessfreq-quiz-summary-upcomming-graph-zoom');\n        upcommingZoom.addEventListener('click', triggerZoomGraph);\n\n        processDashboard();\n\n    };\n\n    return DashboardQuizInprogress;\n});\n"],"file":"dashboard_quiz_inprogress.min.js"}