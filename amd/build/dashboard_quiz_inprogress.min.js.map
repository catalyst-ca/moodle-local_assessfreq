{"version":3,"sources":["../src/dashboard_quiz_inprogress.js"],"names":["define","Ajax","Templates","Fragment","ZoomModal","Str","Notification","DashboardQuizInprogress","contextid","refreshPeriod","counterid","cards","cardId","call","aspect","setUserPreference","type","value","methodname","args","preferences","getUserPreference","name","refreshCounter","reset","progressElement","document","getElementById","clearInterval","setAttribute","setInterval","progressWidthAria","getAttribute","progressStep","processDashboard","tableSearch","event","target","length","getSummaryTable","tableSearchReset","tableSearchInputElement","focus","getCardCharts","forEach","cardData","cardElement","spinner","getElementsByClassName","chartbody","params","JSON","stringify","classList","remove","loadFragment","done","response","resObj","parse","hasdata","context","chart","render","html","js","add","replaceNodeContents","fail","exception","Error","get_string","then","str","noDatastr","createElement","innerHTML","outerHTML","catch","page","tableElement","tableBody","search","trim","pagerTop","pagerBottom","runTemplateJS","quizSummary","summaryElement","summarySpinner","tableSearchResetElement","contentcontainer","addEventListener","refreshAction","preventDefault","element","closest","id","tagName","toLowerCase","dataset","period","triggerZoomGraph","zoomGraph","init","refreshElement","summaryZoom","upcommingZoom"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for quizzes in progress display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/ajax', 'core/templates', 'core/fragment', 'local_assessfreq/zoom_modal', 'core/str', 'core/notification'],\nfunction(Ajax, Templates, Fragment, ZoomModal, Str, Notification) {\n\n    /**\n     * Module level variables.\n     */\n    var DashboardQuizInprogress = {};\n    var contextid;\n    var refreshPeriod = 60;\n    var counterid;\n\n    const cards = [\n        {cardId: 'local-assessfreq-quiz-summary-upcomming-graph', call: 'upcomming_quizzes', aspect: true},\n        {cardId: 'local-assessfreq-quiz-summary-inprogress-graph', call: 'all_participants_inprogress', aspect: true}\n    ];\n\n    /**\n     * Generic handler to persist user preferences.\n     *\n     * @param {string} type The name of the attribute you're updating\n     * @param {string} value The value of the attribute you're updating\n     * @return {object} jQuery promise\n     */\n    const setUserPreference = function(type, value) {\n        var request = {\n            methodname: 'core_user_update_user_preferences',\n            args: {\n                preferences: [{type: type, value: value}]\n            }\n        };\n\n        return Ajax.call([request])[0];\n    };\n\n    /**\n     * Generic handler to get user preference.\n     *\n     * @param {string} name The name of the attribute you're getting.\n     * @return {object} jQuery promise\n     */\n    const getUserPreference = function(name) {\n        var request = {\n            methodname: 'core_user_get_user_preferences',\n            args: {\n                'name': name\n            }\n        };\n\n        return Ajax.call([request])[0];\n    };\n\n    /**\n    *\n    */\n   const refreshCounter = function(reset) {\n       let progressElement = document.getElementById('local-assessfreq-period-progress');\n\n       // Reset the current count process.\n       if (reset == true) {\n           clearInterval(counterid);\n           counterid = null;\n           progressElement.setAttribute('style', 'width: 100%');\n           progressElement.setAttribute('aria-valuenow', 100);\n       }\n\n       // Exit early if there is already a counter running.\n       if (counterid) {\n           return;\n       }\n\n       counterid = setInterval(() => {\n           let progressWidthAria = progressElement.getAttribute('aria-valuenow');\n           const progressStep = 100 / refreshPeriod;\n\n           if ((progressWidthAria - progressStep) > 0) {\n               progressElement.setAttribute('style', 'width: ' + (progressWidthAria - progressStep) + '%');\n               progressElement.setAttribute('aria-valuenow', (progressWidthAria - progressStep));\n           } else {\n               clearInterval(counterid);\n               counterid = null;\n               progressElement.setAttribute('style', 'width: 100%');\n               progressElement.setAttribute('aria-valuenow', 100);\n               processDashboard();\n               refreshCounter();\n           }\n       }, (1000));\n   };\n\n   /**\n    * Process the search events from the student table.\n    */\n   const tableSearch = function(event) {\n       if (event.target.value.length > 2) {\n           getSummaryTable();\n       }\n\n       if (event.target.value.length == 0) {\n           getSummaryTable();\n       }\n   };\n\n   /**\n    * Process the search reset click event from the student table.\n    */\n   const tableSearchReset = function() {\n       let tableSearchInputElement = document.getElementById('local-assessfreq-quiz-inprogress-table-search');\n       tableSearchInputElement.value = '';\n       tableSearchInputElement.focus();\n       getSummaryTable();\n   };\n\n    /**\n     * For each of the cards on the dashbaord get their corresponding chart data.\n     * Data is based on the year variable from the corresponding dropdown.\n     * Chart data is loaded via ajax.\n     *\n     */\n    const getCardCharts = function() {\n        cards.forEach((cardData) => {\n            let cardElement = document.getElementById(cardData.cardId);\n            let spinner = cardElement.getElementsByClassName('overlay-icon-container')[0];\n            let chartbody = cardElement.getElementsByClassName('chart-body')[0];\n            let params = {'data': JSON.stringify({'call': cardData.call})};\n\n            spinner.classList.remove('hide'); // Show sinner if not already shown.\n            Fragment.loadFragment('local_assessfreq', 'get_quiz_inprogress_chart', contextid, params)\n            .done((response) => {\n                let resObj = JSON.parse(response);\n                if (resObj.hasdata == true) {\n                    let context = { 'withtable' : true, 'chartdata' : JSON.stringify(resObj.chart), 'aspect' :  cardData.aspect};\n                    Templates.render('local_assessfreq/chart', context).done((html, js) => {\n                        spinner.classList.add('hide'); // Hide spinner if not already hidden.\n                        // Load card body.\n                        Templates.replaceNodeContents(chartbody, html, js);\n                    }).fail(() => {\n                        Notification.exception(new Error('Failed to load chart template.'));\n                        return;\n                    });\n                    return;\n                } else {\n                    Str.get_string('nodata', 'local_assessfreq').then((str) => {\n                        const noDatastr = document.createElement('h3');\n                        noDatastr.innerHTML = str;\n                        chartbody.innerHTML = noDatastr.outerHTML;\n                        spinner.classList.add('hide'); // Hide spinner if not already hidden.\n                        return;\n                    }).catch(() => {\n                        Notification.exception(new Error('Failed to load string: nodata'));\n                    });\n                }\n            }).fail(() => {\n                Notification.exception(new Error('Failed to load card.'));\n                return;\n            });\n        });\n    };\n\n    /**\n     * Display the table that contains all in progress quiz summaries.\n     */\n    const getSummaryTable =function(page) {\n        if (typeof page === \"undefined\") {\n            page = 0;\n        }\n\n        let tableElement = document.getElementById('local-assessfreq-quiz-inprogress-table');\n        let spinner = tableElement.getElementsByClassName('overlay-icon-container')[0];\n        let tableBody = tableElement.getElementsByClassName('table-body')[0];\n        let search = document.getElementById('local-assessfreq-quiz-inprogress-table-search').value.trim();\n        let pagerTop = document.getElementById('local-assessfreq-quiz-inprogress-table-paging-top');\n        let pagerBottom = document.getElementById('local-assessfreq-quiz-inprogress-table-paging-bottom');\n\n        let params = {'data': JSON.stringify({'search': search, 'page': page})};\n\n        spinner.classList.remove('hide'); // Show sinner if not already shown.\n\n        // Load table pager.\n        Fragment.loadFragment('local_assessfreq', 'get_quizzes_inprogress_table_pager', contextid, params)\n        .done((response) => {\n            pagerTop.innerHTML = response;\n            pagerBottom.innerHTML = response;\n        }).fail(() => {\n            Notification.exception(new Error('Failed to get table pager.'));\n            return;\n        });\n\n        // Load table content.\n        Fragment.loadFragment('local_assessfreq', 'get_quizzes_inprogress_table', contextid, params)\n        .done((response, js) => {\n            tableBody.innerHTML = response;\n            Templates.runTemplateJS(js); // Magic call the initialises JS from template included in response template HTML.\n            spinner.classList.add('hide'); // Hide spinner if not already hidden.\n        }).fail(() => {\n            Notification.exception(new Error('Failed to update table.'));\n            return;\n        });\n    };\n\n    /**\n     * Starts the processing of the dashboard.\n     */\n    const processDashboard = function() {\n        // Get summary quiz data.\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_inprogress_counts',\n            args: {},\n        }])[0].then((response) => {\n            let quizSummary = JSON.parse(response);\n            let summaryElement = document.getElementById('local-assessfreq-quiz-dashboard-inprogress-summary-card');\n            let summarySpinner = summaryElement.getElementsByClassName('overlay-icon-container')[0];\n            let tableSearchInputElement = document.getElementById('local-assessfreq-quiz-inprogress-table-search');\n            let tableSearchResetElement = document.getElementById('local-assessfreq-quiz-inprogress-table-search-reset');\n\n            summaryElement.classList.remove('hide'); // Show the card.\n\n            // Populate summary card with details.\n            Templates.render('local_assessfreq/quiz-dashboard-inprogress-summary-card-content', quizSummary)\n            .done((html) => {\n                summarySpinner.classList.add('hide');\n\n                let contentcontainer = document.getElementById('local-assessfreq-quiz-dashboard-inprogress-summary-card-content');\n                Templates.replaceNodeContents(contentcontainer, html);\n            }).fail(() => {\n                Notification.exception(new Error('Failed to load quiz counts template.'));\n                return;\n            });\n\n            getCardCharts();\n            getSummaryTable();\n            refreshCounter();\n\n            // Table event listeners.\n            tableSearchInputElement.addEventListener('keyup', tableSearch);\n            tableSearchInputElement.addEventListener('paste', tableSearch);\n            tableSearchResetElement.addEventListener('click', tableSearchReset);\n\n            return;\n        }).fail(() => {\n            Notification.exception(new Error('Failed to get quiz summary counts'));\n        });\n    };\n\n    /**\n     * Handle processing of refresh and period button actions.\n     */\n    const refreshAction = function(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.closest('button') !== null && element.closest('button').id == 'local-assessfreq-refresh-quiz-dashboard') {\n            refreshCounter(true);\n            processDashboard();\n        } else if (element.tagName.toLowerCase() === 'a') {\n            refreshPeriod = element.dataset.period;\n            refreshCounter(true);\n            setUserPreference('local_assessfreq_quiz_refresh_preference', refreshPeriod);\n        }\n    };\n\n    /**\n     * Trigger the zoom graph. Thin wrapper to add extra data to click event.\n     */\n    const triggerZoomGraph = function(event) {\n        let call = event.target.closest('div').dataset.call;\n        let params = {'data': JSON.stringify({'call': call})};\n        let method = 'get_quiz_inprogress_chart';\n\n        ZoomModal.zoomGraph(event, params, method);\n    };\n\n    /**\n     * Initialise method for quizzes in progress dashboard rendering.\n     */\n    DashboardQuizInprogress.init = function(context) {\n        contextid = context;\n        ZoomModal.init(context); // Create the zoom modal.\n\n        getUserPreference('local_assessfreq_quiz_refresh_preference')\n        .then((response) => {\n            refreshPeriod = response.preferences[0].value ? response.preferences[0].value : 60;\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to get use preference: refresh'));\n        });\n\n        // Event handling for refresh and period buttons.\n        let refreshElement = document.getElementById('local-assessfreq-period-container');\n        refreshElement.addEventListener('click', refreshAction);\n\n        // Set up zoom event listeners.\n        let summaryZoom = document.getElementById('local-assessfreq-quiz-summary-inprogress-graph-zoom');\n        summaryZoom.addEventListener('click', triggerZoomGraph);\n\n        let upcommingZoom = document.getElementById('local-assessfreq-quiz-summary-upcomming-graph-zoom');\n        upcommingZoom.addEventListener('click', triggerZoomGraph);\n\n        processDashboard();\n\n    };\n\n    return DashboardQuizInprogress;\n});\n"],"file":"dashboard_quiz_inprogress.min.js"}