{"version":3,"sources":["../src/dashboard_quiz_inprogress.js"],"names":["define","Ajax","Fragment","Notification","Str","Templates","ChartData","TableHandler","UserPreference","ZoomModal","DashboardQuizInprogress","contextid","refreshPeriod","counterid","tablesort","hoursAhead","hoursBehind","hoursFilter","cards","cardId","call","aspect","refreshCounter","reset","progressElement","document","getElementById","clearInterval","setAttribute","setInterval","progressWidthAria","getAttribute","progressStep","processDashboard","methodname","args","then","response","quizSummary","JSON","parse","summaryElement","summarySpinner","getElementsByClassName","tableSearchInputElement","tableSearchResetElement","tableSearchRowsElement","tableSortElement","classList","remove","render","done","html","add","contentcontainer","replaceNodeContents","fail","exception","Error","getCardCharts","getTable","addEventListener","tableSearch","tableSearchReset","tableSearchRowSet","tableSortButtonAction","refreshAction","event","preventDefault","element","target","closest","id","tagName","toLowerCase","dataset","period","setUserPreference","triggerZoomGraph","params","stringify","zoomGraph","quizzesAheadSet","hours","metric","quizzesBehindSet","init","context","getUserPreference","preferences","value","refreshElement","summaryZoom","upcommingZoom","quizzesAheadElement","quizzesBehindElement"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for quizzes in progress display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'core/ajax',\n    'core/fragment',\n    'core/notification',\n    'core/str',\n    'core/templates',\n    'local_assessfreq/chart_data',\n    'local_assessfreq/table_handler',\n    'local_assessfreq/user_preferences',\n    'local_assessfreq/zoom_modal',\n], function(Ajax,\n            Fragment,\n            Notification,\n            Str,\n            Templates,\n            ChartData,\n            TableHandler,\n            UserPreference,\n            ZoomModal) {\n\n    /**\n     * Module level variables.\n     */\n    var DashboardQuizInprogress = {};\n    var contextid;\n    var refreshPeriod = 60;\n    var counterid;\n    var tablesort = 'name_asc';\n    var hoursAhead = 0;\n    var hoursBehind = 0;\n\n    /**\n     * Hours filter array.\n     *\n     * @type {array} Title to display on modal.\n     */\n    var hoursFilter;\n\n    const cards = [\n        {cardId: 'local-assessfreq-quiz-summary-upcomming-graph', call: 'upcomming_quizzes', aspect: true},\n        {cardId: 'local-assessfreq-quiz-summary-inprogress-graph', call: 'all_participants_inprogress', aspect: true}\n    ];\n\n    /**\n     * Function for refreshing the counter.\n     *\n     * @param {boolean} reset the current count process.\n     */\n    const refreshCounter = function(reset = true) {\n        let progressElement = document.getElementById('local-assessfreq-period-progress');\n\n        // Reset the current count process.\n        if (reset === true) {\n            clearInterval(counterid);\n            counterid = null;\n            progressElement.setAttribute('style', 'width: 100%');\n            progressElement.setAttribute('aria-valuenow', 100);\n        }\n\n        // Exit early if there is already a counter running.\n        if (counterid) {\n            return;\n        }\n\n        counterid = setInterval(() => {\n            let progressWidthAria = progressElement.getAttribute('aria-valuenow');\n            const progressStep = 100 / refreshPeriod;\n\n            if ((progressWidthAria - progressStep) > 0) {\n                progressElement.setAttribute('style', 'width: ' + (progressWidthAria - progressStep) + '%');\n                progressElement.setAttribute('aria-valuenow', (progressWidthAria - progressStep));\n            } else {\n                clearInterval(counterid);\n                counterid = null;\n                progressElement.setAttribute('style', 'width: 100%');\n                progressElement.setAttribute('aria-valuenow', 100);\n                processDashboard();\n                refreshCounter();\n            }\n        }, (1000));\n    };\n\n    /**\n     * Starts the processing of the dashboard.\n     */\n    const processDashboard = function() {\n        // Get summary quiz data.\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_inprogress_counts',\n            args: {},\n        }])[0].then((response) => {\n            let quizSummary = JSON.parse(response);\n            let summaryElement = document.getElementById('local-assessfreq-quiz-dashboard-inprogress-summary-card');\n            let summarySpinner = summaryElement.getElementsByClassName('overlay-icon-container')[0];\n            let tableSearchInputElement = document.getElementById('local-assessfreq-quiz-inprogress-table-search');\n            let tableSearchResetElement = document.getElementById('local-assessfreq-quiz-inprogress-table-search-reset');\n            let tableSearchRowsElement = document.getElementById('local-assessfreq-quiz-inprogress-table-rows');\n            let tableSortElement = document.getElementById('local-assessfreq-inprogress-table-sort');\n\n            summaryElement.classList.remove('hide'); // Show the card.\n\n            // Populate summary card with details.\n            Templates.render('local_assessfreq/quiz-dashboard-inprogress-summary-card-content', quizSummary)\n            .done((html) => {\n                summarySpinner.classList.add('hide');\n\n                let contentcontainer = document.getElementById('local-assessfreq-quiz-dashboard-inprogress-summary-card-content');\n                Templates.replaceNodeContents(contentcontainer, html, '');\n            }).fail(() => {\n                Notification.exception(new Error('Failed to load quiz counts template.'));\n                return;\n            });\n\n            hoursFilter = [hoursAhead, hoursBehind];\n            ChartData.getCardCharts(0, hoursFilter);\n            TableHandler.getTable(0, hoursFilter, tablesort);\n            refreshCounter();\n\n            // Table event listeners.\n            tableSearchInputElement.addEventListener('keyup', TableHandler.tableSearch);\n            tableSearchInputElement.addEventListener('paste', TableHandler.tableSearch);\n            tableSearchResetElement.addEventListener('click', TableHandler.tableSearchReset);\n            tableSearchRowsElement.addEventListener('click', TableHandler.tableSearchRowSet);\n            tableSortElement.addEventListener('click', TableHandler.tableSortButtonAction);\n\n            return;\n        }).fail(() => {\n            Notification.exception(new Error('Failed to get quiz summary counts'));\n        });\n    };\n\n    /**\n     * Handle processing of refresh and period button actions.\n     *\n     * @param {Event} event The triggered event for the element.\n     */\n    const refreshAction = function(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.closest('button') !== null && element.closest('button').id === 'local-assessfreq-refresh-quiz-dashboard') {\n            refreshCounter(true);\n            processDashboard();\n        } else if (element.tagName.toLowerCase() === 'a') {\n            refreshPeriod = element.dataset.period;\n            refreshCounter(true);\n            UserPreference.setUserPreference('local_assessfreq_quiz_refresh_preference', refreshPeriod);\n        }\n    };\n\n    /**\n     * Trigger the zoom graph. Thin wrapper to add extra data to click event.\n     *\n     * @param {Event} event The triggered event for the element.\n     */\n    const triggerZoomGraph = function(event) {\n        let call = event.target.closest('div').dataset.call;\n        let params = {'data': JSON.stringify({'call': call, 'hoursahead': hoursAhead, 'hoursbehind': hoursBehind})};\n        let method = 'get_quiz_inprogress_chart';\n\n        ZoomModal.zoomGraph(event, params, method);\n    };\n\n    /**\n     * Process the hours ahead event from the in progress quizzes table.\n     *\n     * @param {Event} event The triggered event for the element.\n     */\n    const quizzesAheadSet = function(event) {\n        event.preventDefault();\n        if (event.target.tagName.toLowerCase() === 'a') {\n            let hours = event.target.dataset.metric;\n            UserPreference.setUserPreference('local_assessfreq_quizzes_inprogress_table_hoursahead_preference', hours)\n                .then(() => {\n                    hoursAhead = hours;\n                    processDashboard(); // Reload the table.\n                })\n                .fail(() => {\n                    Notification.exception(new Error('Failed to update user preference: hours ahead'));\n                });\n        }\n    };\n\n    /**\n     * Process the hours behind event from the in progress quizzes table.\n     *\n     * @param {Event} event The triggered event for the element.\n     */\n    const quizzesBehindSet = function(event) {\n        event.preventDefault();\n        if (event.target.tagName.toLowerCase() === 'a') {\n            let hours = event.target.dataset.metric;\n            UserPreference.setUserPreference('local_assessfreq_quizzes_inprogress_table_hoursbehind_preference', hours)\n                .then(() => {\n                    hoursBehind = hours;\n                    processDashboard(); // Reload the table.\n                })\n                .fail(() => {\n                    Notification.exception(new Error('Failed to update user preference: hours behind'));\n                });\n        }\n    };\n\n    /**\n     * Initialise method for quizzes in progress dashboard rendering.\n     *\n     * @param {int} context The context id.\n     */\n    DashboardQuizInprogress.init = function(context) {\n        contextid = context;\n        ZoomModal.init(context); // Create the zoom modal.\n        TableHandler.init(\n            0,\n            contextid,\n            null,\n            'local-assessfreq-quiz-inprogress-table',\n            'get_quizzes_inprogress_table',\n            'local_assessfreq_quiz_table_inprogress_preference',\n            'local-assessfreq-quiz-inprogress-table-search'\n        );\n        ChartData.init(cards, context, 'get_quiz_inprogress_chart', 'local_assessfreq/chart');\n\n        UserPreference.getUserPreference('local_assessfreq_quiz_refresh_preference')\n        .then((response) => {\n            refreshPeriod = response.preferences[0].value ? response.preferences[0].value : 60;\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to get use preference: refresh'));\n        });\n\n        UserPreference.getUserPreference('local_assessfreq_quiz_table_inprogress_sort_preference')\n        .then((response) => {\n            tablesort = response.preferences[0].value ? response.preferences[0].value : 'name_asc';\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to get use preference: tablesort'));\n        });\n\n        UserPreference.getUserPreference('local_assessfreq_quizzes_inprogress_table_hoursahead_preference')\n            .then((response) => {\n                hoursAhead = response.preferences[0].value ? response.preferences[0].value : 0;\n            })\n            .fail(() => {\n                Notification.exception(new Error('Failed to get use preference: hoursahead'));\n            });\n\n        UserPreference.getUserPreference('local_assessfreq_quizzes_inprogress_table_hoursbehind_preference')\n            .then((response) => {\n                hoursBehind = response.preferences[0].value ? response.preferences[0].value : 0;\n            })\n            .fail(() => {\n                Notification.exception(new Error('Failed to get use preference: hoursbehind'));\n            });\n\n        // Event handling for refresh and period buttons.\n        let refreshElement = document.getElementById('local-assessfreq-period-container');\n        refreshElement.addEventListener('click', refreshAction);\n\n        // Set up zoom event listeners.\n        let summaryZoom = document.getElementById('local-assessfreq-quiz-summary-inprogress-graph-zoom');\n        summaryZoom.addEventListener('click', triggerZoomGraph);\n\n        let upcommingZoom = document.getElementById('local-assessfreq-quiz-summary-upcomming-graph-zoom');\n        upcommingZoom.addEventListener('click', triggerZoomGraph);\n\n        // Set up behind and ahead quizzes event listeners.\n        let quizzesAheadElement = document.getElementById('local-assessfreq-quiz-student-table-hoursahead');\n        quizzesAheadElement.addEventListener('click', quizzesAheadSet);\n\n        let quizzesBehindElement = document.getElementById('local-assessfreq-quiz-student-table-hoursbehind');\n        quizzesBehindElement.addEventListener('click', quizzesBehindSet);\n\n        processDashboard();\n\n    };\n\n    return DashboardQuizInprogress;\n});\n"],"file":"dashboard_quiz_inprogress.min.js"}