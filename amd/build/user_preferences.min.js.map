{"version":3,"sources":["../src/user_preferences.js"],"names":["define","Ajax","Notification","setUserPreference","type","value","call","methodname","args","preferences","fail","exception","Error","getUserPreference","name"],"mappings":"AAuBAA,OAAM,qCAAC,CAAC,WAAD,CAAc,mBAAd,CAAD,CAAqC,SAASC,CAAT,CAAeC,CAAf,CAA6B,CAEpE,MAAO,CAQHC,iBAAiB,CAAE,2BAASC,CAAT,CAAeC,CAAf,CAAsB,CAQrC,MAAOJ,CAAAA,CAAI,CAACK,IAAL,CAAU,CAPH,CACVC,UAAU,CAAE,mCADF,CAEVC,IAAI,CAAE,CACFC,WAAW,CAAE,CAAC,CAACL,IAAI,CAAEA,CAAP,CAAaC,KAAK,CAAEA,CAApB,CAAD,CADX,CAFI,CAOG,CAAV,EAAqB,CAArB,EACNK,IADM,CACD,UAAM,CACRR,CAAY,CAACS,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,kCAAV,CAAvB,CACH,CAHM,CAIV,CApBE,CA4BHC,iBAAiB,CAAE,2BAASC,CAAT,CAAe,CAQ9B,MAAOb,CAAAA,CAAI,CAACK,IAAL,CAAU,CAPH,CACVC,UAAU,CAAE,uCADF,CAEVC,IAAI,CAAE,CACF,KAAQM,CADN,CAFI,CAOG,CAAV,EAAqB,CAArB,CACV,CArCE,CAuCV,CAzCK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * User preferences JS module.\n *\n * @package    local_assessfreq\n * @copyright  2020 Guillermo Gomez <guillermogomez@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @module     local_assessfreq/user_preferences\n */\ndefine(['core/ajax', 'core/notification'], function(Ajax, Notification) {\n\n    return {\n        /**\n         * Generic handler to persist user preferences.\n         *\n         * @param {string} type The name of the attribute you're updating\n         * @param {string} value The value of the attribute you're updating\n         * @return {object} jQuery promise\n         */\n        setUserPreference: function(type, value) {\n            var request = {\n                methodname: 'core_user_update_user_preferences',\n                args: {\n                    preferences: [{type: type, value: value}]\n                }\n            };\n\n            return Ajax.call([request])[0]\n            .fail(() => {\n                Notification.exception(new Error('Failed to update user preference'));\n            });\n        },\n\n        /**\n         * Generic handler to get user preference.\n         *\n         * @param {string} name The name of the attribute you're getting.\n         * @return {object} jQuery promise\n         */\n        getUserPreference: function(name) {\n            var request = {\n                methodname: 'local_assessfreq_get_user_preferences',\n                args: {\n                    'name': name\n                }\n            };\n\n            return Ajax.call([request])[0];\n        }\n    };\n});\n"],"file":"user_preferences.min.js"}