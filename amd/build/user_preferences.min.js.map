{"version":3,"sources":["../src/user_preferences.js"],"names":["setUserPreference","type","value","Ajax","call","methodname","args","preferences","fail","Notification","exception","Error","getUserPreference","name"],"mappings":"qNAwBA,OACA,O,mDAUO,GAAMA,CAAAA,CAAiB,CAAG,SAACC,CAAD,CAAOC,CAAP,CAAiB,CAQ9C,MAAOC,WAAKC,IAAL,CAAU,CAPD,CACZC,UAAU,CAAE,mCADA,CAEZC,IAAI,CAAE,CACFC,WAAW,CAAE,CAAC,CAACN,IAAI,CAAEA,CAAP,CAAaC,KAAK,CAAEA,CAApB,CAAD,CADX,CAFM,CAOC,CAAV,EAAqB,CAArB,EACNM,IADM,CACD,UAAM,CACRC,UAAaC,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,kCAAV,CAAvB,CACH,CAHM,CAIV,CAZM,C,sBAqBA,GAAMC,CAAAA,CAAiB,CAAG,SAACC,CAAD,CAAU,CAQvC,MAAOV,WAAKC,IAAL,CAAU,CAPD,CACZC,UAAU,CAAE,gCADA,CAEZC,IAAI,CAAE,CACF,KAAQO,CADN,CAFM,CAOC,CAAV,EAAqB,CAArB,CACV,CATM,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * User preferences JS module.\n *\n * @module     local_assessfreq/user_preferences\n * @package    local_assessfreq\n * @copyright  2020 Guillermo Gomez <guillermogomez@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/**\n * Generic handler to persist user preferences.\n *\n * @method setUserPreference\n * @param {string} type The name of the attribute you're updating\n * @param {string} value The value of the attribute you're updating\n * @return {promise} jQuery promise\n */\nexport const setUserPreference = (type, value) => {\n    const request = {\n        methodname: 'core_user_update_user_preferences',\n        args: {\n            preferences: [{type: type, value: value}]\n        }\n    };\n\n    return Ajax.call([request])[0]\n    .fail(() => {\n        Notification.exception(new Error('Failed to update user preference'));\n    });\n};\n\n/**\n * Generic handler to get user preference.\n *\n * @method getUserPreference\n * @param {string} name The name of the attribute you're getting.\n * @return {promise} jQuery promise\n */\nexport const getUserPreference = (name) => {\n    const request = {\n        methodname: 'core_user_get_user_preferences',\n        args: {\n            'name': name\n        }\n    };\n\n    return Ajax.call([request])[0];\n};\n"],"file":"user_preferences.min.js"}