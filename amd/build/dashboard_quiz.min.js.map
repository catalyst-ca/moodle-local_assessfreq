{"version":3,"sources":["../src/dashboard_quiz.js"],"names":["define","$","Ajax","Notification","Str","Templates","ChartData","FormModal","OverrideModal","TableHandler","UserPreference","ZoomModal","DashboardQuiz","selectQuizStr","contextid","quizId","refreshPeriod","counterid","cards","cardId","call","aspect","refreshCounter","reset","progressElement","document","getElementById","clearInterval","setAttribute","setInterval","progressWidthAria","getAttribute","progressStep","processDashboard","quiz","titleElement","innerHTML","methodname","args","quizid","then","response","quizArray","JSON","parse","cardsElement","trendElement","summaryElement","summarySpinner","getElementsByClassName","tableElement","periodElement","tableSearchInputElement","tableSearchResetElement","tableSearchRowsElement","quizLink","createElement","href","url","name","appendChild","currentdUrl","URL","window","location","newUrl","origin","pathname","history","pushState","get_string","courseshortname","str","title","catch","exception","Error","render","done","html","classList","add","contentcontainer","replaceNodeContents","tooltip","fail","remove","getCardCharts","getTable","addEventListener","tableSearch","tableSearchReset","tableSearchRowSet","refreshAction","event","preventDefault","element","target","closest","id","tagName","toLowerCase","refreshElement","actionButton","textContent","activeoptions","i","length","dataset","period","setUserPreference","triggerZoomGraph","params","stringify","zoomGraph","init","context","getUserPreference","preferences","value","summaryZoom","trendZoom"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'jquery',\n    'core/ajax',\n    'core/notification',\n    'core/str',\n    'core/templates',\n    'local_assessfreq/chart_data',\n    'local_assessfreq/form_modal',\n    'local_assessfreq/override_modal',\n    'local_assessfreq/table_handler',\n    'local_assessfreq/user_preferences',\n    'local_assessfreq/zoom_modal',\n], function($,\n            Ajax,\n            Notification,\n            Str,\n            Templates,\n            ChartData,\n            FormModal,\n            OverrideModal,\n            TableHandler,\n            UserPreference,\n            ZoomModal) {\n\n    /**\n     * Module level variables.\n     */\n    var DashboardQuiz = {};\n    var selectQuizStr = '';\n    var contextid;\n    var quizId = 0;\n    var refreshPeriod = 60;\n    var counterid;\n\n    const cards = [\n        {cardId: 'local-assessfreq-quiz-summary-graph', call: 'participant_summary', aspect: true},\n        {cardId: 'local-assessfreq-quiz-summary-trend', call: 'participant_trend', aspect: false}\n    ];\n\n    /**\n     * Function for refreshing the counter.\n     *\n     * @param {boolean} reset the current count process.\n     */\n    const refreshCounter = function(reset = true) {\n        let progressElement = document.getElementById('local-assessfreq-period-progress');\n\n        // Reset the current count process.\n        if (reset === true) {\n            clearInterval(counterid);\n            counterid = null;\n            progressElement.setAttribute('style', 'width: 100%');\n            progressElement.setAttribute('aria-valuenow', 100);\n        }\n\n        // Exit early if there is already a counter running.\n        if (counterid) {\n            return;\n        }\n\n        counterid = setInterval(() => {\n            let progressWidthAria = progressElement.getAttribute('aria-valuenow');\n            const progressStep = 100 / refreshPeriod;\n\n            if ((progressWidthAria - progressStep) > 0) {\n                progressElement.setAttribute('style', 'width: ' + (progressWidthAria - progressStep) + '%');\n                progressElement.setAttribute('aria-valuenow', (progressWidthAria - progressStep));\n            } else {\n                clearInterval(counterid);\n                counterid = null;\n                progressElement.setAttribute('style', 'width: 100%');\n                progressElement.setAttribute('aria-valuenow', 100);\n                processDashboard(quizId);\n                refreshCounter();\n            }\n        }, (1000));\n    };\n\n    /**\n     * Callback function that is called when a quiz is selected from the form.\n     * Starts the processing of the dashboard.\n     *\n     * @param {int} quiz The quiz Id.\n     */\n    const processDashboard = function(quiz) {\n        quizId = quiz;\n        let titleElement = document.getElementById('local-assessfreq-quiz-title');\n        titleElement.innerHTML = selectQuizStr;\n        // Get quiz data.\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_quiz_data',\n            args: {\n                quizid: quiz\n            },\n        }])[0].then((response) => {\n\n            let quizArray = JSON.parse(response);\n            let cardsElement = document.getElementById('local-assessfreq-quiz-dashboard-cards-deck');\n            let trendElement = document.getElementById('local-assessfreq-quiz-dashboard-participant-trend-deck');\n            let summaryElement = document.getElementById('local-assessfreq-quiz-summary-card');\n            let summarySpinner = summaryElement.getElementsByClassName('overlay-icon-container')[0];\n            let tableElement = document.getElementById('local-assessfreq-quiz-table');\n            let periodElement = document.getElementById('local-assessfreq-period-container');\n            let tableSearchInputElement = document.getElementById('local-assessfreq-quiz-student-table-search');\n            let tableSearchResetElement = document.getElementById('local-assessfreq-quiz-student-table-search-reset');\n            let tableSearchRowsElement = document.getElementById('local-assessfreq-quiz-student-table-rows');\n\n            let quizLink = document.createElement('a');\n            quizLink.href = quizArray.url;\n            quizLink.innerHTML = '<i class=\"fa fa-link fa-flip-vertical fa-fw\"></i>';\n            titleElement.innerHTML = quizArray.name + '&nbsp;';\n            titleElement.appendChild(quizLink);\n\n            // Update page URL with quiz ID, without reloading page so that page navigation and bookmarking works.\n            const currentdUrl = new URL(window.location.href);\n            const newUrl = currentdUrl.origin + currentdUrl.pathname + '?id=' + quizId;\n            history.pushState({}, '', newUrl);\n\n            // Update page title with quiz name.\n            Str.get_string('dashboard:quiztitle', 'local_assessfreq', {'quiz': quizArray.name, 'course': quizArray.courseshortname})\n            .then((str) => {\n                document.title = str;\n            }).catch(() => {\n                Notification.exception(new Error('Failed to load string: dashboard:quiztitle'));\n            });\n\n            // Populate quiz summary card with details.\n            Templates.render('local_assessfreq/quiz-summary-card-content', quizArray).done((html) => {\n                summarySpinner.classList.add('hide');\n                let contentcontainer = document.getElementById('local-assessfreq-quiz-summary-card-content');\n                Templates.replaceNodeContents(contentcontainer, html, '');\n                $('[data-toggle=\"tooltip\"]').tooltip();\n            }).fail(() => {\n                Notification.exception(new Error('Failed to load quiz summary template.'));\n                return;\n            });\n\n            // Show the cards.\n            cardsElement.classList.remove('hide');\n            trendElement.classList.remove('hide');\n            tableElement.classList.remove('hide');\n            periodElement.classList.remove('hide');\n\n            ChartData.getCardCharts(quizId);\n            TableHandler.getTable(quizId);\n            refreshCounter();\n\n            tableSearchInputElement.addEventListener('keyup', TableHandler.tableSearch);\n            tableSearchInputElement.addEventListener('paste', TableHandler.tableSearch);\n            tableSearchResetElement.addEventListener('click', TableHandler.tableSearchReset);\n            tableSearchRowsElement.addEventListener('click', TableHandler.tableSearchRowSet);\n\n            $('[data-toggle=\"tooltip\"]').tooltip();\n\n            return;\n        }).fail(() => {\n            Notification.exception(new Error('Failed to get quiz data'));\n        });\n    };\n\n    /**\n     * Handle processing of refresh and period button actions.\n     *\n     * @param {Event} event The triggered event for the element.\n     */\n    const refreshAction = function(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.closest('button') !== null && element.closest('button').id === 'local-assessfreq-refresh-quiz-dashboard') {\n            refreshCounter(true);\n            processDashboard(quizId);\n        } else if (element.tagName.toLowerCase() === 'a') {\n            let refreshElement = document.getElementById('local-assessfreq-period-container');\n            let actionButton = refreshElement.getElementsByClassName('dropdown-toggle')[0];\n            actionButton.textContent = element.innerHTML;\n\n            let activeoptions = refreshElement.getElementsByClassName('active');\n\n            // Fix active classes.\n            for (var i = 0; i < activeoptions.length; i++) {\n                activeoptions[i].classList.remove('active');\n            }\n            element.classList.add('active');\n\n            refreshPeriod = element.dataset.period;\n            refreshCounter(true);\n            UserPreference.setUserPreference('local_assessfreq_quiz_refresh_preference', refreshPeriod);\n        }\n    };\n\n    /**\n     * Trigger the zoom graph. Thin wrapper to add extra data to click event.\n     *\n     * @param {Event} event The triggered event for the element.\n     */\n    const triggerZoomGraph = function(event) {\n        let call = event.target.closest('div').dataset.call;\n        let params = {'data': JSON.stringify({'quiz': quizId, 'call': call})};\n        let method = 'get_quiz_chart';\n\n        ZoomModal.zoomGraph(event, params, method);\n    };\n\n    /**\n     * Initialise method for quiz dashboard rendering.\n     *\n     * @param {int} context The context id.\n     * @param {int} quiz The quiz id.\n     */\n    DashboardQuiz.init = function(context, quiz) {\n        contextid = context;\n        FormModal.init(context, processDashboard); // Create modal for quiz selection modal.\n        ZoomModal.init(context); // Create the zoom modal.\n        OverrideModal.init(context, processDashboard);\n        TableHandler.init(\n            quizId,\n            contextid,\n            'local-assessfreq-quiz-student-table',\n            'local-assessfreq-quiz-table',\n            'get_student_table',\n            'local_assessfreq_quiz_table_rows_preference',\n            'local-assessfreq-quiz-student-table-search',\n            'local_assessfreq_student_table',\n            'local_assessfreq_set_table_preference',\n            'local-assessfreq-quiz-student-table-rows-filter'\n        );\n        ChartData.init(cards, context, 'get_quiz_chart', 'local_assessfreq/chart');\n        Str.get_string('loadingquiztitle', 'local_assessfreq').then((str) => {\n            selectQuizStr = str;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loadingquiz'));\n        }).then(() => {\n            if (quiz > 0) {\n                quizId = quiz;\n                processDashboard(quiz);\n            }\n        });\n\n        UserPreference.getUserPreference('local_assessfreq_quiz_refresh_preference')\n        .then((response) => {\n            refreshPeriod = response.preferences[0].value ? response.preferences[0].value : 60;\n        })\n        .fail(() => {\n            Notification.exception(new Error('Failed to get use preference: refresh'));\n        });\n\n        // Event handling for refresh and period buttons.\n        let refreshElement = document.getElementById('local-assessfreq-period-container');\n        refreshElement.addEventListener('click', refreshAction);\n\n        // Set up zoom event listeners.\n        let summaryZoom = document.getElementById('local-assessfreq-quiz-summary-graph-zoom');\n        summaryZoom.addEventListener('click', triggerZoomGraph);\n\n        let trendZoom = document.getElementById('local-assessfreq-quiz-summary-trend-zoom');\n        trendZoom.addEventListener('click', triggerZoomGraph);\n\n    };\n\n    return DashboardQuiz;\n});\n"],"file":"dashboard_quiz.min.js"}