{"version":3,"sources":["../src/dashboard_quiz.js"],"names":["define","FormModal","Ajax","Notification","Str","Fragment","Templates","DashboardQuiz","selectQuizStr","contextid","quizId","cards","cardId","call","getCardCharts","forEach","cardData","cardElement","document","getElementById","spinner","getElementsByClassName","chartbody","params","JSON","stringify","classList","remove","loadFragment","done","response","render","html","js","add","replaceNodeContents","fail","exception","Error","getStudentTable","tableElement","tableBody","innerHTML","processDashboard","quiz","titleElement","methodname","args","quizid","then","quizArray","parse","cardsElement","trendElement","summaryElement","summarySpinner","name","currentdUrl","URL","window","location","href","newUrl","origin","pathname","history","pushState","timeopen","timeclose","timelimit","earlyopen","lateclose","participants","overrideparticipants","questioncount","typecount","console","log","init","context","get_string","str","catch"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['local_assessfreq/form_modal', 'core/ajax', 'core/notification', 'core/str', 'core/fragment', 'core/templates'],\nfunction(FormModal, Ajax, Notification, Str, Fragment, Templates) {\n\n    /**\n     * Module level variables.\n     */\n    var DashboardQuiz = {};\n    var selectQuizStr = '';\n    var contextid;\n    var quizId = 0;\n\n    const cards = [\n        {cardId: 'local-assessfreq-quiz-summary-graph', call: 'participant_summary'},\n        {cardId: 'local-assessfreq-quiz-summary-trend', call: 'participant_trend'}\n    ];\n\n    /**\n     * For each of the cards on the dashbaord get their corresponding chart data.\n     * Data is based on the year variable from the corresponding dropdown.\n     * Chart data is loaded via ajax.\n     *\n     */\n    const getCardCharts = function() {\n        cards.forEach((cardData) => {\n            let cardElement = document.getElementById(cardData.cardId);\n            let spinner = cardElement.getElementsByClassName('overlay-icon-container')[0];\n            let chartbody = cardElement.getElementsByClassName('chart-body')[0];\n            let params = {'data': JSON.stringify({'quiz' : quizId, 'call': cardData.call})};\n\n            spinner.classList.remove('hide'); // Show sinner if not already shown.\n            Fragment.loadFragment('local_assessfreq', 'get_quiz_chart', contextid, params)\n            .done((response) => {\n                var context = { 'withtable' : true, 'chartdata' : response };\n                Templates.render('core/chart', context).done((html, js) => {\n                    spinner.classList.add('hide'); // Hide spinner if not already hidden.\n                    // Load card body.\n                    Templates.replaceNodeContents(chartbody, html, js);\n                }).fail(() => {\n                    Notification.exception(new Error('Failed to load chart template.'));\n                    return;\n                });\n                return;\n            }).fail(() => {\n                Notification.exception(new Error('Failed to load card.'));\n                return;\n            });\n        });\n    };\n\n    /**\n     * Display the table that contains all the students in the exam as well as their attempts.\n     */\n    const getStudentTable = function() {\n        let tableElement = document.getElementById('local-assessfreq-quiz-table');\n        let spinner = tableElement.getElementsByClassName('overlay-icon-container')[0];\n        let tableBody = tableElement.getElementsByClassName('table-body')[0];\n        let params = {'data': JSON.stringify({'quiz' : quizId})};\n\n        spinner.classList.remove('hide'); // Show spinner if not already shown.\n        Fragment.loadFragment('local_assessfreq', 'get_student_table', contextid, params)\n        .done((response) => {\n            tableBody.innerHTML = response;\n            spinner.classList.add('hide');\n            //tableEventListeners(); // Re-add table event listeners.\n\n        }).fail(() => {\n            Notification.exception(new Error('Failed to update table.'));\n        });\n    };\n\n    /**\n     * Callback function that is called when a quiz is selected from the form.\n     * Starts the processing of the dashbaord.\n     */\n    const processDashboard = function(quiz) {\n        quizId = quiz;\n        let titleElement = document.getElementById('local-assessfreq-quiz-title');\n        titleElement.innerHTML = selectQuizStr;\n        // Get quiz data.\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_quiz_data',\n            args: {\n                quizid: quiz\n            },\n        }])[0].then((response) => {\n\n            let quizArray = JSON.parse(response);\n            let cardsElement = document.getElementById('local-assessfreq-quiz-dashboard-cards-deck');\n            let trendElement = document.getElementById('local-assessfreq-quiz-dashboard-participant-trend-deck');\n            let summaryElement = document.getElementById('local-assessfreq-quiz-summary-card');\n            let summarySpinner = summaryElement.getElementsByClassName('overlay-icon-container')[0];\n            let tableElement = document.getElementById('local-assessfreq-quiz-table');\n\n            titleElement.innerHTML = quizArray.name;\n\n            // Update page URL with quiz ID, without reloading page so that page navigation and bookmarking works.\n            const currentdUrl = new URL(window.location.href);\n            const newUrl = currentdUrl.origin + currentdUrl.pathname + '?id=' + quizId;\n            history.pushState({}, '', newUrl);\n\n            // Populate quiz summary card with details.\n            document.getElementById('quiz-time-open').innerHTML = quizArray.timeopen;\n            document.getElementById('quiz-time-close').innerHTML = quizArray.timeclose;\n            document.getElementById('quiz-time-limit').innerHTML = quizArray.timelimit;\n            document.getElementById('quiz-time-earlyopen').innerHTML = quizArray.earlyopen;\n            document.getElementById('quiz-time-lateclose').innerHTML = quizArray.lateclose;\n            document.getElementById('quiz-participants').innerHTML = quizArray.participants;\n            document.getElementById('quiz-participants-override').innerHTML = quizArray.overrideparticipants;\n            document.getElementById('quiz-question-number').innerHTML = quizArray.questioncount;\n            document.getElementById('quiz-question-types').innerHTML = quizArray.typecount;\n\n            // Show the cards.\n            cardsElement.classList.remove('hide');\n            trendElement.classList.remove('hide');\n            tableElement.classList.remove('hide');\n            summarySpinner.classList.add('hide');\n            getCardCharts();\n            getStudentTable();\n            // TODO: Set up auto refresh of cards.\n            // TODO: Cancel autorefresh of cards while quiz in changing.\n\n            window.console.log(quizArray);\n            return;\n        }).fail(() => {\n            Notification.exception(new Error('Failed to get quiz data'));\n        });\n    };\n\n    /**\n     * Initialise method for quiz dashboard rendering.\n     */\n    DashboardQuiz.init = function(context, quiz) {\n        contextid = context;\n        FormModal.init(context, processDashboard);\n\n        Str.get_string('loadingquiztitle', 'local_assessfreq').then((str) => {\n            selectQuizStr = str;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loadingquiz'));\n        }).then(() => {\n            if (quiz > 0) {\n                quizId = quiz;\n                processDashboard(quiz);\n            }\n        });\n    };\n\n    return DashboardQuiz;\n});\n"],"file":"dashboard_quiz.min.js"}