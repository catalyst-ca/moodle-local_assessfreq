{"version":3,"sources":["../src/dashboard_quiz.js"],"names":["define","Ajax","Fragment","Templates","Notification","Calendar","Str","ModalFactory","ModalLarge","Dayview","DashboardAssessment","contextid","yearselect","yearselectheatmap","metricselectheatmap","timeout","modulesJson","heatmapOptionsJson","modalObj","cards","cardId","call","updateUserPreferences","type","value","methodname","args","preferences","fail","exception","Error","getCardCharts","forEach","cardData","cardElement","document","getElementById","spinner","getElementsByClassName","chartbody","params","JSON","stringify","classList","remove","loadFragment","done","response","render","html","js","add","replaceNodeContents","yearButtonAction","event","element","target","tagName","toLowerCase","dataset","year","yeartitle","innerHTML","updateHeatmapDebounce","clearTimeout","setTimeout","updateHeatmap","detailView","display","date","generateHeatmap","heatmapOptions","parse","parseInt","metric","modules","heatmapContainer","generate","then","calendar","calendarContainer","addEventListener","catch","updateDownload","downloadForm","formElements","elements","toRemove","length","i","name","startsWith","push","input","createElement","appendChild","cardsModulesSelectHeatmapElement","links","getElementsByTagName","contains","module","optionsObj","optionsJson","yearHeatmapButtonAction","preventDefault","metricHeatmapButtonAction","moduleListChildrenEvents","all","j","stopPropagation","dropdownmenu","toggle","zoomGraph","title","parentElement","setTitle","setBody","show","createModal","Promise","resolve","reject","get_string","create","TYPE","body","modal","init","context","cardsYearSelectElement","cardsYearSelectHeatmapElement","cardsMetricSelectHeatmapElement","dueMonthZoom","dueActivityZoom","dueStudentZoom"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/ajax', 'core/fragment', 'core/templates', 'core/notification', 'local_assessfreq/calendar', 'core/str',\n    'core/modal_factory', 'local_assessfreq/modal_large', 'local_assessfreq/dayview'],\nfunction(Ajax, Fragment, Templates, Notification, Calendar, Str, ModalFactory, ModalLarge, Dayview) {\n\n    /**\n     * Module level variables.\n     */\n    var DashboardAssessment = {};\n    var contextid;\n    var yearselect;\n    var yearselectheatmap;\n    var metricselectheatmap;\n    var timeout;\n    var modulesJson = '';\n    var heatmapOptionsJson = '';\n    var modalObj;\n    const spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\n        + '</p>';\n\n    const cards = [\n        {cardId: 'local-assessfreq-assess-due-month', call: 'assess_by_month'},\n        {cardId: 'local-assessfreq-assess-by-activity', call: 'assess_by_activity'},\n        {cardId: 'local-assessfreq-assess-due-month-student', call: 'assess_by_month_student'}\n    ];\n\n    /**\n     * Generic handler to persist user preferences\n     *\n     * @param {string} type The name of the attribute you're updating\n     * @param {string} value The value of the attribute you're updating\n     */\n    const updateUserPreferences = function(type, value) {\n        var request = {\n            methodname: 'core_user_update_user_preferences',\n            args: {\n                preferences: [{type: type, value: value}]\n            }\n        };\n\n        Ajax.call([request])[0]\n        .fail(() => {\n            Notification.exception(new Error('Failed to update user preference'));\n        });\n    };\n\n    /**\n     * For each of the cards on the dashbaord get their corresponding chart data.\n     * Data is based on the year variable from the corresponding dropdown.\n     * Chart data is loaded via ajax.\n     *\n     */\n    const getCardCharts = function() {\n        cards.forEach((cardData) => {\n            let cardElement = document.getElementById(cardData.cardId);\n            let spinner = cardElement.getElementsByClassName('overlay-icon-container')[0];\n            let chartbody = cardElement.getElementsByClassName('chart-body')[0];\n            let params = {'data': JSON.stringify({'year' : yearselect, 'call': cardData.call})};\n\n            spinner.classList.remove('hide'); // Show sinner if not already shown.\n            Fragment.loadFragment('local_assessfreq', 'get_chart', contextid, params)\n            .done((response) => {\n                var context = { 'withtable' : true, 'chartdata' : response };\n                Templates.render('core/chart', context).done((html, js) => {\n                    spinner.classList.add('hide'); // Hide sinner if not already hidden.\n                    // Load card body.\n                    Templates.replaceNodeContents(chartbody, html, js);\n                }).fail(() => {\n                    Notification.exception(new Error('Failed to load chart template.'));\n                    return;\n                });\n                return;\n            }).fail(() => {\n                Notification.exception(new Error('Failed to load card year filter'));\n                return;\n            });\n        });\n    };\n\n    /**\n     * Get and process the selected year from the dropdown,\n     * and update the corresponding user perference.\n     *\n     * @param {event} event The triggered event for the element.\n     */\n    const yearButtonAction = function(event) {\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.year != yearselect) { // Only act on certain elements.\n            yearselect = element.dataset.year;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_overview_year_preference', yearselect);\n\n            // Update card data based on selected year.\n            var yeartitle = document.getElementById('local-assessfreq-report-overview')\n                .getElementsByClassName('local-assessfreq-year')[0];\n            yeartitle.innerHTML = yearselect;\n\n            getCardCharts(); // Process loading for the assessment cards.\n        }\n    };\n\n    /**\n     * Quick and dirty debounce method for the heatmap settings menu.\n     * This stops the ajax method that updates the heatmap from being updated\n     * while the user is still checking options.\n     *\n     */\n    const updateHeatmapDebounce = function() {\n        clearTimeout(timeout);\n        timeout = setTimeout(updateHeatmap(), 750);\n    };\n\n    /**\n     *\n     */\n    const detailView = function(event) {\n        let element = event.target;\n        if (element.tagName.toLowerCase() === 'td' && element.dataset.event == 'true') { // Only act on certain elements.\n            Dayview.display(element.dataset.date);\n        }\n    };\n\n    /**\n     * Start heatmap generation.\n     *\n     */\n    const generateHeatmap = function() {\n        let heatmapOptions = JSON.parse(heatmapOptionsJson);\n        let year = parseInt(heatmapOptions.year);\n        let metric = heatmapOptions.metric;\n        let modules = heatmapOptions.modules;\n        let heatmapContainer = document.getElementById('local-assessfreq-report-heatmap');\n        let spinner = heatmapContainer.getElementsByClassName('overlay-icon-container')[0];\n\n        spinner.classList.remove('hide'); // Show spinner if not already shown.\n\n        Calendar.generate(year, 0, 11, metric, modules).then(calendar => {\n            let calendarContainer = document.getElementById('local-assessfreq-report-heatmap-months');\n            calendarContainer.innerHTML = calendar.innerHTML;\n            calendarContainer.addEventListener('click', detailView);\n            spinner.classList.add('hide'); // Hide sinner if not already hidden.\n            return;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to calendar.'));\n            return;\n        });\n    };\n\n    const updateDownload = ({year, metric, modules}) => {\n        let downloadForm = document.getElementById('local-assessfreq-heatmap-form');\n        let formElements = downloadForm.elements;\n        let toRemove = new Array();\n\n        if (modules.length == 0) {\n            modules = ['all'];\n        }\n\n        for (let i = 0; i < formElements.length; i++) {\n            if (formElements[i] === undefined) {\n                continue;\n            }\n            // Update year field.\n            if((formElements[i].type === 'hidden') && (formElements[i].name === 'year')) {\n                formElements[i].value = year;\n                continue;\n            }\n\n            // Update metric field.\n            if((formElements[i].type === 'hidden') && (formElements[i].name === 'metric')) {\n                formElements[i].value = metric;\n                continue;\n            }\n\n            // Update module fields.\n            if((formElements[i].type === 'hidden') && (formElements[i].name.startsWith('modules'))) {\n                toRemove.push(formElements[i]);\n                continue;\n            }\n        }\n\n        for (const element of toRemove) {\n            element.remove();\n        }\n\n        for (let i = 0; i < modules.length; i++) {\n            let input = document.createElement('input');\n            input.type = 'hidden';\n            input.name = 'modules[' + modules[i] + ']';\n            input.value = modules[i];\n\n            downloadForm.appendChild(input);\n        }\n    };\n\n    /**\n     * Update the heatmap based on the current filter settings.\n     *\n     */\n    const updateHeatmap = function() {\n        // Get current state of select menu items.\n        var cardsModulesSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-modules');\n        var links = cardsModulesSelectHeatmapElement.getElementsByTagName('a');\n        var modules = [];\n\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].classList.contains('active')) {\n                let module = links[i].dataset.module;\n                modules.push(module);\n            }\n        }\n\n        // Save selection as a user preference.\n        if (modulesJson !== JSON.stringify(modules)) {\n            modulesJson = JSON.stringify(modules);\n            updateUserPreferences('local_assessfreq_heatmap_modules_preference', modulesJson);\n        }\n\n        // Build settings object.\n        var optionsObj = {\n            'year' : yearselectheatmap,\n            'metric' : metricselectheatmap,\n            'modules' : modules\n        };\n\n        var optionsJson = JSON.stringify(optionsObj);\n\n        if(optionsJson !== heatmapOptionsJson) { // Compare to global to see if there are any changes.\n            // If list has changed fetch heatmap and update user preference.\n            heatmapOptionsJson = optionsJson;\n            generateHeatmap();\n\n            // Update the download options.\n            updateDownload(optionsObj);\n        }\n    };\n\n    /**\n     * Get and process the selected year from the dropdown for the heatmap display,\n     * and update the corresponding user perference.\n     *\n     * @param {event} event The triggered event for the element.\n     */\n    const yearHeatmapButtonAction = function(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.year != yearselectheatmap) { // Only act on certain elements.\n            yearselectheatmap = element.dataset.year;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_heatmap_year_preference', yearselectheatmap);\n\n            // Update card data based on selected year.\n            var yeartitle = document.getElementById('local-assessfreq-report-heatmap')\n                .getElementsByClassName('local-assessfreq-year')[0];\n            yeartitle.innerHTML = yearselectheatmap;\n\n            updateHeatmapDebounce(); // Call function to update heatmap.\n        }\n    };\n\n    /**\n     * Get and process the selected assessment metric from the dropdown for the heatmap display,\n     * and update the corresponding user perference.\n     *\n     * @param {event} event The triggered event for the element.\n     */\n    const metricHeatmapButtonAction = function(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.metric != metricselectheatmap) {\n            metricselectheatmap = element.dataset.metric;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_heatmap_metric_preference', metricselectheatmap);\n\n            updateHeatmapDebounce(); // Call function to update heatmap.\n        }\n    };\n\n    /**\n     * Add the event listeners to the modules in the module select dropdown.\n     *\n     * @param {Object} element The dropdown HTML element that contains the list of modules as links.\n     */\n    const moduleListChildrenEvents = function(element) {\n        var links = element.getElementsByTagName('a');\n        var all = links[0];\n\n        for (var i = 0; i < links.length; i++) {\n            let module = links[i].dataset.module;\n\n            if (module.toLowerCase() === 'all') {\n                links[i].addEventListener('click', function(event){\n                    event.preventDefault();\n                    // Remove active class from all other links.\n                    for (var j = 0; j < links.length; j++) {\n                        links[j].classList.remove('active');\n                    }\n                    updateHeatmapDebounce(); // Call function to update heatmap.\n                });\n            } else if (module.toLowerCase() === 'close') {\n                links[i].addEventListener('click', function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    var dropdownmenu = document.getElementById('local-assessfreq-heatmap-modules-filter');\n                    dropdownmenu.classList.remove('show');\n\n                    updateHeatmapDebounce(); // Call function to update heatmap.\n                });\n\n            } else {\n                links[i].addEventListener('click', function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    all.classList.remove('active');\n\n                    event.target.classList.toggle('active');\n                    updateHeatmapDebounce();\n                });\n            }\n\n        }\n    };\n\n    /**\n     *\n     */\n    const zoomGraph = function(event) {\n        let title = event.target.parentElement.dataset.title;\n        let call = event.target.parentElement.dataset.call;\n\n        let params = {'data': JSON.stringify({'year' : yearselect, 'call': call})};\n\n        Fragment.loadFragment('local_assessfreq', 'get_chart', contextid, params)\n        .done((response) => {\n            var context = { 'withtable' : true, 'chartdata' : response };\n            modalObj.setTitle(title);\n            modalObj.setBody(Templates.render('core/chart', context));\n            modalObj.show();\n            return;\n        }).fail(() => {\n            Notification.exception(new Error('Failed to load card year filter'));\n            return;\n        });\n\n    };\n\n    /**\n     * Create the modal window for graph zooming.\n     *\n     * @private\n     */\n    const createModal = function() {\n        return new Promise((resolve, reject) => {\n            Str.get_string('loading', 'core').then((title) => {\n                // Create the Modal.\n\n                ModalFactory.create({\n                    type: ModalLarge.TYPE,\n                    title: title,\n                    body: spinner\n                })\n                .done((modal) => {\n                    modalObj = modal;\n                    resolve();\n                });\n            }).catch(() => {\n                reject(new Error('Failed to load string: loading'));\n            });\n        });\n    };\n\n    /**\n     * Initialise method for report card rendering.\n     *\n     * @param {integer} context The current context id.\n     */\n    DashboardAssessment.init = function(context) {\n        contextid = context;\n\n        // Set up event listener and related actions for year dropdown on report cards.\n        let cardsYearSelectElement = document.getElementById('local-assessfreq-cards-year');\n        yearselect = cardsYearSelectElement.getElementsByClassName('active')[0].dataset.year;\n        cardsYearSelectElement.addEventListener('click', yearButtonAction);\n\n        // Set up event listener and related actions for year dropdown on heatmp.\n        let cardsYearSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-year');\n        yearselectheatmap = cardsYearSelectHeatmapElement.getElementsByClassName('active')[0].dataset.year;\n        cardsYearSelectHeatmapElement.addEventListener('click', yearHeatmapButtonAction);\n\n        // Set up event listener and related actions for metric dropdown on heatmp.\n        let cardsMetricSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-metrics');\n        metricselectheatmap = cardsMetricSelectHeatmapElement.getElementsByClassName('active')[0].dataset.metric;\n        cardsMetricSelectHeatmapElement.addEventListener('click', metricHeatmapButtonAction);\n\n        // Set up event listener and related actions for module dropdown on heatmp.\n        let cardsModulesSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-modules');\n        moduleListChildrenEvents(cardsModulesSelectHeatmapElement);\n\n        // Set up zoom event listeners.\n        let dueMonthZoom = document.getElementById('local-assessfreq-assess-due-month-zoom');\n        dueMonthZoom.addEventListener('click', zoomGraph);\n\n        let dueActivityZoom = document.getElementById('local-assessfreq-assess-by-activity-zoom');\n        dueActivityZoom.addEventListener('click', zoomGraph);\n\n        let dueStudentZoom = document.getElementById('local-assessfreq-assess-due-month-student-zoom');\n        dueStudentZoom.addEventListener('click', zoomGraph);\n\n        // Create the zoom modal.\n        createModal();\n\n        // Setup the dayview modal.\n        Dayview.init();\n\n        // Process loading for the assessment cards.\n        getCardCharts();\n\n        // Get the data for the heatmap.\n        updateHeatmap();\n\n    };\n\n    return DashboardAssessment;\n});\n"],"file":"dashboard_quiz.min.js"}