{"version":3,"sources":["../src/dashboard_quiz.js"],"names":["selectQuizStr","contextid","quizId","refreshPeriod","counterid","cards","cardId","call","aspect","refreshCounter","reset","progressElement","document","getElementById","clearInterval","setAttribute","setInterval","progressWidthAria","getAttribute","progressStep","processDashboard","quiz","titleElement","innerHTML","Ajax","methodname","args","quizid","then","response","quizArray","JSON","parse","cardsElement","trendElement","summaryElement","summarySpinner","getElementsByClassName","tableElement","periodElement","tableSearchInputElement","tableSearchResetElement","tableSearchRowsElement","quizLink","createElement","href","url","name","appendChild","currentdUrl","URL","window","location","newUrl","origin","pathname","history","pushState","Str","get_string","courseshortname","str","title","catch","Notification","exception","Error","Templates","render","done","html","classList","add","contentcontainer","replaceNodeContents","fail","remove","ChartData","getCardCharts","TableHandler","getTable","addEventListener","tableSearch","tableSearchReset","tableSearchRowSet","refreshAction","event","preventDefault","element","target","closest","id","tagName","toLowerCase","dataset","period","UserPreference","setUserPreference","triggerZoomGraph","params","stringify","ZoomModal","zoomGraph","init","context","FormModal","OverrideModal","getUserPreference","preferences","value","refreshElement","summaryZoom","trendZoom"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @module     local_assessfreq/dashboard_quiz\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport * as Str from 'core/str';\nimport Templates from 'core/templates';\nimport * as ChartData from 'local_assessfreq/chart_data';\nimport * as FormModal from 'local_assessfreq/form_modal';\nimport OverrideModal from 'local_assessfreq/override_modal';\nimport * as TableHandler from 'local_assessfreq/table_handler';\nimport * as UserPreference from 'local_assessfreq/user_preferences';\nimport * as ZoomModal from 'local_assessfreq/zoom_modal';\n\n/**\n * Module level variables.\n */\nvar selectQuizStr = '';\nvar contextid;\nvar quizId = 0;\nvar refreshPeriod = 60;\nvar counterid;\n\nconst cards = [\n    {cardId: 'local-assessfreq-quiz-summary-graph', call: 'participant_summary', aspect: true},\n    {cardId: 'local-assessfreq-quiz-summary-trend', call: 'participant_trend', aspect: false}\n];\n\n/**\n * Function for refreshing the counter.\n *\n * @param {boolean} reset the current count process.\n */\nconst refreshCounter = (reset = true) => {\n    let progressElement = document.getElementById('local-assessfreq-period-progress');\n\n    // Reset the current count process.\n    if (reset === true) {\n        clearInterval(counterid);\n        counterid = null;\n        progressElement.setAttribute('style', 'width: 100%');\n        progressElement.setAttribute('aria-valuenow', 100);\n    }\n\n    // Exit early if there is already a counter running.\n    if (counterid) {\n        return;\n    }\n\n    counterid = setInterval(() => {\n        let progressWidthAria = progressElement.getAttribute('aria-valuenow');\n        const progressStep = 100 / refreshPeriod;\n\n        if ((progressWidthAria - progressStep) > 0) {\n            progressElement.setAttribute('style', 'width: ' + (progressWidthAria - progressStep) + '%');\n            progressElement.setAttribute('aria-valuenow', (progressWidthAria - progressStep));\n        } else {\n            clearInterval(counterid);\n            counterid = null;\n            progressElement.setAttribute('style', 'width: 100%');\n            progressElement.setAttribute('aria-valuenow', 100);\n            processDashboard(quizId);\n            refreshCounter();\n        }\n    }, (1000));\n};\n\n/**\n * Callback function that is called when a quiz is selected from the form.\n * Starts the processing of the dashboard.\n *\n * @param {int} quiz The quiz Id.\n */\nconst processDashboard = (quiz) => {\n    quizId = quiz;\n    let titleElement = document.getElementById('local-assessfreq-quiz-title');\n    titleElement.innerHTML = selectQuizStr;\n    // Get quiz data.\n    Ajax.call([{\n        methodname: 'local_assessfreq_get_quiz_data',\n        args: {\n            quizid: quiz\n        },\n    }])[0].then((response) => {\n\n        let quizArray = JSON.parse(response);\n        let cardsElement = document.getElementById('local-assessfreq-quiz-dashboard-cards-deck');\n        let trendElement = document.getElementById('local-assessfreq-quiz-dashboard-participant-trend-deck');\n        let summaryElement = document.getElementById('local-assessfreq-quiz-summary-card');\n        let summarySpinner = summaryElement.getElementsByClassName('overlay-icon-container')[0];\n        let tableElement = document.getElementById('local-assessfreq-quiz-table');\n        let periodElement = document.getElementById('local-assessfreq-period-container');\n        let tableSearchInputElement = document.getElementById('local-assessfreq-quiz-student-table-search');\n        let tableSearchResetElement = document.getElementById('local-assessfreq-quiz-student-table-search-reset');\n        let tableSearchRowsElement = document.getElementById('local-assessfreq-quiz-student-table-rows');\n\n        let quizLink = document.createElement('a');\n        quizLink.href = quizArray.url;\n        quizLink.innerHTML = '<i class=\"fa fa-link fa-flip-vertical fa-fw\"></i>';\n        titleElement.innerHTML = quizArray.name + '&nbsp;';\n        titleElement.appendChild(quizLink);\n\n        // Update page URL with quiz ID, without reloading page so that page navigation and bookmarking works.\n        const currentdUrl = new URL(window.location.href);\n        const newUrl = currentdUrl.origin + currentdUrl.pathname + '?id=' + quizId;\n        history.pushState({}, '', newUrl);\n\n        // Update page title with quiz name.\n        Str.get_string('dashboard:quiztitle', 'local_assessfreq', {'quiz': quizArray.name, 'course': quizArray.courseshortname})\n        .then((str) => {\n            document.title = str;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: dashboard:quiztitle'));\n        });\n\n        // Populate quiz summary card with details.\n        Templates.render('local_assessfreq/quiz-summary-card-content', quizArray).done((html) => {\n            summarySpinner.classList.add('hide');\n            let contentcontainer = document.getElementById('local-assessfreq-quiz-summary-card-content');\n            Templates.replaceNodeContents(contentcontainer, html, '');\n        }).fail(() => {\n            Notification.exception(new Error('Failed to load quiz summary template.'));\n            return;\n        });\n\n        // Show the cards.\n        cardsElement.classList.remove('hide');\n        trendElement.classList.remove('hide');\n        tableElement.classList.remove('hide');\n        periodElement.classList.remove('hide');\n\n        ChartData.getCardCharts(quizId);\n        TableHandler.getTable(quizId);\n        refreshCounter();\n\n        tableSearchInputElement.addEventListener('keyup', TableHandler.tableSearch);\n        tableSearchInputElement.addEventListener('paste', TableHandler.tableSearch);\n        tableSearchResetElement.addEventListener('click', TableHandler.tableSearchReset);\n        tableSearchRowsElement.addEventListener('click', TableHandler.tableSearchRowSet);\n\n        return;\n    }).fail(() => {\n        Notification.exception(new Error('Failed to get quiz data'));\n    });\n};\n\n/**\n * Handle processing of refresh and period button actions.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst refreshAction = (event) => {\n    event.preventDefault();\n    var element = event.target;\n\n    if (element.closest('button') !== null && element.closest('button').id === 'local-assessfreq-refresh-quiz-dashboard') {\n        refreshCounter(true);\n        processDashboard(quizId);\n    } else if (element.tagName.toLowerCase() === 'a') {\n        refreshPeriod = element.dataset.period;\n        refreshCounter(true);\n        UserPreference.setUserPreference('local_assessfreq_quiz_refresh_preference', refreshPeriod);\n    }\n};\n\n/**\n * Trigger the zoom graph. Thin wrapper to add extra data to click event.\n *\n * @param {Event} event The triggered event for the element.\n */\nconst triggerZoomGraph = (event) => {\n    let call = event.target.closest('div').dataset.call;\n    let params = {'data': JSON.stringify({'quiz': quizId, 'call': call})};\n    let method = 'get_quiz_chart';\n\n    ZoomModal.zoomGraph(event, params, method);\n};\n\n/**\n * Initialise method for quiz dashboard rendering.\n *\n * @param {int} context The context id.\n * @param {int} quiz The quiz id.\n */\nexport const init = (context, quiz) => {\n    contextid = context;\n    FormModal.init(context, processDashboard); // Create modal for quiz selection modal.\n    ZoomModal.init(context); // Create the zoom modal.\n    OverrideModal.init(context, processDashboard);\n    TableHandler.init(\n        quizId,\n        contextid,\n        'local-assessfreq-quiz-student-table',\n        'local-assessfreq-quiz-table',\n        'get_student_table',\n        'local_assessfreq_quiz_table_rows_preference',\n        'local-assessfreq-quiz-student-table-search',\n        'local_assessfreq_student_table',\n        'local_assessfreq_set_table_preference'\n    );\n    ChartData.init(cards, context, 'get_quiz_chart', 'local_assessfreq/chart');\n    Str.get_string('loadingquiztitle', 'local_assessfreq').then((str) => {\n        selectQuizStr = str;\n    }).catch(() => {\n        Notification.exception(new Error('Failed to load string: loadingquiz'));\n    }).then(() => {\n        if (quiz > 0) {\n            quizId = quiz;\n            processDashboard(quiz);\n        }\n    });\n\n    UserPreference.getUserPreference('local_assessfreq_quiz_refresh_preference')\n    .then((response) => {\n        refreshPeriod = response.preferences[0].value ? response.preferences[0].value : 60;\n    })\n    .fail(() => {\n        Notification.exception(new Error('Failed to get use preference: refresh'));\n    });\n\n    // Event handling for refresh and period buttons.\n    let refreshElement = document.getElementById('local-assessfreq-period-container');\n    refreshElement.addEventListener('click', refreshAction);\n\n    // Set up zoom event listeners.\n    let summaryZoom = document.getElementById('local-assessfreq-quiz-summary-graph-zoom');\n    summaryZoom.addEventListener('click', triggerZoomGraph);\n\n    let trendZoom = document.getElementById('local-assessfreq-quiz-summary-trend-zoom');\n    trendZoom.addEventListener('click', triggerZoomGraph);\n\n};\n"],"file":"dashboard_quiz.min.js"}