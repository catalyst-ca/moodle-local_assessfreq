{"version":3,"sources":["../src/reportcard.js"],"names":["define","Fragment","Templates","Notification","Ajax","Reportcard","contextid","yearselect","yearselectheatmap","metricselectheatmap","heatmapOptionsJson","timeout","cards","cardId","call","updateUserPreferences","type","value","methodname","args","preferences","fail","exception","Error","getCardCharts","forEach","cardData","cardElement","document","getElementById","spinner","getElementsByClassName","chartbody","params","JSON","stringify","classList","remove","loadFragment","done","response","render","html","js","add","replaceNodeContents","yearButtonAction","event","element","target","tagName","toLowerCase","dataset","year","yeartitle","innerHTML","updateHeatmap","yearHeatmapButtonAction","preventDefault","metricHeatmapButtonAction","metric","clearTimeout","setTimeout","cardsModulesSelectHeatmapElement","links","getElementsByTagName","modules","link","contains","module","push","optionsObj","optionsJson","window","console","log","moduleListChildrenEvents","all","addEventListener","stopPropagation","dropdownmenu","toggle","init","context","cardsYearSelectElement","cardsYearSelectHeatmapElement","cardsMetricSelectHeatmapElement"],"mappings":"AAuBAA,OAAM,+BACF,CAAC,eAAD,CAAkB,gBAAlB,CAAoC,mBAApC,CAAyD,WAAzD,CADE,CAEF,SAASC,CAAT,CAAmBC,CAAnB,CAA8BC,CAA9B,CAA4CC,CAA5C,CAAkD,IAK9CC,CAAAA,CAAU,CAAG,EALiC,CAM9CC,CAN8C,CAO9CC,CAP8C,CAQ9CC,CAR8C,CAS9CC,CAT8C,CAU9CC,CAAkB,CAAG,EAVyB,CAW9CC,CAX8C,CAa9CC,CAAK,CAAG,CACR,CAACC,MAAM,CAAE,mCAAT,CAA8CC,IAAI,CAAE,iBAApD,CADQ,CAER,CAACD,MAAM,CAAE,qCAAT,CAAgDC,IAAI,CAAE,oBAAtD,CAFQ,CAGR,CAACD,MAAM,CAAE,2CAAT,CAAsDC,IAAI,CAAE,yBAA5D,CAHQ,CAbsC,CAyBjD,QAASC,CAAAA,CAAT,CAA+BC,CAA/B,CAAqCC,CAArC,CAA4C,CAazCb,CAAI,CAACU,IAAL,CAAU,CAZI,CACVI,UAAU,CAAE,mCADF,CAEVC,IAAI,CAAE,CACFC,WAAW,CAAE,CACT,CACIJ,IAAI,CAAEA,CADV,CAEIC,KAAK,CAAEA,CAFX,CADS,CADX,CAFI,CAYJ,CAAV,EAAqB,CAArB,EACCI,IADD,CACM,UAAW,CACblB,CAAY,CAACmB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,kCAAV,CAAvB,CACH,CAHD,CAIH,CAKD,QAASC,CAAAA,CAAT,EAAyB,CACrBZ,CAAK,CAACa,OAAN,CAAc,SAASC,CAAT,CAAmB,IACzBC,CAAAA,CAAW,CAAGC,QAAQ,CAACC,cAAT,CAAwBH,CAAQ,CAACb,MAAjC,CADW,CAEzBiB,CAAO,CAAGH,CAAW,CAACI,sBAAZ,CAAmC,wBAAnC,EAA6D,CAA7D,CAFe,CAGzBC,CAAS,CAAGL,CAAW,CAACI,sBAAZ,CAAmC,YAAnC,EAAiD,CAAjD,CAHa,CAIzBE,CAAM,CAAG,CAAC,KAAQC,IAAI,CAACC,SAAL,CAAe,CAAC,KAAS5B,CAAV,CAAsB,KAAQmB,CAAQ,CAACZ,IAAvC,CAAf,CAAT,CAJgB,CAM7BgB,CAAO,CAACM,SAAR,CAAkBC,MAAlB,CAAyB,MAAzB,EAEApC,CAAQ,CAACqC,YAAT,CAAsB,kBAAtB,CAA0C,WAA1C,CAAuDhC,CAAvD,CAAkE2B,CAAlE,EACCM,IADD,CACM,SAASC,CAAT,CAAmB,CAGrBtC,CAAS,CAACuC,MAAV,CAAiB,YAAjB,CADc,CAAE,YAAF,CAAsB,UAAcD,CAApC,CACd,EACCD,IADD,CACM,SAASG,CAAT,CAAeC,CAAf,CAAmB,CACrBb,CAAO,CAACM,SAAR,CAAkBQ,GAAlB,CAAsB,MAAtB,EAEA1C,CAAS,CAAC2C,mBAAV,CAA8Bb,CAA9B,CAAyCU,CAAzC,CAA+CC,CAA/C,CACH,CALD,EAKGtB,IALH,CAKQ,UAAW,CACflB,CAAY,CAACmB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,gCAAV,CAAvB,CAEH,CARD,CAUH,CAdD,EAcGF,IAdH,CAcQ,UAAW,CACflB,CAAY,CAACmB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,iCAAV,CAAvB,CAEH,CAjBD,CAkBH,CA1BD,CA2BH,CAED,QAASuB,CAAAA,CAAT,CAA0BC,CAA1B,CAAiC,CAC7B,GAAIC,CAAAA,CAAO,CAAGD,CAAK,CAACE,MAApB,CAEA,GAAsC,GAAlC,GAAAD,CAAO,CAACE,OAAR,CAAgBC,WAAhB,IAAyCH,CAAO,CAACI,OAAR,CAAgBC,IAAhB,EAAwB9C,CAArE,CAAiF,CAC7EA,CAAU,CAAGyC,CAAO,CAACI,OAAR,CAAgBC,IAA7B,CAGAtC,CAAqB,CAAC,2CAAD,CAA8CR,CAA9C,CAArB,CAGA,GAAI+C,CAAAA,CAAS,CAAG1B,QAAQ,CAACC,cAAT,CAAwB,kCAAxB,EACKE,sBADL,CAC4B,uBAD5B,EACqD,CADrD,CAAhB,CAEAuB,CAAS,CAACC,SAAV,CAAsBhD,CAAtB,CAEAiD,CAAa,EAChB,CACJ,CAED,QAASC,CAAAA,CAAT,CAAiCV,CAAjC,CAAwC,CACpCA,CAAK,CAACW,cAAN,GACA,GAAIV,CAAAA,CAAO,CAAGD,CAAK,CAACE,MAApB,CAEA,GAAsC,GAAlC,GAAAD,CAAO,CAACE,OAAR,CAAgBC,WAAhB,IAAyCH,CAAO,CAACI,OAAR,CAAgBC,IAAhB,EAAwB7C,CAArE,CAAwF,CACpFA,CAAiB,CAAGwC,CAAO,CAACI,OAAR,CAAgBC,IAApC,CAGAtC,CAAqB,CAAC,0CAAD,CAA6CP,CAA7C,CAArB,CAGA,GAAI8C,CAAAA,CAAS,CAAG1B,QAAQ,CAACC,cAAT,CAAwB,iCAAxB,EACKE,sBADL,CAC4B,uBAD5B,EACqD,CADrD,CAAhB,CAEAuB,CAAS,CAACC,SAAV,CAAsB/C,CAAtB,CAEAgD,CAAa,EAChB,CACJ,CAED,QAASG,CAAAA,CAAT,CAAmCZ,CAAnC,CAA0C,CACtCA,CAAK,CAACW,cAAN,GACA,GAAIV,CAAAA,CAAO,CAAGD,CAAK,CAACE,MAApB,CAEA,GAAsC,GAAlC,GAAAD,CAAO,CAACE,OAAR,CAAgBC,WAAhB,IAAyCH,CAAO,CAACI,OAAR,CAAgBQ,MAAhB,EAA0BnD,CAAvE,CAA4F,CACxFA,CAAmB,CAAGuC,CAAO,CAACI,OAAR,CAAgBQ,MAAtC,CAGA7C,CAAqB,CAAC,4CAAD,CAA+CN,CAA/C,CAArB,CAEA+C,CAAa,EAChB,CACJ,CAED,QAASA,CAAAA,CAAT,EAAyB,CAErBK,YAAY,CAAClD,CAAD,CAAZ,CACAA,CAAO,CAAGmD,UAAU,CAAC,UAAU,IAGvBC,CAAAA,CAAgC,CAAGnC,QAAQ,CAACC,cAAT,CAAwB,kCAAxB,CAHZ,CAIvBmC,CAAK,CAAGD,CAAgC,CAACE,oBAAjC,CAAsD,GAAtD,CAJe,CAKvBC,CAAO,CAAG,EALa,wBAO3B,UAAiBF,CAAjB,sBAASG,CAAT,6BAAwB,CAAfA,CAAe,SACpB,GAAIA,CAAI,CAAC/B,SAAL,CAAegC,QAAf,CAAwB,QAAxB,CAAJ,CAAuC,CACnC,GAAIC,CAAAA,CAAM,CAAGF,CAAI,CAACf,OAAL,CAAaiB,MAA1B,CACAH,CAAO,CAACI,IAAR,CAAaD,CAAb,CACH,CACJ,CAZ0B,6FAcvBE,CAAAA,CAAU,CAAG,CACT,KAAS/D,CADA,CAET,OAAWC,CAFF,CAGT,QAAYyD,CAHH,CAdU,CAoBvBM,CAAW,CAAGtC,IAAI,CAACC,SAAL,CAAeoC,CAAf,CApBS,CAsB3B,GAAGC,CAAW,GAAK9D,CAAnB,CAAuC,CAEnCA,CAAkB,CAAG8D,CAArB,CACAC,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,0BAAnB,CACH,CACJ,CA3BmB,CA2BjB,GA3BiB,CA4BvB,CAED,QAASC,CAAAA,CAAT,CAAkC5B,CAAlC,CAA2C,IACnCgB,CAAAA,CAAK,CAAGhB,CAAO,CAACiB,oBAAR,CAA6B,GAA7B,CAD2B,CAEnCY,CAAG,CAAGb,CAAK,CAAC,CAAD,CAFwB,wBAIvC,UAAiBA,CAAjB,kDAAwB,IAAfG,CAAAA,CAAe,SAChBE,CAAM,CAAGF,CAAI,CAACf,OAAL,CAAaiB,MADN,CAGpB,GAA6B,KAAzB,GAAAA,CAAM,CAAClB,WAAP,EAAJ,CAAoC,CAChCgB,CAAI,CAACW,gBAAL,CAAsB,OAAtB,CAA+B,SAAS/B,CAAT,CAAe,CAC1CA,CAAK,CAACW,cAAN,GAD0C,2BAG1C,UAAiBM,CAAjB,sBAASG,CAAT,6BAAwB,CAAfA,CAAe,SACpBA,CAAI,CAAC/B,SAAL,CAAeC,MAAf,CAAsB,QAAtB,CACH,CALyC,0FAM1CmB,CAAa,EAChB,CAPD,CAQH,CATD,IASO,IAA6B,OAAzB,GAAAa,CAAM,CAAClB,WAAP,EAAJ,CAAsC,CACzCgB,CAAI,CAACW,gBAAL,CAAsB,OAAtB,CAA+B,SAAS/B,CAAT,CAAe,CAC1CA,CAAK,CAACW,cAAN,GACAX,CAAK,CAACgC,eAAN,GAEA,GAAIC,CAAAA,CAAY,CAAGpD,QAAQ,CAACC,cAAT,CAAwB,yCAAxB,CAAnB,CACAmD,CAAY,CAAC5C,SAAb,CAAuBC,MAAvB,CAA8B,MAA9B,EAEAmB,CAAa,EAChB,CARD,CAUH,CAXM,IAWA,CACHW,CAAI,CAACW,gBAAL,CAAsB,OAAtB,CAA+B,SAAS/B,CAAT,CAAe,CAC1CA,CAAK,CAACW,cAAN,GACAX,CAAK,CAACgC,eAAN,GAEAF,CAAG,CAACzC,SAAJ,CAAcC,MAAd,CAAqB,QAArB,EAEAU,CAAK,CAACE,MAAN,CAAab,SAAb,CAAuB6C,MAAvB,CAA8B,QAA9B,EACAzB,CAAa,EAChB,CARD,CASH,CAEJ,CAvCsC,0FAwC1C,CAODnD,CAAU,CAAC6E,IAAX,CAAkB,SAASC,CAAT,CAAkB,CAChC7E,CAAS,CAAG6E,CAAZ,CAGA,GAAIC,CAAAA,CAAsB,CAAGxD,QAAQ,CAACC,cAAT,CAAwB,6BAAxB,CAA7B,CACAtB,CAAU,CAAG6E,CAAsB,CAACrD,sBAAvB,CAA8C,QAA9C,EAAwD,CAAxD,EAA2DqB,OAA3D,CAAmEC,IAAhF,CACA+B,CAAsB,CAACN,gBAAvB,CAAwC,OAAxC,CAAiDhC,CAAjD,EAGA,GAAIuC,CAAAA,CAA6B,CAAGzD,QAAQ,CAACC,cAAT,CAAwB,+BAAxB,CAApC,CACArB,CAAiB,CAAG6E,CAA6B,CAACtD,sBAA9B,CAAqD,QAArD,EAA+D,CAA/D,EAAkEqB,OAAlE,CAA0EC,IAA9F,CACAgC,CAA6B,CAACP,gBAA9B,CAA+C,OAA/C,CAAwDrB,CAAxD,EAGA,GAAI6B,CAAAA,CAA+B,CAAG1D,QAAQ,CAACC,cAAT,CAAwB,kCAAxB,CAAtC,CACApB,CAAmB,CAAG6E,CAA+B,CAACvD,sBAAhC,CAAuD,QAAvD,EAAiE,CAAjE,EAAoEqB,OAApE,CAA4EQ,MAAlG,CACA0B,CAA+B,CAACR,gBAAhC,CAAiD,OAAjD,CAA0DnB,CAA1D,EAGA,GAAII,CAAAA,CAAgC,CAAGnC,QAAQ,CAACC,cAAT,CAAwB,kCAAxB,CAAvC,CACA+C,CAAwB,CAACb,CAAD,CAAxB,CAGAvC,CAAa,EAEhB,CAzBD,CA2BA,MAAOnB,CAAAA,CACV,CA9OK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    ['core/fragment', 'core/templates', 'core/notification', 'core/ajax'],\n    function(Fragment, Templates, Notification, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var Reportcard = {};\n    var contextid;\n    var yearselect;\n    var yearselectheatmap;\n    var metricselectheatmap;\n    var heatmapOptionsJson = '';\n    var timeout;\n\n    var cards = [\n        {cardId: 'local-assessfreq-assess-due-month', call: 'assess_by_month'},\n        {cardId: 'local-assessfreq-assess-by-activity', call: 'assess_by_activity'},\n        {cardId: 'local-assessfreq-assess-due-month-student', call: 'assess_by_month_student'}\n    ];\n\n    /**\n     * Generic handler to persist user preferences\n     *\n     * @param {string} type The name of the attribute you're updating\n     * @param {string} value The value of the attribute you're updating\n     */\n     function updateUserPreferences(type, value) {\n        var request = {\n            methodname: 'core_user_update_user_preferences',\n            args: {\n                preferences: [\n                    {\n                        type: type,\n                        value: value\n                    }\n                ]\n            }\n        };\n\n        Ajax.call([request])[0]\n        .fail(function() {\n            Notification.exception(new Error('Failed to update user preference'));\n        });\n    }\n\n    /**\n     *\n     */\n    function getCardCharts() {\n        cards.forEach(function(cardData) {\n            var cardElement = document.getElementById(cardData.cardId);\n            var spinner = cardElement.getElementsByClassName('overlay-icon-container')[0];\n            var chartbody = cardElement.getElementsByClassName('chart-body')[0];\n            var params = {'data': JSON.stringify({'year' : yearselect, 'call': cardData.call})};\n\n            spinner.classList.remove('hide'); // Show sinner if not already shown.\n\n            Fragment.loadFragment('local_assessfreq', 'get_chart', contextid, params)\n            .done(function(response) {\n\n                var context = { 'withtable' : true, 'chartdata' : response };\n                Templates.render('core/chart', context)\n                .done(function(html, js) {\n                    spinner.classList.add('hide'); // Hide sinner if not already hidden.\n                    // Load card body.\n                    Templates.replaceNodeContents(chartbody, html, js);\n                }).fail(function() {\n                    Notification.exception(new Error('Failed to load chart template.'));\n                    return;\n                });\n                return;\n            }).fail(function() {\n                Notification.exception(new Error('Failed to load card year filter'));\n                return;\n            });\n        });\n    }\n\n    function yearButtonAction(event) {\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.year != yearselect) { // Only act on certain elements.\n            yearselect = element.dataset.year;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_overview_year_preference', yearselect);\n\n            // Update card data based on selected year.\n            var yeartitle = document.getElementById('local-assessfreq-report-overview')\n                                .getElementsByClassName('local-assessfreq-year')[0];\n            yeartitle.innerHTML = yearselect;\n\n            updateHeatmap(); // Call function to update heatmap.\n        }\n    }\n\n    function yearHeatmapButtonAction(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.year != yearselectheatmap) { // Only act on certain elements.\n            yearselectheatmap = element.dataset.year;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_heatmap_year_preference', yearselectheatmap);\n\n            // Update card data based on selected year.\n            var yeartitle = document.getElementById('local-assessfreq-report-heatmap')\n                                .getElementsByClassName('local-assessfreq-year')[0];\n            yeartitle.innerHTML = yearselectheatmap;\n\n            updateHeatmap(); // Call function to update heatmap.\n        }\n    }\n\n    function metricHeatmapButtonAction(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.metric != metricselectheatmap) {\n            metricselectheatmap = element.dataset.metric;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_heatmap_metric_preference', metricselectheatmap);\n\n            updateHeatmap(); // Call function to update heatmap.\n        }\n    }\n\n    function updateHeatmap() {\n        // Dirty debouncing.\n        clearTimeout(timeout);\n        timeout = setTimeout(function(){\n\n            // Get current state of select menu items.\n            var cardsModulesSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-modules');\n            var links = cardsModulesSelectHeatmapElement.getElementsByTagName('a');\n            var modules = [];\n\n            for (let link of links) {\n                if (link.classList.contains('active')) {\n                    let module = link.dataset.module;\n                    modules.push(module);\n                }\n            }\n\n            var optionsObj = {\n                    'year' : yearselectheatmap,\n                    'metric' : metricselectheatmap,\n                    'modules' : modules\n            };\n\n            var optionsJson = JSON.stringify(optionsObj);\n\n            if(optionsJson !== heatmapOptionsJson) { // Compare to global to see if there are any changes.\n                // If list has changed fetch heatmap and update user preference.\n                heatmapOptionsJson = optionsJson;\n                window.console.log('updating user preference');\n            }\n        }, 750); // Debounce delay.\n    }\n\n    function moduleListChildrenEvents(element) {\n        var links = element.getElementsByTagName('a');\n        var all = links[0];\n\n        for (let link of links) {\n            let module = link.dataset.module;\n\n            if (module.toLowerCase() === 'all') {\n                link.addEventListener(\"click\", function(event){\n                    event.preventDefault();\n                    // Remove active class from all other links.\n                    for (let link of links) {\n                        link.classList.remove('active');\n                    }\n                    updateHeatmap(); // Call function to update heatmap.\n                });\n            } else if (module.toLowerCase() === 'close') {\n                link.addEventListener(\"click\", function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    var dropdownmenu = document.getElementById('local-assessfreq-heatmap-modules-filter');\n                    dropdownmenu.classList.remove('show');\n\n                    updateHeatmap(); // Call function to update heatmap.\n                });\n\n            } else {\n                link.addEventListener(\"click\", function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    all.classList.remove('active');\n\n                    event.target.classList.toggle('active');\n                    updateHeatmap();\n                });\n            }\n\n        }\n    }\n\n    /**\n     * Initialise method for report card rendering.\n     *\n     * @param {integer} context The current context id.\n     */\n    Reportcard.init = function(context) {\n        contextid = context;\n\n        // Set up event listener and related actions for year dropdown on report cards.\n        var cardsYearSelectElement = document.getElementById('local-assessfreq-cards-year');\n        yearselect = cardsYearSelectElement.getElementsByClassName('active')[0].dataset.year;\n        cardsYearSelectElement.addEventListener(\"click\", yearButtonAction);\n\n        // Set up event listener and related actions for year dropdown on heatmp.\n        var cardsYearSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-year');\n        yearselectheatmap = cardsYearSelectHeatmapElement.getElementsByClassName('active')[0].dataset.year;\n        cardsYearSelectHeatmapElement.addEventListener(\"click\", yearHeatmapButtonAction);\n\n        // Set up event listener and related actions for metric dropdown on heatmp.\n        var cardsMetricSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-metrics');\n        metricselectheatmap = cardsMetricSelectHeatmapElement.getElementsByClassName('active')[0].dataset.metric;\n        cardsMetricSelectHeatmapElement.addEventListener(\"click\", metricHeatmapButtonAction);\n\n        // Set up event listener and related actions for module dropdown on heatmp.\n        var cardsModulesSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-modules');\n        moduleListChildrenEvents(cardsModulesSelectHeatmapElement);\n\n        // Process loading for the assessment cards.\n        getCardCharts();\n\n    };\n\n    return Reportcard;\n});\n"],"file":"reportcard.min.js"}