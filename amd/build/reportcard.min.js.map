{"version":3,"sources":["../src/reportcard.js"],"names":["define","Ajax","Fragment","Templates","Notification","Calendar","Reportcard","contextid","yearselect","yearselectheatmap","metricselectheatmap","timeout","modulesJson","heatmapOptionsJson","cards","cardId","call","updateUserPreferences","type","value","methodname","args","preferences","fail","exception","Error","getCardCharts","forEach","cardData","cardElement","document","getElementById","spinner","getElementsByClassName","chartbody","params","JSON","stringify","classList","remove","loadFragment","done","response","render","html","js","add","replaceNodeContents","yearButtonAction","event","element","target","tagName","toLowerCase","dataset","year","yeartitle","innerHTML","updateHeatmapDebounce","clearTimeout","setTimeout","updateHeatmap","generateHeatmap","generate","then","calendar","calendarContainer","catch","exc","cardsModulesSelectHeatmapElement","links","getElementsByTagName","modules","i","length","contains","module","push","optionsObj","optionsJson","yearHeatmapButtonAction","preventDefault","metricHeatmapButtonAction","metric","moduleListChildrenEvents","all","addEventListener","j","stopPropagation","dropdownmenu","toggle","init","context","cardsYearSelectElement","cardsYearSelectHeatmapElement","cardsMetricSelectHeatmapElement"],"mappings":"AAuBAA,OAAM,+BAAC,CAAC,WAAD,CAAc,eAAd,CAA+B,gBAA/B,CAAiD,mBAAjD,CAAsE,2BAAtE,CAAD,CACH,SAASC,CAAT,CAAeC,CAAf,CAAyBC,CAAzB,CAAoCC,CAApC,CAAkDC,CAAlD,CAA4D,IAKvDC,CAAAA,CAAU,CAAG,EAL0C,CAMvDC,CANuD,CAOvDC,CAPuD,CAQvDC,CARuD,CASvDC,CATuD,CAUvDC,CAVuD,CAWvDC,CAAW,CAAG,EAXyC,CAYvDC,CAAkB,CAAG,EAZkC,CAcvDC,CAAK,CAAG,CACR,CAACC,MAAM,CAAE,mCAAT,CAA8CC,IAAI,CAAE,iBAApD,CADQ,CAER,CAACD,MAAM,CAAE,qCAAT,CAAgDC,IAAI,CAAE,oBAAtD,CAFQ,CAGR,CAACD,MAAM,CAAE,2CAAT,CAAsDC,IAAI,CAAE,yBAA5D,CAHQ,CAd+C,CA0B3D,QAASC,CAAAA,CAAT,CAA+BC,CAA/B,CAAqCC,CAArC,CAA4C,CAaxClB,CAAI,CAACe,IAAL,CAAU,CAZI,CACNI,UAAU,CAAE,mCADN,CAENC,IAAI,CAAE,CACFC,WAAW,CAAE,CACT,CACIJ,IAAI,CAAEA,CADV,CAEIC,KAAK,CAAEA,CAFX,CADS,CADX,CAFA,CAYJ,CAAV,EAAqB,CAArB,EACCI,IADD,CACM,UAAW,CACbnB,CAAY,CAACoB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,kCAAV,CAAvB,CACH,CAHD,CAIH,CAQA,QAASC,CAAAA,CAAT,EAAyB,CACrBZ,CAAK,CAACa,OAAN,CAAc,SAASC,CAAT,CAAmB,IACzBC,CAAAA,CAAW,CAAGC,QAAQ,CAACC,cAAT,CAAwBH,CAAQ,CAACb,MAAjC,CADW,CAEzBiB,CAAO,CAAGH,CAAW,CAACI,sBAAZ,CAAmC,wBAAnC,EAA6D,CAA7D,CAFe,CAGzBC,CAAS,CAAGL,CAAW,CAACI,sBAAZ,CAAmC,YAAnC,EAAiD,CAAjD,CAHa,CAIzBE,CAAM,CAAG,CAAC,KAAQC,IAAI,CAACC,SAAL,CAAe,CAAC,KAAS7B,CAAV,CAAsB,KAAQoB,CAAQ,CAACZ,IAAvC,CAAf,CAAT,CAJgB,CAM7BgB,CAAO,CAACM,SAAR,CAAkBC,MAAlB,CAAyB,MAAzB,EAEArC,CAAQ,CAACsC,YAAT,CAAsB,kBAAtB,CAA0C,WAA1C,CAAuDjC,CAAvD,CAAkE4B,CAAlE,EACCM,IADD,CACM,SAASC,CAAT,CAAmB,CAGrBvC,CAAS,CAACwC,MAAV,CAAiB,YAAjB,CADc,CAAE,YAAF,CAAsB,UAAcD,CAApC,CACd,EACCD,IADD,CACM,SAASG,CAAT,CAAeC,CAAf,CAAmB,CACrBb,CAAO,CAACM,SAAR,CAAkBQ,GAAlB,CAAsB,MAAtB,EAEA3C,CAAS,CAAC4C,mBAAV,CAA8Bb,CAA9B,CAAyCU,CAAzC,CAA+CC,CAA/C,CACH,CALD,EAKGtB,IALH,CAKQ,UAAW,CACfnB,CAAY,CAACoB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,gCAAV,CAAvB,CAEH,CARD,CAUH,CAdD,EAcGF,IAdH,CAcQ,UAAW,CACfnB,CAAY,CAACoB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,iCAAV,CAAvB,CAEH,CAjBD,CAkBH,CA1BD,CA2BH,CAQD,QAASuB,CAAAA,CAAT,CAA0BC,CAA1B,CAAiC,CAC7B,GAAIC,CAAAA,CAAO,CAAGD,CAAK,CAACE,MAApB,CAEA,GAAsC,GAAlC,GAAAD,CAAO,CAACE,OAAR,CAAgBC,WAAhB,IAAyCH,CAAO,CAACI,OAAR,CAAgBC,IAAhB,EAAwB/C,CAArE,CAAiF,CAC7EA,CAAU,CAAG0C,CAAO,CAACI,OAAR,CAAgBC,IAA7B,CAGAtC,CAAqB,CAAC,2CAAD,CAA8CT,CAA9C,CAArB,CAGA,GAAIgD,CAAAA,CAAS,CAAG1B,QAAQ,CAACC,cAAT,CAAwB,kCAAxB,EACXE,sBADW,CACY,uBADZ,EACqC,CADrC,CAAhB,CAEAuB,CAAS,CAACC,SAAV,CAAsBjD,CAAtB,CAEAkB,CAAa,EAChB,CACJ,CAQF,QAASgC,CAAAA,CAAT,EAAiC,CAC7BC,YAAY,CAAChD,CAAD,CAAZ,CACAA,CAAO,CAAGiD,UAAU,CAACC,CAAa,EAAd,CAAkB,GAAlB,CACvB,CAED,QAASC,CAAAA,CAAT,EAA2B,CACvBzD,CAAQ,CAAC0D,QAAT,CAAkBtD,CAAlB,CAAqC,CAArC,CAAwC,EAAxC,EAA4CuD,IAA5C,CAAiD,SAAAC,CAAQ,CAAI,CACzD,GAAIC,CAAAA,CAAiB,CAAGpC,QAAQ,CAACC,cAAT,CAAwB,wCAAxB,CAAxB,CACAmC,CAAiB,CAACT,SAAlB,CAA8BQ,CAAQ,CAACR,SAE1C,CAJD,EAIGU,KAJH,CAIS,SAASC,CAAT,CAAc,CACnBhE,CAAY,CAACoB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU2C,CAAV,CAAvB,CAEH,CAPD,CAQH,CAMD,QAASP,CAAAA,CAAT,EAAyB,CAMrB,OAJIQ,CAAAA,CAAgC,CAAGvC,QAAQ,CAACC,cAAT,CAAwB,kCAAxB,CAIvC,CAHIuC,CAAK,CAAGD,CAAgC,CAACE,oBAAjC,CAAsD,GAAtD,CAGZ,CAFIC,CAAO,CAAG,EAEd,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,CAAK,CAACI,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACnC,GAAIH,CAAK,CAACG,CAAD,CAAL,CAASnC,SAAT,CAAmBqC,QAAnB,CAA4B,QAA5B,CAAJ,CAA2C,CACvC,GAAIC,CAAAA,CAAM,CAAGN,CAAK,CAACG,CAAD,CAAL,CAASnB,OAAT,CAAiBsB,MAA9B,CACAJ,CAAO,CAACK,IAAR,CAAaD,CAAb,CACH,CACJ,CAGD,GAAIhE,CAAW,GAAKwB,IAAI,CAACC,SAAL,CAAemC,CAAf,CAApB,CAA6C,CACzC5D,CAAW,CAAGwB,IAAI,CAACC,SAAL,CAAemC,CAAf,CAAd,CACAvD,CAAqB,CAAC,6CAAD,CAAgDL,CAAhD,CACxB,CAjBoB,GAoBjBkE,CAAAA,CAAU,CAAG,CACT,KAASrE,CADA,CAET,OAAWC,CAFF,CAGT,QAAY8D,CAHH,CApBI,CA0BjBO,CAAW,CAAG3C,IAAI,CAACC,SAAL,CAAeyC,CAAf,CA1BG,CA4BrB,GAAGC,CAAW,GAAKlE,CAAnB,CAAuC,CAEnCA,CAAkB,CAAGkE,CAArB,CAEAjB,CAAe,EAClB,CACJ,CAQD,QAASkB,CAAAA,CAAT,CAAiC/B,CAAjC,CAAwC,CACpCA,CAAK,CAACgC,cAAN,GACA,GAAI/B,CAAAA,CAAO,CAAGD,CAAK,CAACE,MAApB,CAEA,GAAsC,GAAlC,GAAAD,CAAO,CAACE,OAAR,CAAgBC,WAAhB,IAAyCH,CAAO,CAACI,OAAR,CAAgBC,IAAhB,EAAwB9C,CAArE,CAAwF,CACpFA,CAAiB,CAAGyC,CAAO,CAACI,OAAR,CAAgBC,IAApC,CAGAtC,CAAqB,CAAC,0CAAD,CAA6CR,CAA7C,CAArB,CAGA,GAAI+C,CAAAA,CAAS,CAAG1B,QAAQ,CAACC,cAAT,CAAwB,iCAAxB,EACXE,sBADW,CACY,uBADZ,EACqC,CADrC,CAAhB,CAEAuB,CAAS,CAACC,SAAV,CAAsBhD,CAAtB,CAEAiD,CAAqB,EACxB,CACJ,CAQD,QAASwB,CAAAA,CAAT,CAAmCjC,CAAnC,CAA0C,CACtCA,CAAK,CAACgC,cAAN,GACA,GAAI/B,CAAAA,CAAO,CAAGD,CAAK,CAACE,MAApB,CAEA,GAAsC,GAAlC,GAAAD,CAAO,CAACE,OAAR,CAAgBC,WAAhB,IAAyCH,CAAO,CAACI,OAAR,CAAgB6B,MAAhB,EAA0BzE,CAAvE,CAA4F,CACxFA,CAAmB,CAAGwC,CAAO,CAACI,OAAR,CAAgB6B,MAAtC,CAGAlE,CAAqB,CAAC,4CAAD,CAA+CP,CAA/C,CAArB,CAEAgD,CAAqB,EACxB,CACJ,CAOD,QAAS0B,CAAAA,CAAT,CAAkClC,CAAlC,CAA2C,CAIvC,OAHIoB,CAAAA,CAAK,CAAGpB,CAAO,CAACqB,oBAAR,CAA6B,GAA7B,CAGZ,CAFIc,CAAG,CAAGf,CAAK,CAAC,CAAD,CAEf,CAASG,CAAC,CAAG,CAAb,CACQG,CADR,CAAgBH,CAAC,CAAGH,CAAK,CAACI,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CAC/BG,CAD+B,CACtBN,CAAK,CAACG,CAAD,CAAL,CAASnB,OAAT,CAAiBsB,MADK,CAGnC,GAA6B,KAAzB,GAAAA,CAAM,CAACvB,WAAP,EAAJ,CAAoC,CAChCiB,CAAK,CAACG,CAAD,CAAL,CAASa,gBAAT,CAA0B,OAA1B,CAAmC,SAASrC,CAAT,CAAe,CAC9CA,CAAK,CAACgC,cAAN,GAEA,IAAK,GAAIM,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGjB,CAAK,CAACI,MAA1B,CAAkCa,CAAC,EAAnC,CAAuC,CACnCjB,CAAK,CAACiB,CAAD,CAAL,CAASjD,SAAT,CAAmBC,MAAnB,CAA0B,QAA1B,CACH,CACDmB,CAAqB,EACxB,CAPD,CAQH,CATD,IASO,IAA6B,OAAzB,GAAAkB,CAAM,CAACvB,WAAP,EAAJ,CAAsC,CACzCiB,CAAK,CAACG,CAAD,CAAL,CAASa,gBAAT,CAA0B,OAA1B,CAAmC,SAASrC,CAAT,CAAe,CAC9CA,CAAK,CAACgC,cAAN,GACAhC,CAAK,CAACuC,eAAN,GAEA,GAAIC,CAAAA,CAAY,CAAG3D,QAAQ,CAACC,cAAT,CAAwB,yCAAxB,CAAnB,CACA0D,CAAY,CAACnD,SAAb,CAAuBC,MAAvB,CAA8B,MAA9B,EAEAmB,CAAqB,EACxB,CARD,CAUH,CAXM,IAWA,CACHY,CAAK,CAACG,CAAD,CAAL,CAASa,gBAAT,CAA0B,OAA1B,CAAmC,SAASrC,CAAT,CAAe,CAC9CA,CAAK,CAACgC,cAAN,GACAhC,CAAK,CAACuC,eAAN,GAEAH,CAAG,CAAC/C,SAAJ,CAAcC,MAAd,CAAqB,QAArB,EAEAU,CAAK,CAACE,MAAN,CAAab,SAAb,CAAuBoD,MAAvB,CAA8B,QAA9B,EACAhC,CAAqB,EACxB,CARD,CASH,CAEJ,CACJ,CAODpD,CAAU,CAACqF,IAAX,CAAkB,SAASC,CAAT,CAAkB,CAChCrF,CAAS,CAAGqF,CAAZ,CAGA,GAAIC,CAAAA,CAAsB,CAAG/D,QAAQ,CAACC,cAAT,CAAwB,6BAAxB,CAA7B,CACAvB,CAAU,CAAGqF,CAAsB,CAAC5D,sBAAvB,CAA8C,QAA9C,EAAwD,CAAxD,EAA2DqB,OAA3D,CAAmEC,IAAhF,CACAsC,CAAsB,CAACP,gBAAvB,CAAwC,OAAxC,CAAiDtC,CAAjD,EAGA,GAAI8C,CAAAA,CAA6B,CAAGhE,QAAQ,CAACC,cAAT,CAAwB,+BAAxB,CAApC,CACAtB,CAAiB,CAAGqF,CAA6B,CAAC7D,sBAA9B,CAAqD,QAArD,EAA+D,CAA/D,EAAkEqB,OAAlE,CAA0EC,IAA9F,CACAuC,CAA6B,CAACR,gBAA9B,CAA+C,OAA/C,CAAwDN,CAAxD,EAGA,GAAIe,CAAAA,CAA+B,CAAGjE,QAAQ,CAACC,cAAT,CAAwB,kCAAxB,CAAtC,CACArB,CAAmB,CAAGqF,CAA+B,CAAC9D,sBAAhC,CAAuD,QAAvD,EAAiE,CAAjE,EAAoEqB,OAApE,CAA4E6B,MAAlG,CACAY,CAA+B,CAACT,gBAAhC,CAAiD,OAAjD,CAA0DJ,CAA1D,EAGA,GAAIb,CAAAA,CAAgC,CAAGvC,QAAQ,CAACC,cAAT,CAAwB,kCAAxB,CAAvC,CACAqD,CAAwB,CAACf,CAAD,CAAxB,CAGA3C,CAAa,GAGbmC,CAAa,EAEhB,CA5BD,CA8BA,MAAOvD,CAAAA,CACV,CAxSK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/ajax', 'core/fragment', 'core/templates', 'core/notification', 'local_assessfreq/calendar'],\n   function(Ajax, Fragment, Templates, Notification, Calendar) {\n\n    /**\n     * Module level variables.\n     */\n    var Reportcard = {};\n    var contextid;\n    var yearselect;\n    var yearselectheatmap;\n    var metricselectheatmap;\n    var timeout;\n    var modulesJson = '';\n    var heatmapOptionsJson = '';\n\n    var cards = [\n        {cardId: 'local-assessfreq-assess-due-month', call: 'assess_by_month'},\n        {cardId: 'local-assessfreq-assess-by-activity', call: 'assess_by_activity'},\n        {cardId: 'local-assessfreq-assess-due-month-student', call: 'assess_by_month_student'}\n    ];\n\n    /**\n     * Generic handler to persist user preferences\n     *\n     * @param {string} type The name of the attribute you're updating\n     * @param {string} value The value of the attribute you're updating\n     */\n    function updateUserPreferences(type, value) {\n        var request = {\n                methodname: 'core_user_update_user_preferences',\n                args: {\n                    preferences: [\n                        {\n                            type: type,\n                            value: value\n                        }\n                        ]\n                }\n        };\n\n        Ajax.call([request])[0]\n        .fail(function() {\n            Notification.exception(new Error('Failed to update user preference'));\n        });\n    }\n\n     /**\n      * For each of the cards on the dashbaord get their corresponding chart data.\n      * Data is based on the year variable from the corresponding dropdown.\n      * Chart data is loaded via ajax.\n      *\n      */\n     function getCardCharts() {\n         cards.forEach(function(cardData) {\n             var cardElement = document.getElementById(cardData.cardId);\n             var spinner = cardElement.getElementsByClassName('overlay-icon-container')[0];\n             var chartbody = cardElement.getElementsByClassName('chart-body')[0];\n             var params = {'data': JSON.stringify({'year' : yearselect, 'call': cardData.call})};\n\n             spinner.classList.remove('hide'); // Show sinner if not already shown.\n\n             Fragment.loadFragment('local_assessfreq', 'get_chart', contextid, params)\n             .done(function(response) {\n\n                 var context = { 'withtable' : true, 'chartdata' : response };\n                 Templates.render('core/chart', context)\n                 .done(function(html, js) {\n                     spinner.classList.add('hide'); // Hide sinner if not already hidden.\n                     // Load card body.\n                     Templates.replaceNodeContents(chartbody, html, js);\n                 }).fail(function() {\n                     Notification.exception(new Error('Failed to load chart template.'));\n                     return;\n                 });\n                 return;\n             }).fail(function() {\n                 Notification.exception(new Error('Failed to load card year filter'));\n                 return;\n             });\n         });\n     }\n\n     /**\n      * Get and process the selected year from the dropdown,\n      * and update the corresponding user perference.\n      *\n      * @param {event} event The triggered event for the element.\n      */\n     function yearButtonAction(event) {\n         var element = event.target;\n\n         if (element.tagName.toLowerCase() === 'a' && element.dataset.year != yearselect) { // Only act on certain elements.\n             yearselect = element.dataset.year;\n\n             // Save selection as a user preference.\n             updateUserPreferences('local_assessfreq_overview_year_preference', yearselect);\n\n             // Update card data based on selected year.\n             var yeartitle = document.getElementById('local-assessfreq-report-overview')\n                 .getElementsByClassName('local-assessfreq-year')[0];\n             yeartitle.innerHTML = yearselect;\n\n             getCardCharts(); // Process loading for the assessment cards.\n         }\n     }\n\n    /**\n     * Quick and dirty debounce method for the heatmap settings menu.\n     * This stops the ajax method that updates the heatmap from being updated\n     * while the user is still checking options.\n     *\n     */\n    function updateHeatmapDebounce() {\n        clearTimeout(timeout);\n        timeout = setTimeout(updateHeatmap(), 750);\n    }\n\n    function generateHeatmap() {\n        Calendar.generate(yearselectheatmap, 0, 11).then(calendar => {\n            let calendarContainer = document.getElementById('local-assessfreq-report-heatmap-months');\n            calendarContainer.innerHTML = calendar.innerHTML;\n            return;\n        }).catch(function(exc) {\n            Notification.exception(new Error(exc));\n            return;\n        });\n    }\n\n    /**\n     * Update the heatmap based on the current filter settings.\n     *\n     */\n    function updateHeatmap() {\n        // Get current state of select menu items.with\n        var cardsModulesSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-modules');\n        var links = cardsModulesSelectHeatmapElement.getElementsByTagName('a');\n        var modules = [];\n\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].classList.contains('active')) {\n                let module = links[i].dataset.module;\n                modules.push(module);\n            }\n        }\n\n        // Save selection as a user preference.\n        if (modulesJson !== JSON.stringify(modules)) {\n            modulesJson = JSON.stringify(modules);\n            updateUserPreferences('local_assessfreq_heatmap_modules_preference', modulesJson);\n        }\n\n        // Build settings object.\n        var optionsObj = {\n                'year' : yearselectheatmap,\n                'metric' : metricselectheatmap,\n                'modules' : modules\n        };\n\n        var optionsJson = JSON.stringify(optionsObj);\n\n        if(optionsJson !== heatmapOptionsJson) { // Compare to global to see if there are any changes.\n            // If list has changed fetch heatmap and update user preference.\n            heatmapOptionsJson = optionsJson;\n\n            generateHeatmap();\n        }\n    }\n\n    /**\n     * Get and process the selected year from the dropdown for the heatmap display,\n     * and update the corresponding user perference.\n     *\n     * @param {event} event The triggered event for the element.\n     */\n    function yearHeatmapButtonAction(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.year != yearselectheatmap) { // Only act on certain elements.\n            yearselectheatmap = element.dataset.year;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_heatmap_year_preference', yearselectheatmap);\n\n            // Update card data based on selected year.\n            var yeartitle = document.getElementById('local-assessfreq-report-heatmap')\n                .getElementsByClassName('local-assessfreq-year')[0];\n            yeartitle.innerHTML = yearselectheatmap;\n\n            updateHeatmapDebounce(); // Call function to update heatmap.\n        }\n    }\n\n    /**\n     * Get and process the selected assessment metric from the dropdown for the heatmap display,\n     * and update the corresponding user perference.\n     *\n     * @param {event} event The triggered event for the element.\n     */\n    function metricHeatmapButtonAction(event) {\n        event.preventDefault();\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.metric != metricselectheatmap) {\n            metricselectheatmap = element.dataset.metric;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_heatmap_metric_preference', metricselectheatmap);\n\n            updateHeatmapDebounce(); // Call function to update heatmap.\n        }\n    }\n\n    /**\n     * Add the event listeners to the modules in the module select dropdown.\n     *\n     * @param {element} element The dropdown HTML element that contains the list of modules as links.\n     */\n    function moduleListChildrenEvents(element) {\n        var links = element.getElementsByTagName('a');\n        var all = links[0];\n\n        for (var i = 0; i < links.length; i++) {\n            let module = links[i].dataset.module;\n\n            if (module.toLowerCase() === 'all') {\n                links[i].addEventListener(\"click\", function(event){\n                    event.preventDefault();\n                    // Remove active class from all other links.\n                    for (var j = 0; j < links.length; j++) {\n                        links[j].classList.remove('active');\n                    }\n                    updateHeatmapDebounce(); // Call function to update heatmap.\n                });\n            } else if (module.toLowerCase() === 'close') {\n                links[i].addEventListener(\"click\", function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    var dropdownmenu = document.getElementById('local-assessfreq-heatmap-modules-filter');\n                    dropdownmenu.classList.remove('show');\n\n                    updateHeatmapDebounce(); // Call function to update heatmap.\n                });\n\n            } else {\n                links[i].addEventListener(\"click\", function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    all.classList.remove('active');\n\n                    event.target.classList.toggle('active');\n                    updateHeatmapDebounce();\n                });\n            }\n\n        }\n    }\n\n    /**\n     * Initialise method for report card rendering.\n     *\n     * @param {integer} context The current context id.\n     */\n    Reportcard.init = function(context) {\n        contextid = context;\n\n        // Set up event listener and related actions for year dropdown on report cards.\n        var cardsYearSelectElement = document.getElementById('local-assessfreq-cards-year');\n        yearselect = cardsYearSelectElement.getElementsByClassName('active')[0].dataset.year;\n        cardsYearSelectElement.addEventListener(\"click\", yearButtonAction);\n\n        // Set up event listener and related actions for year dropdown on heatmp.\n        var cardsYearSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-year');\n        yearselectheatmap = cardsYearSelectHeatmapElement.getElementsByClassName('active')[0].dataset.year;\n        cardsYearSelectHeatmapElement.addEventListener(\"click\", yearHeatmapButtonAction);\n\n        // Set up event listener and related actions for metric dropdown on heatmp.\n        var cardsMetricSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-metrics');\n        metricselectheatmap = cardsMetricSelectHeatmapElement.getElementsByClassName('active')[0].dataset.metric;\n        cardsMetricSelectHeatmapElement.addEventListener(\"click\", metricHeatmapButtonAction);\n\n        // Set up event listener and related actions for module dropdown on heatmp.\n        var cardsModulesSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-modules');\n        moduleListChildrenEvents(cardsModulesSelectHeatmapElement);\n\n        // Process loading for the assessment cards.\n        getCardCharts();\n\n        // Get the data for the heatmap.\n        updateHeatmap();\n\n    };\n\n    return Reportcard;\n});\n"],"file":"reportcard.min.js"}