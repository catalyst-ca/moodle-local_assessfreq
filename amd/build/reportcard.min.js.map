{"version":3,"sources":["../src/reportcard.js"],"names":["define","Fragment","Templates","Notification","Ajax","Reportcard","contextid","yearselect","yearselectheatmap","metricselectheatmap","cards","cardId","call","updateUserPreferences","type","value","methodname","args","preferences","fail","exception","Error","getCardCharts","forEach","cardData","cardElement","document","getElementById","spinner","getElementsByClassName","chartbody","params","JSON","stringify","classList","remove","loadFragment","done","response","render","html","js","add","replaceNodeContents","yearButtonAction","event","element","target","tagName","toLowerCase","dataset","year","yeartitle","innerHTML","yearHeatmapButtonAction","window","console","log","metricHeatmapButtonAction","metric","updateHeatmap","moduleListChildrenEvents","links","getElementsByTagName","all","link","module","addEventListener","preventDefault","stopPropagation","dropdownmenu","toggle","init","context","cardsYearSelectElement","cardsYearSelectHeatmapElement","cardsMetricSelectHeatmapElement","cardsModulesSelectHeatmapElement"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    ['core/fragment', 'core/templates', 'core/notification', 'core/ajax'],\n    function(Fragment, Templates, Notification, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var Reportcard = {};\n    var contextid;\n    var yearselect;\n    var yearselectheatmap;\n    var metricselectheatmap;\n\n    var cards = [\n        {cardId: 'local-assessfreq-assess-due-month', call: 'assess_by_month'},\n        {cardId: 'local-assessfreq-assess-by-activity', call: 'assess_by_activity'},\n        {cardId: 'local-assessfreq-assess-due-month-student', call: 'assess_by_month_student'}\n    ];\n\n    /**\n     * Generic handler to persist user preferences\n     *\n     * @param {string} type The name of the attribute you're updating\n     * @param {string} value The value of the attribute you're updating\n     */\n     function updateUserPreferences(type, value) {\n        var request = {\n            methodname: 'core_user_update_user_preferences',\n            args: {\n                preferences: [\n                    {\n                        type: type,\n                        value: value\n                    }\n                ]\n            }\n        };\n\n        Ajax.call([request])[0]\n        .fail(function() {\n            Notification.exception(new Error('Failed to update user preference'));\n        });\n    }\n\n    /**\n     *\n     */\n    function getCardCharts() {\n        cards.forEach(function(cardData) {\n            var cardElement = document.getElementById(cardData.cardId);\n            var spinner = cardElement.getElementsByClassName('overlay-icon-container')[0];\n            var chartbody = cardElement.getElementsByClassName('chart-body')[0];\n            var params = {'data': JSON.stringify({'year' : yearselect, 'call': cardData.call})};\n\n            spinner.classList.remove('hide'); // Show sinner if not already shown.\n\n            Fragment.loadFragment('local_assessfreq', 'get_chart', contextid, params)\n            .done(function(response) {\n\n                var context = { 'withtable' : true, 'chartdata' : response };\n                Templates.render('core/chart', context)\n                .done(function(html, js) {\n                    spinner.classList.add('hide'); // Hide sinner if not already hidden.\n                    // Load card body.\n                    Templates.replaceNodeContents(chartbody, html, js);\n                }).fail(function() {\n                    Notification.exception(new Error('Failed to load chart template.'));\n                    return;\n                });\n                return;\n            }).fail(function() {\n                Notification.exception(new Error('Failed to load card year filter'));\n                return;\n            });\n        });\n    }\n\n    function yearButtonAction(event) {\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.year != yearselect) { // Only act on certain elements.\n            yearselect = element.dataset.year;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_overview_year_preference', yearselect);\n\n            // Update card data based on selected year.\n            var yeartitle = document.getElementById('local-assessfreq-report-overview')\n                                .getElementsByClassName('local-assessfreq-year')[0];\n            yeartitle.innerHTML = yearselect;\n\n            // Process loading for the assessment cards.\n            getCardCharts();\n        }\n    }\n\n    function yearHeatmapButtonAction(event) {\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.year != yearselectheatmap) { // Only act on certain elements.\n            yearselectheatmap = element.dataset.year;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_heatmap_year_preference', yearselectheatmap);\n\n            // Update card data based on selected year.\n            var yeartitle = document.getElementById('local-assessfreq-report-heatmap')\n                                .getElementsByClassName('local-assessfreq-year')[0];\n            yeartitle.innerHTML = yearselectheatmap;\n\n            // Process loading heatmap.\n            window.console.log('TODO: load heatmap');\n        }\n    }\n\n    function metricHeatmapButtonAction(event) {\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.metric != metricselectheatmap) {\n            metricselectheatmap = element.dataset.metric;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_heatmap_metric_preference', metricselectheatmap);\n\n            // Process loading heatmap.\n            window.console.log('TODO: load heatmap');\n        }\n    }\n\n    function updateHeatmap(links) {\n        // Get list of links with active class.\n        // Compare to global to see if there are any changes.\n        // If list has changed fetch heatmap.\n        window.console.log('updating heatmap');\n\n    }\n\n    function moduleListChildrenEvents(element) {\n        var links = element.getElementsByTagName('a');\n        var all = links[0];\n\n        for (let link of links) {\n            let module = link.dataset.module;\n\n            if (module.toLowerCase() === 'all') {\n                link.addEventListener(\"click\", function(event){\n                    event.preventDefault();\n                    // Remove active class from all other links.\n                    for (let link of links) {\n                        link.classList.remove('active');\n                    }\n                    updateHeatmap(links); // Call function to update heatmap.\n                });\n            } else if (module.toLowerCase() === 'close') {\n                link.addEventListener(\"click\", function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    var dropdownmenu = document.getElementById('local-assessfreq-heatmap-modules-filter');\n                    dropdownmenu.classList.remove('show');\n\n                    updateHeatmap(links); // Call function to update heatmap.\n                });\n\n            } else {\n                link.addEventListener(\"click\", function(event){\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    all.classList.remove('active');\n\n                    event.target.classList.toggle('active');\n                    updateHeatmap(links);\n                });\n            }\n\n        }\n    }\n\n    /**\n     * Initialise method for report card rendering.\n     *\n     * @param {integer} context The current context id.\n     */\n    Reportcard.init = function(context) {\n        contextid = context;\n\n        // Set up event listener and related actions for year dropdown on report cards.\n        var cardsYearSelectElement = document.getElementById('local-assessfreq-cards-year');\n        yearselect = cardsYearSelectElement.getElementsByClassName('active')[0].dataset.year;\n        cardsYearSelectElement.addEventListener(\"click\", yearButtonAction);\n\n        // Set up event listener and related actions for year dropdown on heatmp.\n        var cardsYearSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-year');\n        yearselectheatmap = cardsYearSelectHeatmapElement.getElementsByClassName('active')[0].dataset.year;\n        cardsYearSelectHeatmapElement.addEventListener(\"click\", yearHeatmapButtonAction);\n\n        // Set up event listener and related actions for metric dropdown on heatmp.\n        var cardsMetricSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-metrics');\n        metricselectheatmap = cardsMetricSelectHeatmapElement.getElementsByClassName('active')[0].dataset.metric;\n        cardsMetricSelectHeatmapElement.addEventListener(\"click\", metricHeatmapButtonAction);\n\n        // Set up event listener and related actions for module dropdown on heatmp.\n        var cardsModulesSelectHeatmapElement = document.getElementById('local-assessfreq-heatmap-modules');\n        moduleListChildrenEvents(cardsModulesSelectHeatmapElement);\n\n        // Process loading for the assessment cards.\n        getCardCharts();\n\n    };\n\n    return Reportcard;\n});\n"],"file":"reportcard.min.js"}