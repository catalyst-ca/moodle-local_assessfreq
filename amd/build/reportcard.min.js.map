{"version":3,"sources":["../src/reportcard.js"],"names":["define","Fragment","Templates","Notification","Ajax","Reportcard","contextid","yearselect","cards","cardId","call","updateUserPreferences","type","value","methodname","args","preferences","fail","exception","Error","getCardCharts","forEach","cardData","cardElement","document","getElementById","spinner","getElementsByClassName","chartbody","params","JSON","stringify","classList","remove","loadFragment","done","response","render","html","js","add","replaceNodeContents","yearButtonAction","event","element","target","tagName","toLowerCase","dataset","year","yeartitle","innerHTML","init","context","cardsYearSelectElement","addEventListener"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    ['core/fragment', 'core/templates', 'core/notification', 'core/ajax'],\n    function(Fragment, Templates, Notification, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var Reportcard = {};\n    var contextid;\n    var yearselect;\n    var cards = [\n        {cardId: 'local-assessfreq-assess-due-month', call: 'assess_by_month'},\n        {cardId: 'local-assessfreq-assess-by-activity', call: 'assess_by_activity'},\n        {cardId: 'local-assessfreq-assess-due-month-student', call: 'assess_by_month_student'}\n    ];\n\n    /**\n     * Generic handler to persist user preferences\n     *\n     * @param {string} type The name of the attribute you're updating\n     * @param {string} value The value of the attribute you're updating\n     */\n     function updateUserPreferences(type, value) {\n        var request = {\n            methodname: 'core_user_update_user_preferences',\n            args: {\n                preferences: [\n                    {\n                        type: type,\n                        value: value\n                    }\n                ]\n            }\n        };\n\n        Ajax.call([request])[0]\n        .fail(function() {\n            Notification.exception(new Error('Failed to update user preference'));\n        });\n    }\n\n    /**\n     *\n     */\n    function getCardCharts() {\n        cards.forEach(function(cardData) {\n            var cardElement = document.getElementById(cardData.cardId);\n            var spinner = cardElement.getElementsByClassName('overlay-icon-container')[0];\n            var chartbody = cardElement.getElementsByClassName('chart-body')[0];\n            var params = {'data': JSON.stringify({'year' : yearselect, 'call': cardData.call})};\n\n            spinner.classList.remove('hide'); // Show sinner if not already shown.\n\n            Fragment.loadFragment('local_assessfreq', 'get_chart', contextid, params)\n            .done(function(response) {\n\n                var context = { 'withtable' : true, 'chartdata' : response };\n                Templates.render('core/chart', context)\n                .done(function(html, js) {\n                    spinner.classList.add('hide'); // Hide sinner if not already hidden.\n                    // Load card body.\n                    Templates.replaceNodeContents(chartbody, html, js);\n                }).fail(function() {\n                    Notification.exception(new Error('Failed to load chart template.'));\n                    return;\n                });\n                return;\n            }).fail(function() {\n                Notification.exception(new Error('Failed to load card year filter'));\n                return;\n            });\n        });\n    }\n\n    function yearButtonAction(event) {\n        var element = event.target;\n\n        if (element.tagName.toLowerCase() === 'a' && element.dataset.year != yearselect) { // Only act on certain elements.\n            yearselect = element.dataset.year;\n\n            // Save selection as a user preference.\n            updateUserPreferences('local_assessfreq_overview_year_preference', yearselect);\n\n            // Update card data based on selected year.\n            var yeartitle = document.getElementById('local-assessfreq-report-overview')\n                                .getElementsByClassName('local-assessfreq-year')[0];\n            yeartitle.innerHTML = yearselect;\n\n            // Process loading for the assessment cards.\n            getCardCharts();\n        }\n    }\n\n    /**\n     * Initialise method for report card rendering.\n     *\n     * @param {integer} context The current context id.\n     */\n    Reportcard.init = function(context) {\n        contextid = context;\n\n        var cardsYearSelectElement = document.getElementById('local-assessfreq-cards-year');\n        yearselect = cardsYearSelectElement.getElementsByClassName('active')[0].dataset.year;\n        cardsYearSelectElement.addEventListener(\"click\", yearButtonAction);\n\n        // Process loading for the assessment cards.\n        getCardCharts();\n\n    };\n\n    return Reportcard;\n});\n"],"file":"reportcard.min.js"}