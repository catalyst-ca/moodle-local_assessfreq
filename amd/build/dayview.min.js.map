{"version":3,"sources":["../src/dayview.js"],"names":["define","Str","Notification","ModalFactory","ModalLarge","Templates","Ajax","Dayview","modalObj","spinner","stringArr","key","component","stringResult","getUserDate","timestamp","format","Promise","resolve","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","strftimetime","substr","formatData","response","responseArr","JSON","parse","promiseAllArr","scaler","i","promiseArr","endyear","endmonth","endday","dayStart","getTime","secondsSinceDayStart","timestart","leftMargin","width","timeend","startPromise","push","leftmargin","endPromise","all","then","values","start","end","length","display","setBody","show","jsonArgs","stringify","modules","call","methodname","args","jsondata","render","rows","fail","exception","Error","init","get_strings","catch","stringReturn","get_string","title","create","type","TYPE","body","done","modal"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for heatmap calendar generation and display.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/notification', 'core/modal_factory', 'local_assessfreq/modal_large', 'core/templates', 'core/ajax'],\nfunction(Str, Notification, ModalFactory, ModalLarge, Templates, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var Dayview = {};\n    var modalObj;\n    const spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i>'\n        + '</p>';\n\n    const stringArr = [\n        {key: 'sun', component: 'calendar'},\n        {key: 'mon', component: 'calendar'},\n        {key: 'tue', component: 'calendar'},\n        {key: 'wed', component: 'calendar'},\n        {key: 'thu', component: 'calendar'},\n        {key: 'fri', component: 'calendar'},\n        {key: 'sat', component: 'calendar'},\n        {key: 'jan', component: 'local_assessfreq'},\n        {key: 'feb', component: 'local_assessfreq'},\n        {key: 'mar', component: 'local_assessfreq'},\n        {key: 'apr', component: 'local_assessfreq'},\n        {key: 'may', component: 'local_assessfreq'},\n        {key: 'jun', component: 'local_assessfreq'},\n        {key: 'jul', component: 'local_assessfreq'},\n        {key: 'aug', component: 'local_assessfreq'},\n        {key: 'sep', component: 'local_assessfreq'},\n        {key: 'oct', component: 'local_assessfreq'},\n        {key: 'nov', component: 'local_assessfreq'},\n        {key: 'dec', component: 'local_assessfreq'},\n    ];\n    var stringResult;\n\n    const getUserDate = function(timestamp, format) {\n        return new Promise((resolve) => {\n            let date = new Date(timestamp * 1000);\n            const year = date.getFullYear();\n            const month = stringResult[(7 + date.getMonth())];\n            const day = date.getDate();\n            const hours = date.getHours();\n            const minutes = '0' + date.getMinutes();\n\n            const strftimetime = hours + ':' + minutes.substr(-2); // Will display time in 10:30 format.\n            const strftimedatetime = day + ' ' + month + ' ' + year + ', ' + strftimetime;\n\n            if (format === 'strftimetime') {\n                resolve(strftimetime);\n            } else {\n                resolve(strftimedatetime);\n            }\n\n        });\n    };\n\n    const formatData = function(response) {\n        let responseArr = JSON.parse(response);\n        return new Promise((resolve) => {\n            let promiseAllArr = [];\n\n            // We are displaying the event as a bar whose width represents the start and end time of the event.\n            // We need to scale the width of the bar to match the width of the container. Therefore 100% width of the container\n            // equals 24 hours (one day).\n            // There are 1440 mins per day. 1440 mins equals 100%, therefore 1 min = (100/1440)%. 5/72 == 100/1440.\n            let scaler = 5/72;\n\n            for (let i=0; i<responseArr.length; i++) {\n                let promiseArr = [];\n                const year = responseArr[i].endyear;\n                const month = (responseArr[i].endmonth) - 1; // Minus 1 for difference between months in PHP and JS.\n                const day = responseArr[i].endday;\n                const dayStart = (new Date(year, month, day).getTime()) / 1000;\n                let secondsSinceDayStart = responseArr[i].timestart - dayStart;\n                let leftMargin = 0;\n                let width = 0;\n\n                if (secondsSinceDayStart <= 0) {\n                    secondsSinceDayStart = 0;\n                    width = ((responseArr[i].timeend - dayStart) / 60) * scaler;\n                    let startPromise = getUserDate(responseArr[i].timestart, 'strftimedatetime');\n                    promiseAllArr.push(startPromise);\n                    promiseArr.push(startPromise);\n                } else {\n                    leftMargin = (secondsSinceDayStart / 60) * scaler;\n                    width = ((responseArr[i].timeend - responseArr[i].timestart) / 60) * scaler;\n                    let startPromise = getUserDate(responseArr[i].timestart, 'strftimetime');\n                    promiseAllArr.push(startPromise);\n                    promiseArr.push(startPromise);\n                }\n\n                if (leftMargin + width > 100) {\n                    width = 100 - leftMargin;\n                }\n\n                responseArr[i].leftmargin = leftMargin;\n                responseArr[i].width = width;\n                let endPromise = getUserDate(responseArr[i].timeend, 'strftimetime');\n                promiseAllArr.push(endPromise);\n                promiseArr.push(endPromise);\n\n                Promise.all(promiseArr).then((values) => {\n                    responseArr[i].start = values[0];\n                    responseArr[i].end = values[1];\n                });\n\n            }\n\n            Promise.all(promiseAllArr).then(() => {\n                resolve(responseArr);\n            });\n\n        });\n    };\n\n\n    /**\n     * Initialise the base modal to be used.\n     *\n     */\n    Dayview.display = function(date) {\n        modalObj.setBody(spinner);\n        modalObj.show();\n        let args = {\n                date: date,\n                modules: ['all']\n            };\n            let jsonArgs = JSON.stringify(args);\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_day_events',\n            args: {jsondata: jsonArgs},\n        }])[0]\n        .then(formatData)\n        .then((responseArr) => {\n\n            let context = {rows: responseArr};\n            modalObj.setBody(Templates.render('local_assessfreq/dayview', context));\n\n        }).fail(() => {\n            Notification.exception(new Error('Failed to load day view'));\n        });\n    };\n\n    /**\n     * Initialise the base modal to be used.\n     *\n     * @param {integer} context The current context id.\n     */\n    Dayview.init = function() {\n        // Load the strings we'll need later.\n        Str.get_strings(stringArr).catch(() => { // Get required strings.\n            Notification.exception(new Error('Failed to load strings'));\n            return;\n        }).then(stringReturn => { // Save string to global to be used later.\n            stringResult = stringReturn;\n        });\n\n        Str.get_string('schedule', 'local_assessfreq').then((title) => {\n            // Create the Modal.\n            ModalFactory.create({\n                type: ModalLarge.TYPE,\n                title: title,\n                body: spinner\n            })\n            .done((modal) => {\n                modalObj = modal;\n\n            });\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loading'));\n        });\n\n    };\n\n    return Dayview;\n});\n"],"file":"dayview.min.js"}