{"version":3,"sources":["../src/dayview.js"],"names":["define","Str","Notification","ModalFactory","ModalLarge","Templates","Ajax","Dayview","modalObj","formatData","response","Promise","resolve","responseArr","JSON","parse","scaler","i","length","year","endyear","month","endmonth","day","endday","dayStart","Date","getTime","secondsSinceDayStart","timestart","leftMargin","width","timeend","window","console","log","leftmargin","display","date","jsonArgs","stringify","modules","call","methodname","args","jsondata","then","setBody","render","rows","show","fail","exception","Error","init","get_string","title","create","type","TYPE","body","done","modal","catch"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for heatmap calendar generation and display.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/notification', 'core/modal_factory', 'local_assessfreq/modal_large', 'core/templates', 'core/ajax'],\nfunction(Str, Notification, ModalFactory, ModalLarge, Templates, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var Dayview = {};\n    var modalObj;\n    const spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\n        + '</p>';\n\n    const formatData = function(response) {\n        return new Promise((resolve) => {\n            let responseArr = JSON.parse(response);\n\n            // We are displaying the event as a bar whose width represents the start and end time of the event.\n            // We need to scale the width of the bar to match the width of the container. Therefore 100% width of the container\n            // equals 24 hours (one day).\n            // There are 1440 mins per day. 1440 mins equals 100%, therefore 1 min = (100/1440)%. 5/72 == 100/1440.\n            let scaler = 5/72;\n\n            for (let i=0; i<responseArr.length; i++) {\n                const year = responseArr[i].endyear;\n                const month = (responseArr[i].endmonth) - 1; // Minus 1 for difference between months in PHP and JS.\n                const day = responseArr[i].endday;\n                const dayStart = (new Date(year, day, month).getTime()) / 1000;\n                let secondsSinceDayStart = responseArr[i].timestart - dayStart;\n                let leftMargin = 0;\n                let width = 0;\n\n                if (secondsSinceDayStart <= 0) {\n                    secondsSinceDayStart = 0;\n                    width = ((responseArr[i].timeend - dayStart) / 60) * scaler;\n                    window.console.log(width);\n                } else {\n                    leftMargin = (secondsSinceDayStart / 60) * scaler;\n                    width = ((responseArr[i].timeend - responseArr[i].timestart) / 60) * scaler;\n                }\n\n                if (leftMargin + width > 100) {\n                    width = 100 - leftMargin;\n                }\n\n                responseArr[i].leftmargin = leftMargin;\n                responseArr[i].width = width;\n                window.console.log(responseArr[i]);\n            }\n\n            resolve(responseArr);\n        });\n    };\n\n\n    /**\n     * Initialise the base modal to be used.\n     *\n     */\n    Dayview.display = function(date) {\n        let context = {};\n        let args = {\n                date: date,\n                modules: ['all']\n            };\n            let jsonArgs = JSON.stringify(args);\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_day_events',\n            args: {jsondata: jsonArgs},\n        }])[0]\n        .then(formatData)\n        .then((responseArr) => {\n\n            let context = {rows: responseArr};\n            modalObj.setBody(Templates.render('local_assessfreq/dayview', context));\n            modalObj.show();\n\n        }).fail(() => {\n            Notification.exception(new Error('Failed to load day view'));\n        });\n\n        //modalObj.setTitle(title);\n        modalObj.setBody(Templates.render('local_assessfreq/dayview', context));\n        modalObj.show();\n\n\n    };\n\n    /**\n     * Initialise the base modal to be used.\n     *\n     * @param {integer} context The current context id.\n     */\n    Dayview.init = function() {\n\n        Str.get_string('loading', 'core').then((title) => {\n            // Create the Modal.\n            ModalFactory.create({\n                type: ModalLarge.TYPE,\n                title: title,\n                body: spinner\n            })\n            .done((modal) => {\n                modalObj = modal;\n\n            });\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loading'));\n        });\n\n    };\n\n    return Dayview;\n});\n"],"file":"dayview.min.js"}