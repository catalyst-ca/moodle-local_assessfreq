{"version":3,"sources":["../src/dayview.js"],"names":["define","Str","Notification","ModalFactory","ModalLarge","Templates","Ajax","Dayview","modalObj","spinner","stringArr","key","component","stringResult","systemTimezone","getUserDate","timestamp","format","Promise","resolve","Date","toLocaleString","timeZone","date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","strftimetime","substr","formatData","response","responseArr","JSON","parse","promiseAllArr","scaler","i","promiseArr","endyear","endmonth","endday","dayStart","getTime","timeStart","timestart","timeStartTimestamp","timeEnd","timeend","timeEndTimestamp","secondsSinceDayStart","leftMargin","width","startPromise","push","leftmargin","endPromise","all","then","values","start","end","length","display","setBody","show","jsonArgs","stringify","modules","call","methodname","args","jsondata","render","rows","fail","exception","Error","init","get_strings","catch","stringReturn","get_string","title","create","type","TYPE","body","done","modal"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for heatmap calendar generation and display.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/notification', 'core/modal_factory', 'local_assessfreq/modal_large', 'core/templates', 'core/ajax'],\nfunction(Str, Notification, ModalFactory, ModalLarge, Templates, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var Dayview = {};\n    var modalObj;\n    const spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i>'\n        + '</p>';\n\n    const stringArr = [\n        {key: 'sun', component: 'calendar'},\n        {key: 'mon', component: 'calendar'},\n        {key: 'tue', component: 'calendar'},\n        {key: 'wed', component: 'calendar'},\n        {key: 'thu', component: 'calendar'},\n        {key: 'fri', component: 'calendar'},\n        {key: 'sat', component: 'calendar'},\n        {key: 'jan', component: 'local_assessfreq'},\n        {key: 'feb', component: 'local_assessfreq'},\n        {key: 'mar', component: 'local_assessfreq'},\n        {key: 'apr', component: 'local_assessfreq'},\n        {key: 'may', component: 'local_assessfreq'},\n        {key: 'jun', component: 'local_assessfreq'},\n        {key: 'jul', component: 'local_assessfreq'},\n        {key: 'aug', component: 'local_assessfreq'},\n        {key: 'sep', component: 'local_assessfreq'},\n        {key: 'oct', component: 'local_assessfreq'},\n        {key: 'nov', component: 'local_assessfreq'},\n        {key: 'dec', component: 'local_assessfreq'},\n    ];\n    var stringResult;\n    var systemTimezone = 'Australia/Melbourne';\n\n    const getUserDate = function(timestamp, format) {\n        return new Promise((resolve) => {\n            const systemTimezone = new Date(timestamp * 1000).toLocaleString('en-US', {timeZone: systemTimezone});\n            let date = new Date(systemTimezone);\n            const year = date.getFullYear();\n            const month = stringResult[(7 + date.getMonth())];\n            const day = date.getDate();\n            const hours = date.getHours();\n            const minutes = '0' + date.getMinutes();\n\n            const strftimetime = hours + ':' + minutes.substr(-2); // Will display time in 10:30 format.\n            const strftimedatetime = day + ' ' + month + ' ' + year + ', ' + strftimetime;\n\n            if (format === 'strftimetime') {\n                resolve(strftimetime);\n            } else {\n                resolve(strftimedatetime);\n            }\n\n        });\n    };\n\n    const formatData = function(response) {\n        let responseArr = JSON.parse(response);\n        return new Promise((resolve) => {\n            let promiseAllArr = [];\n\n            // We are displaying the event as a bar whose width represents the start and end time of the event.\n            // We need to scale the width of the bar to match the width of the container. Therefore 100% width of the container\n            // equals 24 hours (one day).\n            // There are 1440 mins per day. 1440 mins equals 100%, therefore 1 min = (100/1440)%. 5/72 == 100/1440.\n            let scaler = 5/72;\n\n            for (let i=0; i<responseArr.length; i++) {\n                let promiseArr = [];\n                const year = responseArr[i].endyear;\n                const month = (responseArr[i].endmonth) - 1; // Minus 1 for difference between months in PHP and JS.\n                const day = responseArr[i].endday;\n                const dayStart = (new Date(year, month, day).getTime()) / 1000;\n                const timeStart = new Date(responseArr[i].timestart * 1000).toLocaleString('en-US', {timeZone: systemTimezone});\n                const timeStartTimestamp = (new Date(timeStart).getTime()) / 1000;\n                const timeEnd = new Date(responseArr[i].timeend * 1000).toLocaleString('en-US', {timeZone: systemTimezone});\n                const timeEndTimestamp = (new Date(timeEnd).getTime()) / 1000;\n                let secondsSinceDayStart = timeStartTimestamp - dayStart;\n                let leftMargin = 0;\n                let width = 0;\n\n                if (secondsSinceDayStart <= 0) {\n                    secondsSinceDayStart = 0;\n                    width = ((timeEndTimestamp - dayStart) / 60) * scaler;\n                    let startPromise = getUserDate(responseArr[i].timestart, 'strftimedatetime');\n                    promiseAllArr.push(startPromise);\n                    promiseArr.push(startPromise);\n                } else {\n                    leftMargin = (secondsSinceDayStart / 60) * scaler;\n                    width = ((timeEndTimestamp - timeStartTimestamp) / 60) * scaler;\n                    let startPromise = getUserDate(responseArr[i].timestart, 'strftimetime');\n                    promiseAllArr.push(startPromise);\n                    promiseArr.push(startPromise);\n                }\n\n                if (leftMargin + width > 100) {\n                    width = 100 - leftMargin;\n                }\n\n                responseArr[i].leftmargin = leftMargin;\n                responseArr[i].width = width;\n                let endPromise = getUserDate(responseArr[i].timeend, 'strftimetime');\n                promiseAllArr.push(endPromise);\n                promiseArr.push(endPromise);\n\n                Promise.all(promiseArr).then((values) => {\n                    responseArr[i].start = values[0];\n                    responseArr[i].end = values[1];\n                });\n\n            }\n\n            Promise.all(promiseAllArr).then(() => {\n                resolve(responseArr);\n            });\n\n        });\n    };\n\n\n    /**\n     * Initialise the base modal to be used.\n     *\n     */\n    Dayview.display = function(date) {\n        modalObj.setBody(spinner);\n        modalObj.show();\n        let args = {\n                date: date,\n                modules: ['all']\n            };\n            let jsonArgs = JSON.stringify(args);\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_day_events',\n            args: {jsondata: jsonArgs},\n        }])[0]\n        .then(formatData)\n        .then((responseArr) => {\n\n            let context = {rows: responseArr};\n            modalObj.setBody(Templates.render('local_assessfreq/dayview', context));\n\n        }).fail(() => {\n            Notification.exception(new Error('Failed to load day view'));\n        });\n    };\n\n    /**\n     * Initialise the base modal to be used.\n     *\n     * @param {integer} context The current context id.\n     */\n    Dayview.init = function() {\n        // Load the strings we'll need later.\n        Str.get_strings(stringArr).catch(() => { // Get required strings.\n            Notification.exception(new Error('Failed to load strings'));\n            return;\n        }).then(stringReturn => { // Save string to global to be used later.\n            stringResult = stringReturn;\n        });\n\n        // Get the system timzone.\n        Ajax.call([{\n            methodname: 'local_assessfreq_get_system_timezone',\n            args: {},\n        }], true, false)[0].then((response) => {\n            systemTimezone = response;\n            return;\n        }).fail(() => {\n            Notification.exception(new Error('Failed to get system timezone'));\n        });\n\n        Str.get_string('schedule', 'local_assessfreq').then((title) => {\n            // Create the Modal.\n            ModalFactory.create({\n                type: ModalLarge.TYPE,\n                title: title,\n                body: spinner\n            })\n            .done((modal) => {\n                modalObj = modal;\n\n            });\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loading'));\n        });\n\n    };\n\n    return Dayview;\n});\n"],"file":"dayview.min.js"}