{"version":3,"sources":["../src/calendar.js"],"names":["define","Str","Notification","Ajax","Calendar","eventArray","stringArr","key","component","stringResult","heatRangeMax","heatRangeMin","colorArray","processModules","heatRangeScale","getContrast","hexcolor","slice","r","parseInt","substr","g","b","daysInMonth","month","year","Date","getDate","getHeatColors","Promise","resolve","reject","call","methodname","args","done","response","JSON","parse","fail","Error","getProcessModules","calcHeatRange","dateObj","eventcount","i","j","push","number","Math","max","min","getHeat","eventCount","localRange","localPercent","heat","round","getEvents","metric","modules","jsonArgs","stringify","jsondata","getMonthEvents","monthevents","createTables","startMonth","endMonth","calendarContainer","document","createElement","container","classList","add","table","thead","tbody","id","monthRow","dayrow","monthHeader","colSpan","innerHTML","dayHeader","appendChild","getTooltip","dayArray","tipHTML","Object","entries","value","populateCalendarDays","firstDay","getDay","monthEvents","date","row","cell","cellText","createTextNode","dataset","event","hasOwnProperty","style","backgroundColor","color","toggle","html","title","cursor","populateCalendar","tables","getElementsByTagName","length","createHeatScale","trow","generate","eventObj","get_strings","catch","exception","then","stringReturn","calendarHTML"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for heatmap calendar generation and display.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/notification', 'core/ajax'], function(Str, Notification, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var Calendar = {};\n    var eventArray = [];\n    const stringArr = [\n        {key: 'sun', component: 'calendar'},\n        {key: 'mon', component: 'calendar'},\n        {key: 'tue', component: 'calendar'},\n        {key: 'wed', component: 'calendar'},\n        {key: 'thu', component: 'calendar'},\n        {key: 'fri', component: 'calendar'},\n        {key: 'sat', component: 'calendar'},\n        {key: 'jan', component: 'local_assessfreq'},\n        {key: 'feb', component: 'local_assessfreq'},\n        {key: 'mar', component: 'local_assessfreq'},\n        {key: 'apr', component: 'local_assessfreq'},\n        {key: 'may', component: 'local_assessfreq'},\n        {key: 'jun', component: 'local_assessfreq'},\n        {key: 'jul', component: 'local_assessfreq'},\n        {key: 'aug', component: 'local_assessfreq'},\n        {key: 'sep', component: 'local_assessfreq'},\n        {key: 'oct', component: 'local_assessfreq'},\n        {key: 'nov', component: 'local_assessfreq'},\n        {key: 'dec', component: 'local_assessfreq'},\n    ];\n    var stringResult;\n    var heatRangeMax;\n    var heatRangeMin;\n    var colorArray;\n    var processModules;\n    var heatRangeScale = {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0};\n\n    /**\n     * Pick a contrasting text color based on the background color.\n     *\n     * @param  {String} A hexcolor value.\n     * @return {String} The contrasting color (black or white).\n     */\n    const getContrast = function (hexcolor) {\n\n        // If a leading # is provided, remove it.\n        if (hexcolor.slice(0, 1) === '#') {\n            hexcolor = hexcolor.slice(1);\n        }\n\n        // Convert to RGB value.\n        var r = parseInt(hexcolor.substr(0,2),16);\n        var g = parseInt(hexcolor.substr(2,2),16);\n        var b = parseInt(hexcolor.substr(4,2),16);\n\n        // Get YIQ ratio.\n        var yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n\n        // Check contrast.\n        return (yiq >= 128) ? '#000000' : '#FFFFFF';\n    };\n\n    /**\n     * Check how many days in a month code.\n     * from https://dzone.com/articles/determining-number-days-month.\n     *\n     * @method daysInMonth\n     * @param {Number} month The month to get the number of days for.\n     * @param {Number} year The year to get the number of days for.\n     */\n    const daysInMonth = function(month, year) {\n        return 32 - new Date(year, month, 32).getDate();\n    };\n\n    /**\n     * Get the heat colors to use in the heat map via Ajax.\n     *\n     * @method getHeatColors\n     */\n    const getHeatColors = function() {\n        return new Promise((resolve, reject) => {\n            Ajax.call([{\n                methodname: 'local_assessfreq_get_heat_colors',\n                args: {},\n            }], true, false)[0].done(function(response) {\n                colorArray = JSON.parse(response);\n                resolve(colorArray);\n            }).fail(function() {\n                reject(new Error('Failed to get heat colors'));\n            });\n        });\n    };\n\n    /**\n     * Get the event names that we are processing.\n     *\n     * @method getProcessEvents\n     */\n    const getProcessModules = function() {\n        return new Promise((resolve, reject) => {\n            Ajax.call([{\n                methodname: 'local_assessfreq_get_process_modules',\n                args: {},\n            }], true, false)[0].done(function(response) {\n                processModules = JSON.parse(response);\n                resolve(processModules);\n            }).fail(function() {\n                reject(new Error('Failed to get process events'));\n            });\n        });\n    };\n\n    /**\n     * Calculate the min and max values to use in the heatmap.\n     *\n     * @method daysInMonth\n     * @param {Object} eventArray All the event count for the heatmap.\n     * @param {Object} dateObj Date details.\n     */\n    const calcHeatRange = function(eventArray, dateObj) {\n        return new Promise((resolve) => {\n            if (eventArray[dateObj.year] !== \"undefined\") { // If scheduled tasks have not run yet we may not have any data.\n\n                let eventcount = new Array;\n                let year = eventArray[dateObj.year];\n\n                // Itterate through all the event counts.\n                // This code looks nasty but there is only 366 days in a year.\n                for (let i = 0; i < 12; i++) {\n                    if (typeof year[i] !== \"undefined\") {\n                        let month = year[i];\n                        for (let j = 0; j < 32; j++) {\n                            if (typeof month[j] !== \"undefined\") {\n                                eventcount.push(month[j].number);\n                            }\n                        }\n                    }\n                }\n\n                // Get min and max values to calculate heat spread.\n                heatRangeMax = Math.max(...eventcount);\n                heatRangeMin = Math.min(...eventcount);\n            } else {\n                heatRangeMax = 1;\n                heatRangeMin = 1;\n            }\n\n            resolve(eventArray);\n        });\n    };\n\n    /**\n     * Translate assessment frequency to a heat value.\n     *\n     * @method getHeat\n     * @param {Number} eventCount The count to get the heat value.\n     * @return {Number} heat The heat value.\n     */\n    const getHeat = function(eventCount) {\n        let scaleMin = 1;\n\n        if (eventCount == heatRangeMin) {\n            return scaleMin;\n        }\n\n        const scaleRange = 6;  // 0 - 5  steps.\n        const localRange = heatRangeMax - heatRangeMin;\n        const localPercent = (eventCount - heatRangeMin) / localRange;\n        let heat = Math.round(localPercent * scaleRange);\n\n        // Clamp values.\n        if (heat < 1) {\n            heat = 1;\n        }\n\n        if (heat > 6) {\n            heat = 6;\n        }\n\n        return heat;\n    };\n\n    /**\n     * Get the events to display in the calendar via ajax call.\n     *\n     * @method getEvents\n     * @param {Number} year The year to get the events for.\n     * @param {String} metric The type of metric to get, 'students' or 'assess'.\n     * @param {Array} modules Array of the modules to get.\n     * @return {Promise}\n     */\n    const getEvents = function({year, metric, modules}) {\n        return new Promise((resolve, reject) => {\n            let args = {\n                year: year,\n                metric: metric,\n                modules: modules\n            };\n            let jsonArgs = JSON.stringify(args);\n\n            // Get the events to use in the mapping.\n            Ajax.call([{\n                methodname: 'local_assessfreq_get_frequency',\n                args: {\n                    jsondata: jsonArgs\n                },\n            }])[0].done((response) => {\n                eventArray = JSON.parse(response);\n                resolve(eventArray);\n            }).fail(() => {\n                reject(new Error('Failed to get events'));\n            });\n        });\n    };\n\n    /**\n     * Get the events for a particular month and year.\n     *\n     * @param {Number} year The year to get the number of days for.\n     * @param {Number} month The month to get the number of days for.\n     * @return {Array} monthevents The events for the supplied month.\n     */\n    const getMonthEvents = function(year, month) {\n        let monthevents;\n\n        if ((typeof eventArray[year] !== \"undefined\") && (typeof eventArray[year][month] !== \"undefined\")) {\n            monthevents = eventArray[year][month];\n        }\n\n        return monthevents;\n    };\n\n    /**\n     * Create the table structure for the calendar months.\n     *\n     * @oaram {Number} year The year to generate the tables for.\n     * @param {Number} startMonth The month to start table generation from.\n     * @param {Number} endMonth The month to generate the tables to.\n     * @return {Promise}\n     */\n    const createTables = function({year, startMonth, endMonth}) {\n        return new Promise((resolve, reject) => {\n            let calendarContainer = document.createElement('div');\n            let month = startMonth;\n\n            // Itterate through and build are tables.\n            for (let i = startMonth; i <= endMonth; i++) {\n                // Setup some elements.\n                let container = document.createElement('div');\n                container.classList.add('local-assessfreq-month');\n                let table = document.createElement('table');\n                let thead = document.createElement('thead');\n                let tbody = document.createElement('tbody');\n                tbody.id = 'calendar-body-' + i;\n                let monthRow = document.createElement('tr');\n                let dayrow = document.createElement('tr');\n                let monthHeader = document.createElement('th');\n                monthHeader.colSpan = 7;\n                monthHeader.innerHTML = stringResult[(7 + month)];\n\n                for (let j = 0; j < 7; j++) {\n                    let dayHeader = document.createElement('th');\n                    dayHeader.innerHTML = stringResult[j];\n                    dayrow.appendChild(dayHeader);\n                }\n\n                // Construct the table.\n                monthRow.appendChild(monthHeader);\n\n                thead.appendChild(monthRow);\n                thead.appendChild(dayrow);\n\n                table.appendChild(thead);\n                table.appendChild(tbody);\n\n                container.appendChild(table);\n\n                // Add to parent.\n                calendarContainer.appendChild(container);\n\n                // Increment variables.\n                month++;\n            }\n\n            if ((typeof year === 'undefined') || (typeof startMonth === 'undefined') || (typeof endMonth === 'undefined')) {\n                reject(Error('Failed to create calendar tables.'));\n            } else {\n                const resultObj = {\n                    calendarContainer : calendarContainer,\n                    year : year,\n                    startMonth : startMonth\n                };\n                resolve(resultObj);\n            }\n        });\n    };\n\n    /**\n     * Generate the tooltip HTML.\n     *\n     * @param {Object} dayArray The details of the events for that day/\n     * @return {String} tipHTML The HTML for the tooltip.\n     */\n    const getTooltip = function(dayArray) {\n        let tipHTML = '';\n\n        for (let [key, value] of Object.entries(dayArray)) {\n            tipHTML += '<strong>' + processModules[key] + ':</strong> ' + value + '<br/>';\n        }\n\n        return tipHTML;\n    };\n\n    /**\n     * Generate calendar markup for the month.\n     *\n     * @param {Object} table The base table to populate.\n     * @param {Number} year The year to generate calendar for.\n     * @param {Number} month The monthe to generate calendar for.\n     */\n    const populateCalendarDays = function(table, year, month) {\n        let firstDay = (new Date(year, month)).getDay();  // Get the starting day of the month.\n        let monthEvents = getMonthEvents(year, (month + 1));  // We add one due to month diferences between PHP and JS.\n        let date = 1;  // Creating all cells.\n\n        for (let i = 0; i < 6; i++) {\n            let row = document.createElement(\"tr\"); // Creates a table row.\n\n            // Creating individual cells, filing them up with data.\n            for (let j = 0; j < 7; j++) {\n                if (i === 0 && j < firstDay) {\n                    var cell = document.createElement(\"td\");\n                    var cellText = document.createTextNode(\"\");\n                    cell.dataset.event = 'false';\n\n                } else if (date > daysInMonth(month, year)) { // Break if we have generated all the days for this month.\n                    break;\n                } else {\n                    cell = document.createElement(\"td\");\n                    cellText = document.createTextNode(date);\n                    if ((typeof monthEvents !== \"undefined\") && (monthEvents.hasOwnProperty(date))) {\n                       let heat = getHeat(monthEvents[date]['number']);\n\n                       if (heatRangeScale[heat] < monthEvents[date]['number']) {\n                           heatRangeScale[heat] = monthEvents[date]['number'];\n                       }\n\n                       cell.style.backgroundColor = colorArray[heat];\n                       cell.style.color = getContrast(colorArray[heat]);\n\n                        //Add tooltip to cell.\n                        cell.dataset.toggle = 'tooltip';\n                        cell.dataset.html = 'true';\n                        cell.dataset.event = 'true';\n                        cell.dataset.date = year + '-' + (month + 1) + '-' + date;\n                        cell.title = getTooltip(monthEvents[date]);\n                        cell.style.cursor = \"pointer\";\n\n                    }\n                    date++;\n                }\n\n                cell.appendChild(cellText);\n                row.appendChild(cell);\n            }\n            table.appendChild(row); // Appending each row into calendar body.\n        }\n    };\n\n    /**\n     * Controls the population of the calendar in to the base tables.\n     *\n     * @param {Object} calendarContainer the container to populate.\n     * @param {Number} year The year to generate calendar for.\n     * @param {Number} startMonth The month to start generation from.\n     * @return {Promise}\n     */\n    const populateCalendar = function({calendarContainer, year, startMonth}) {\n        return new Promise((resolve, reject) => {\n            // Get the table bodies.\n            let tables = calendarContainer.getElementsByTagName(\"tbody\");\n            let month = startMonth;\n\n            // For each table body populate with calendar.\n            for (var i = 0; i < tables.length; i++) {\n                let table = tables[i];\n                populateCalendarDays(table, year, month);\n                month++;\n            }\n\n            if (typeof calendarContainer === 'undefined') {\n                reject(Error('Failed to populate calendar tables.'));\n            } else {\n                resolve(calendarContainer);\n            }\n        });\n    };\n\n    /**\n     * Create the heatmap scale for the calendar.\n     *\n     * @method createHeatScale\n     */\n    Calendar.createHeatScale = function() {\n        return new Promise((resolve) => {\n            let table = document.createElement('table');\n            let tbody = document.createElement('tbody');\n            let trow = document.createElement('tr');\n\n            for (var i = 1; i < 7; i++) {\n                if (heatRangeScale[i] !== 0) {\n                    let cell = document.createElement('td');\n                    let cellText = document.createTextNode(heatRangeScale[i] + '+');\n\n                    cell.appendChild(cellText);\n                    cell.style.backgroundColor = colorArray[i];\n                    cell.style.color = getContrast(colorArray[i]);\n\n                    trow.appendChild(cell);\n                }\n\n            }\n\n            tbody.appendChild(trow);\n            table.appendChild(tbody);\n\n            resolve(table);\n        });\n    };\n\n    /**\n     * Initialise method for report calendar heatmap creation.\n     *\n     * @param {Number} year The year to generate the heatmap for.\n     * @param {Number} startMonth The month to start with for the heatmap calendar.\n     * @param {Number} endMonth The month to end with for the heatmap calendar.\n     * @param {String} metric The type of metric to display, 'students' or 'aseess'.\n     * @param {Array} modules The modules to display in the heatamp.\n     * @return {Promise}\n     */\n    Calendar.generate = function(year, startMonth, endMonth, metric, modules) {\n        return new Promise((resolve, reject) => {\n            const dateObj = {\n                year : year,\n                startMonth : startMonth,\n                endMonth : endMonth\n            };\n\n            const eventObj = {\n                year : year,\n                metric : metric,\n                modules : modules\n            };\n\n            Str.get_strings(stringArr).catch(() => { // Get required strings.\n                Notification.exception(new Error('Failed to load strings'));\n                return;\n            }).then(stringReturn => { // Save string to global to be used later.\n                stringResult = stringReturn;\n                return eventObj;\n            })\n            .then(getEvents)\n            .then((eventArray) => {\n                calcHeatRange(eventArray, dateObj);\n            })\n            .then(getHeatColors)\n            .then(getProcessModules)\n            .then(() => {\n                return dateObj;\n            })\n            .then(createTables) // Create tables for calendar.\n            .then(populateCalendar)\n            .then((calendarHTML) => { // Return the result of the generate function.\n                if (typeof calendarHTML !== 'undefined') {\n                    resolve(calendarHTML);\n                } else {\n                    reject(Error('Could not generate calendar'));\n                }\n            });\n        });\n\n    };\n\n    return Calendar;\n});\n"],"file":"calendar.min.js"}