{"version":3,"sources":["../src/calendar.js"],"names":["define","Str","Notification","Ajax","Calendar","eventArray","stringArr","key","component","stringResult","today","Date","daysInMonth","month","year","getDate","getEvents","metric","modules","Promise","resolve","reject","jsonArgs","JSON","stringify","call","methodname","args","jsondata","done","response","parse","fail","Error","getMonthEvents","monthevents","createTables","startMonth","endMonth","calendarContainer","document","createElement","i","container","classList","add","table","thead","tbody","id","monthRow","dayrow","monthHeader","colSpan","innerHTML","j","dayHeader","appendChild","populateCalendarDays","firstDay","getDay","monthEvents","date","row","cell","cellText","createTextNode","hasOwnProperty","heatClass","parseInt","getFullYear","getMonth","populateCalendar","tables","getElementsByTagName","length","generate","dateObj","eventObj","get_strings","catch","exception","then","stringReturn","calendarHTML"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for heatmap calendar generation and display.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/notification', 'core/ajax'], function(Str, Notification, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var Calendar = {};\n    var eventArray = [];\n    const stringArr = [\n        {key: 'sun', component: 'calendar'},\n        {key: 'mon', component: 'calendar'},\n        {key: 'tue', component: 'calendar'},\n        {key: 'wed', component: 'calendar'},\n        {key: 'thu', component: 'calendar'},\n        {key: 'fri', component: 'calendar'},\n        {key: 'sat', component: 'calendar'},\n        {key: 'jan', component: 'local_assessfreq'},\n        {key: 'feb', component: 'local_assessfreq'},\n        {key: 'mar', component: 'local_assessfreq'},\n        {key: 'apr', component: 'local_assessfreq'},\n        {key: 'may', component: 'local_assessfreq'},\n        {key: 'jun', component: 'local_assessfreq'},\n        {key: 'jul', component: 'local_assessfreq'},\n        {key: 'aug', component: 'local_assessfreq'},\n        {key: 'sep', component: 'local_assessfreq'},\n        {key: 'oct', component: 'local_assessfreq'},\n        {key: 'nov', component: 'local_assessfreq'},\n        {key: 'dec', component: 'local_assessfreq'},\n    ];\n    var stringResult;\n    const today = new Date();\n\n    /**\n     * Check how many days in a month code.\n     * from https://dzone.com/articles/determining-number-days-month.\n     *\n     * @method daysInMonth\n     * @param {Number} month The month to get the number of days for.\n     * @param {Number} year The year to get the number of days for.\n     */\n    const daysInMonth = function(month, year) {\n        return 32 - new Date(year, month, 32).getDate();\n    };\n\n    /**\n     * Get the events to display in the calendar via ajax call.\n     *\n     * @method getEvents\n     * @param {Number} year The year to get the events for.\n     * @param {String} metric The type of metric to get, 'students' or 'assess'.\n     * @param {Array} modules Array of the modules to get.\n     * @return {Promise}\n     */\n    const getEvents = function({year, metric, modules}) {\n        return new Promise((resolve, reject) => {\n            let args = {\n                year: year,\n                metric: metric,\n                modules: modules\n            };\n            let jsonArgs = JSON.stringify(args);\n\n            // Get the events to use in the mapping.\n            Ajax.call([{\n                methodname: 'local_assessfreq_get_frequency',\n                args: {\n                    jsondata: jsonArgs\n                },\n            }])[0].done(function(response) {\n                eventArray = JSON.parse(response);\n                resolve(eventArray);\n            }).fail(function() {\n                reject(new Error('Failed to get events'));\n            });\n        });\n    };\n\n    /**\n     * Get the events for a particular month and year.\n     *\n     * @param {Number} year The year to get the number of days for.\n     * @param {Number} month The month to get the number of days for.\n     * @return {Array} monthevents The events for the supplied month.\n     */\n    const getMonthEvents = function(year, month) {\n        let monthevents;\n\n        if ((typeof eventArray[year] !== \"undefined\") && (typeof eventArray[year][month] !== \"undefined\")) {\n            monthevents = eventArray[year][month];\n        }\n\n        return monthevents;\n    };\n\n    /**\n     * Create the table structure for the calendar months.\n     *\n     * @oaram {Number} year The year to generate the tables for.\n     * @param {Number} startMonth The month to start table generation from.\n     * @param {Number} endMonth The month to generate the tables to.\n     * @return {Promise}\n     */\n    const createTables = function({year, startMonth, endMonth}) {\n        return new Promise((resolve, reject) => {\n            let calendarContainer = document.createElement('div');\n            let month = startMonth;\n\n            // Itterate through and build are tables.\n            for (let i = startMonth; i <= endMonth; i++) {\n                // Setup some elements.\n                let container = document.createElement('div');\n                container.classList.add('local-assessfreq-month');\n                let table = document.createElement('table');\n                let thead = document.createElement('thead');\n                let tbody = document.createElement('tbody');\n                tbody.id = 'calendar-body-' + i;\n                let monthRow = document.createElement('tr');\n                let dayrow = document.createElement('tr');\n                let monthHeader = document.createElement('th');\n                monthHeader.colSpan = 7;\n                monthHeader.innerHTML = stringResult[(7 + month)];\n\n                for (let j = 0; j < 7; j++) {\n                    let dayHeader = document.createElement('th');\n                    dayHeader.innerHTML = stringResult[j];\n                    dayrow.appendChild(dayHeader);\n                }\n\n                // Construct the table.\n                monthRow.appendChild(monthHeader);\n\n                thead.appendChild(monthRow);\n                thead.appendChild(dayrow);\n\n                table.appendChild(thead);\n                table.appendChild(tbody);\n\n                container.appendChild(table);\n\n                // Add to parent.\n                calendarContainer.appendChild(container);\n\n                // Increment variables.\n                month++;\n            }\n\n            if ((typeof year === 'undefined') || (typeof startMonth === 'undefined') || (typeof endMonth === 'undefined')) {\n                reject(Error('Failed to create calendar tables.'));\n            } else {\n                const resultObj = {\n                    calendarContainer : calendarContainer,\n                    year : year,\n                    startMonth : startMonth\n                };\n                resolve(resultObj);\n            }\n        });\n    };\n\n    /**\n     * Generate calendar markup for the month.\n     *\n     * @param {Object} table The base table to populate.\n     * @param {Number} year The year to generate calendar for.\n     * @param {Number} month The monthe to generate calendar for.\n     */\n    const populateCalendarDays = function(table, year, month) {\n        let firstDay = (new Date(year, month)).getDay();  // Get the starting day of the month.\n        let monthEvents = getMonthEvents(year, (month + 1));  // We add one due to month diferences between PHP and JS.\n        let date = 1;  // Creating all cells.\n\n        for (let i = 0; i < 6; i++) {\n            let row = document.createElement(\"tr\"); // Creates a table row.\n\n            // Creating individual cells, filing them up with data.\n            for (let j = 0; j < 7; j++) {\n                if (i === 0 && j < firstDay) {\n                    var cell = document.createElement(\"td\");\n                    var cellText = document.createTextNode(\"\");\n                    cell.appendChild(cellText);\n                    row.appendChild(cell);\n                }\n                else if (date > daysInMonth(month, year)) { // Break if we have generated all the days for this month.\n                    break;\n                }\n                else {\n                    cell = document.createElement(\"td\");\n                    cellText = document.createTextNode(date);\n                    if ((typeof monthEvents !== \"undefined\") && (monthEvents.hasOwnProperty(date))) {\n                        var heatClass = \"local-assessfreq-heat-\" + monthEvents[date]['heat'];\n                        cell.classList.add(heatClass);\n                    }\n                    if (date === today.getDate()\n                            && parseInt(year) === today.getFullYear() && parseInt(month) === today.getMonth()) {\n\n                        cell.classList.add(\"bg-info\");\n                    } // Color today's date.\n                    cell.appendChild(cellText);\n                    row.appendChild(cell);\n                    date++;\n                }\n\n            }\n            table.appendChild(row); // Appending each row into calendar body.\n        }\n    };\n\n    /**\n     * Controls the population of the calendar in to the base tables.\n     *\n     * @param {Object} calendarContainer the container to populate.\n     * @param {Number} year The year to generate calendar for.\n     * @param {Number} startMonth The month to start generation from.\n     * @return {Promise}\n     */\n    const populateCalendar = function({calendarContainer, year, startMonth}) {\n        return new Promise((resolve, reject) => {\n            // Get the table boodies.\n            let tables = calendarContainer.getElementsByTagName(\"tbody\");\n            let month = startMonth;\n\n            // For each table body populate with calendar.\n            for (var i = 0; i < tables.length; i++) {\n                let table = tables[i];\n                populateCalendarDays(table, year, month);\n                month++;\n            }\n\n            if (typeof calendarContainer === 'undefined') {\n                reject(Error('Failed to populate calendar tables.'));\n            } else {\n                resolve(calendarContainer);\n            }\n        });\n    };\n\n    /**\n     * Initialise method for report calendar heatmap creation.\n     *\n     * @param {Number} year The year to generate the heatmap for.\n     * @param {Number} startMonth The month to start with for the heatmap calendar.\n     * @param {Number} endMonth The month to end with for the heatmap calendar.\n     * @param {String} metric The type of metric to display, 'students' or 'aseess'.\n     * @param {Array} modules The modules to display in the heatamp.\n     * @return {Promise}\n     */\n    Calendar.generate = function(year, startMonth, endMonth, metric, modules) {\n        return new Promise((resolve, reject) => {\n            const dateObj = {\n                year : year,\n                startMonth : startMonth,\n                endMonth : endMonth\n            };\n\n            const eventObj = {\n                year : year,\n                metric : metric,\n                modules : modules\n            };\n\n            Str.get_strings(stringArr).catch(() => { // Get required strings.\n                Notification.exception(new Error('Failed to load strings'));\n                return;\n            }).then(stringReturn => { // Save string to global to be used later.\n                stringResult = stringReturn;\n                return eventObj;\n            })\n            .then(getEvents)\n            .then(() => { // Get events for settings.\n                return dateObj;\n            })\n            .then(createTables) // Create tables for calendar.\n            .then(populateCalendar)\n            .then((calendarHTML) => { // Return the result of the generate function.\n                if (typeof calendarHTML !== 'undefined') {\n                    resolve(calendarHTML);\n                } else {\n                    reject(Error('Could not generate calendar'));\n                }\n            });\n        });\n\n    };\n\n    return Calendar;\n});\n"],"file":"calendar.min.js"}