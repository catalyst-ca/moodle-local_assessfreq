{"version":3,"sources":["../src/calendar.js"],"names":["define","Str","Notification","Calendar","stringArr","key","component","stringResult","today","Date","daysInMonth","month","year","getDate","createTables","startMonth","endMonth","Promise","resolve","reject","calendarContainer","document","createElement","i","container","classList","add","table","thead","tbody","id","monthRow","dayrow","monthHeader","colSpan","innerHTML","j","dayHeader","appendChild","Error","populateCalendarDays","firstDay","getDay","date","row","cell","cellText","createTextNode","parseInt","getFullYear","getMonth","populateCalendar","tables","getElementsByTagName","length","generate","dateObj","get_strings","catch","exception","then","stringReturn","calendarHTML"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/notification'], function(Str, Notification) {\n\n    /**\n     * Module level variables.\n     */\n    var Calendar = {};\n    const stringArr = [\n        {key: 'sun', component: 'calendar'},\n        {key: 'mon', component: 'calendar'},\n        {key: 'tue', component: 'calendar'},\n        {key: 'wed', component: 'calendar'},\n        {key: 'thu', component: 'calendar'},\n        {key: 'fri', component: 'calendar'},\n        {key: 'sat', component: 'calendar'},\n        {key: 'jan', component: 'local_assessfreq'},\n        {key: 'feb', component: 'local_assessfreq'},\n        {key: 'mar', component: 'local_assessfreq'},\n        {key: 'apr', component: 'local_assessfreq'},\n        {key: 'may', component: 'local_assessfreq'},\n        {key: 'jun', component: 'local_assessfreq'},\n        {key: 'jul', component: 'local_assessfreq'},\n        {key: 'aug', component: 'local_assessfreq'},\n        {key: 'sep', component: 'local_assessfreq'},\n        {key: 'oct', component: 'local_assessfreq'},\n        {key: 'nov', component: 'local_assessfreq'},\n        {key: 'dec', component: 'local_assessfreq'},\n    ];\n    var stringResult;\n    const today = new Date();\n\n    /**\n     * Check how many days in a month code.\n     * from https://dzone.com/articles/determining-number-days-month.\n     */\n    const daysInMonth = (month, year) => {\n        return 32 - new Date(year, month, 32).getDate();\n    };\n\n    /**\n     *\n     */\n    const createTables = ({year, startMonth, endMonth}) => {\n        return new Promise((resolve, reject) => {\n            let calendarContainer = document.createElement('div');\n            let month = startMonth;\n\n            // Itterate through and build are tables.\n            for (let i = startMonth; i <= endMonth; i++) {\n                // Setup some elements.\n                let container = document.createElement('div');\n                container.classList.add('local-assessfreq-month');\n                let table = document.createElement('table');\n                let thead = document.createElement('thead');\n                let tbody = document.createElement('tbody');\n                tbody.id = 'calendar-body-' + i;\n                let monthRow = document.createElement('tr');\n                let dayrow = document.createElement('tr');\n                let monthHeader = document.createElement('th');\n                monthHeader.colSpan = 7;\n                monthHeader.innerHTML = stringResult[(7 + month)];\n\n                for (let j = 0; j < 7; j++) {\n                    let dayHeader = document.createElement('th');\n                    dayHeader.innerHTML = stringResult[j];\n                    dayrow.appendChild(dayHeader);\n                }\n\n                // Construct the table.\n                monthRow.appendChild(monthHeader);\n\n                thead.appendChild(monthRow);\n                thead.appendChild(dayrow);\n\n                table.appendChild(thead);\n                table.appendChild(tbody);\n\n                container.appendChild(table);\n\n                // Add to parent.\n                calendarContainer.appendChild(container);\n\n                // Increment variables.\n                month++;\n            }\n\n            if ((typeof year === 'undefined') || (typeof startMonth === 'undefined') || (typeof endMonth === 'undefined')) {\n                reject(Error('Failed to create calendar tables.'));\n            } else {\n                const resultObj = {\n                        calendarContainer : calendarContainer,\n                        year : year,\n                        startMonth : startMonth\n                };\n                resolve(resultObj);\n            }\n        });\n    };\n\n    /**\n     * Generate calendar markup for the month.\n     */\n    const populateCalendarDays = (table, year, month) => {\n        let firstDay = (new Date(year, month)).getDay();  // Get the starting day of the month.\n        let date = 1;  // Creating all cells.\n\n        for (let i = 0; i < 6; i++) {\n            let row = document.createElement(\"tr\"); // Creates a table row.\n\n            // Creating individual cells, filing them up with data.\n            for (let j = 0; j < 7; j++) {\n                if (i === 0 && j < firstDay) {\n                    var cell = document.createElement(\"td\");\n                    var cellText = document.createTextNode(\"\");\n                    cell.appendChild(cellText);\n                    row.appendChild(cell);\n                }\n                else if (date > daysInMonth(month, year)) { // Break if we have generated all the days for this month.\n                    break;\n                }\n                else {\n                    cell = document.createElement(\"td\");\n                    cellText = document.createTextNode(date);\n                    if (date === today.getDate()\n                            && parseInt(year) === today.getFullYear() && parseInt(month) === today.getMonth()) {\n\n                        cell.classList.add(\"bg-info\");\n                    } // Color today's date.\n                    cell.appendChild(cellText);\n                    row.appendChild(cell);\n                    date++;\n                }\n\n            }\n            table.appendChild(row); // Appending each row into calendar body.\n        }\n    };\n\n    /**\n     *\n     */\n    const populateCalendar = ({calendarContainer, year, startMonth}) => {\n        return new Promise((resolve, reject) => {\n            // Get the table boodies.\n            let tables = calendarContainer.getElementsByTagName(\"tbody\");\n            let month = startMonth;\n\n            // For each table body populate with calendar.\n            for (var i = 0; i < tables.length; i++) {\n                let table = tables[i];\n                populateCalendarDays(table, year, month);\n                month++;\n            }\n\n\n            if (typeof calendarContainer === 'undefined') {\n                reject(Error('Failed to populate calendar tables.'));\n            } else {\n                resolve(calendarContainer);\n            }\n        });\n    };\n\n    /**\n     * Initialise method for report card rendering.\n     *\n     * @param {integer} context The current context id.\n     */\n    Calendar.generate = (year, startMonth, endMonth) => {\n        return new Promise((resolve, reject) => {\n            const dateObj = {\n                    year : year,\n                    startMonth : startMonth,\n                    endMonth : endMonth\n            };\n\n            Str.get_strings(stringArr).catch(() => { // Get required strings.\n                Notification.exception(new Error('Failed to load strings'));\n                return;\n            }).then(stringReturn => { // Save string to global to be used later.\n                stringResult = stringReturn;\n                return dateObj;\n            }).then(createTables) // Create tables for calendar.\n            .then(populateCalendar)\n            .then((calendarHTML) => { // Return the result of the generate function.\n                if (typeof calendarHTML !== 'undefined') {\n                    resolve(calendarHTML);\n                } else {\n                    reject(Error('Could not generate calendar'));\n                }\n            });\n        });\n\n    };\n\n    return Calendar;\n});\n"],"file":"calendar.min.js"}