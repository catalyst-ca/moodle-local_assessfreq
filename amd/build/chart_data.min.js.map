{"version":3,"sources":["../src/chart_data.js"],"names":["define","Fragment","Notification","Str","Templates","ChartData","cards","contextId","fragment","template","getCardCharts","quizId","hoursFilter","yearSelect","forEach","cardData","cardElement","document","getElementById","cardId","spinner","getElementsByClassName","chartBody","values","call","hoursahead","hoursbehind","quiz","year","params","JSON","stringify","classList","remove","loadFragment","done","response","resObj","parse","hasdata","context","chart","aspect","render","html","js","add","replaceNodeContents","fail","exception","Error","get_string","then","str","noDatastr","createElement","innerHTML","outerHTML","catch","init","cardsArray","contextIdChart","fragmentChart","templateChart"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Chart data JS module.\n *\n * @package    local_assessfreq\n * @copyright  2020 Guillermo Gomez <guillermogomez@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @module     local_assessfreq/char_data\n */\ndefine(['core/fragment', 'core/notification', 'core/str', 'core/templates'], function(Fragment, Notification, Str, Templates) {\n    /**\n     * Module level variables.\n     */\n    let ChartData = {};\n\n    let cards;\n    let contextId;\n    let fragment;\n    let template;\n\n    /**\n     * For each of the cards on the dashboard get their corresponding chart data.\n     * Data is based on the year variable from the corresponding dropdown.\n     * Chart data is loaded via ajax.\n     *\n     * @param {int|null} quizId The quiz Id.\n     * @param {array|null} hoursFilter Array with hour ahead or behind preference.\n     * @param {int|null} yearSelect Year selected.\n     */\n    ChartData.getCardCharts = function(quizId, hoursFilter, yearSelect) {\n        cards.forEach((cardData) => {\n            let cardElement = document.getElementById(cardData.cardId);\n            let spinner = cardElement.getElementsByClassName('overlay-icon-container')[0];\n            let chartBody = cardElement.getElementsByClassName('chart-body')[0];\n            let values = {'call': cardData.call};\n            // Add values to Object depending on dashboard type.\n            if (hoursFilter) {\n                values.hoursahead = hoursFilter[0];\n                values.hoursbehind = hoursFilter[1];\n            }\n            if (quizId) {\n                values.quiz = quizId;\n            }\n            if (yearSelect) {\n                values.year = yearSelect;\n            }\n            let params = {'data': JSON.stringify(values)};\n\n            spinner.classList.remove('hide'); // Show sinner if not already shown.\n            Fragment.loadFragment('local_assessfreq', fragment, contextId, params)\n                .done((response) => {\n                    let resObj = JSON.parse(response);\n                    if (resObj.hasdata === true) {\n                        let context = {\n                            'withtable': true, 'chartdata': JSON.stringify(resObj.chart)\n                        };\n                        if (typeof cardData.aspect !== 'undefined') {\n                            context.aspect = cardData.aspect;\n                        }\n                        Templates.render(template, context).done((html, js) => {\n                            spinner.classList.add('hide'); // Hide spinner if not already hidden.\n                            // Load card body.\n                            Templates.replaceNodeContents(chartBody, html, js);\n                        }).fail(() => {\n                            Notification.exception(new Error('Failed to load chart template.'));\n                            return;\n                        });\n                        return;\n                    } else {\n                        Str.get_string('nodata', 'local_assessfreq').then((str) => {\n                            const noDatastr = document.createElement('h3');\n                            noDatastr.innerHTML = str;\n                            chartBody.innerHTML = noDatastr.outerHTML;\n                            spinner.classList.add('hide'); // Hide spinner if not already hidden.\n                            return;\n                        }).catch(() => {\n                            Notification.exception(new Error('Failed to load string: nodata'));\n                        });\n                    }\n                }).fail(() => {\n                Notification.exception(new Error('Failed to load card.'));\n                return;\n            });\n        });\n    };\n\n    /**\n     * Initialise method for table handler.\n     *\n     * @param {array} cardsArray Cards array.\n     * @param {int} contextIdChart The context id.\n     * @param {string} fragmentChart Fragment name.\n     * @param {string} templateChart Template name.\n     */\n    ChartData.init = function(cardsArray, contextIdChart, fragmentChart, templateChart) {\n        cards = cardsArray;\n        contextId = contextIdChart;\n        fragment = fragmentChart;\n        template = templateChart;\n    };\n\n    return ChartData;\n});\n"],"file":"chart_data.min.js"}