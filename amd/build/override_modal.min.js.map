{"version":3,"sources":["../src/override_modal.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","OverrideModal","contextid","modalObj","callback","quizid","userid","hoursFilter","spinner","createModal","get_string","then","title","create","type","types","DEFAULT","body","large","done","modal","getRoot","on","processModalForm","e","preventDefault","setBody","hide","catch","Notification","exception","Error","updateModalBody","quiz","user","formdata","params","JSON","stringify","setTitle","loadFragment","overrideform","find","serialize","formjson","invalid","merge","length","first","focus","call","methodname","args","fail","displayModalForm","hours","show","init","context","callbackFunction"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax'],\nfunction($,Str, ModalFactory, ModalEvents, Fragment, Ajax) {\n\n    /**\n     * Module level variables.\n     */\n    var OverrideModal = {};\n    var contextid;\n    var modalObj;\n    var callback;\n    var quizid;\n    var userid;\n    var hoursFilter;\n\n    const spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i>'\n        + '</p>';\n\n    /**\n     * Create the modal window.\n     *\n     * @private\n     */\n    const createModal = function() {\n        Str.get_string('loading', 'local_assessfreq').then((title) => {\n            // Create the Modal.\n            ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: title,\n                body: spinner,\n                large: true\n            })\n            .done((modal) => {\n                modalObj = modal;\n                // Explicitly handle form click events.\n                modalObj.getRoot().on('click', '#id_submitbutton', processModalForm);\n                modalObj.getRoot().on('click', '#id_cancel', function(e) {\n                    e.preventDefault();\n                    modalObj.setBody(spinner);\n                    modalObj.hide();\n                });\n            });\n            return;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loading'));\n        });\n    };\n\n    /**\n     * Updates the body of the modal window.\n     *\n     * @param {Object} formdata\n     * @private\n     */\n    const updateModalBody = function(quiz, user, formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n\n        let params = {\n            'jsonformdata': JSON.stringify(formdata),\n            'quizid': quiz,\n            'userid': user\n        };\n\n        modalObj.setBody(spinner);\n        Str.get_string('useroverride', 'local_assessfreq').then((title) => {\n            modalObj.setTitle(title);\n            modalObj.setBody(Fragment.loadFragment('local_assessfreq', 'new_override_form', contextid, params));\n            return;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: useroverride'));\n        });\n    };\n\n    /**\n     * Updates Moodle form with selected information.\n     *\n     * @param {Object} e\n     * @private\n     */\n    function processModalForm(e) {\n        e.preventDefault(); // Stop modal from closing.\n\n        // Form data.\n        let overrideform = modalObj.getRoot().find('form').serialize();\n        let formjson = JSON.stringify(overrideform);\n\n        // Handle invalid form fields for better UX.\n        // I hate that I had to use JQuery for this.\n        var invalid = $.merge(\n                modalObj.getRoot().find('[aria-invalid=\"true\"]'),\n                modalObj.getRoot().find('.error')\n        );\n\n        if (invalid.length) {\n            invalid.first().focus();\n            return;\n        }\n\n        // Submit form via ajax.\n        Ajax.call([{\n            methodname: 'local_assessfreq_process_override_form',\n            args: {\n                'jsonformdata': formjson,\n                'quizid': quizid\n            },\n        }])[0].done(() => {\n            // For submission succeeded.\n            modalObj.setBody(spinner);\n            modalObj.hide();\n            if (hoursFilter) {\n                callback(quizid, hoursFilter);\n            } else {\n                callback(quizid);\n            }\n        }).fail(() => {\n            // Form submission failed server side, redisplay with errors.\n            updateModalBody(quizid, userid, overrideform);\n        });\n    }\n\n    /**\n     * Display the Modal form.\n     */\n    OverrideModal.displayModalForm = function(quiz, user, hours = null) {\n        quizid = quiz;\n        userid = user;\n        hoursFilter = hours;\n        updateModalBody(quiz, user);\n        modalObj.show();\n    };\n\n    /**\n     * Initialise method for quiz dashboard rendering.\n     */\n    OverrideModal.init = function(context, callbackFunction, hours = null) {\n        contextid = context;\n        callback = callbackFunction;\n        hoursFilter = hours;\n        createModal();\n    };\n\n    return OverrideModal;\n});\n"],"file":"override_modal.min.js"}