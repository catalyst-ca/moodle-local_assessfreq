{"version":3,"sources":["../src/override_modal.js"],"names":["define","Str","ModalFactory","Fragment","OverrideModal","contextid","modalObj","callback","spinner","createModal","get_string","then","title","create","type","types","DEFAULT","body","large","done","modal","catch","Notification","exception","Error","updateModalBody","quiz","userid","formdata","params","JSON","stringify","setBody","setTitle","loadFragment","displayModalForm","show","init","context","callbackFunction","window","console","log"],"mappings":"AAuBAA,OAAM,mCAAC,CAAC,UAAD,CAAa,oBAAb,CAAmC,eAAnC,CAAD,CACN,SAASC,CAAT,CAAcC,CAAd,CAA4BC,CAA5B,CAAsC,IAK9BC,CAAAA,CAAa,CAAG,EALc,CAM9BC,CAN8B,CAO9BC,CAP8B,CAQ9BC,CAR8B,CAU5BC,CAAO,0FAVqB,CAmB5BC,CAAW,CAAG,UAAW,CAC3BR,CAAG,CAACS,UAAJ,CAAe,SAAf,CAA0B,kBAA1B,EAA8CC,IAA9C,CAAmD,SAACC,CAAD,CAAW,CAE1DV,CAAY,CAACW,MAAb,CAAoB,CAChBC,IAAI,CAAEZ,CAAY,CAACa,KAAb,CAAmBC,OADT,CAEhBJ,KAAK,CAAEA,CAFS,CAGhBK,IAAI,CAAET,CAHU,CAIhBU,KAAK,GAJW,CAApB,EAMCC,IAND,CAMM,SAACC,CAAD,CAAW,CACbd,CAAQ,CAAGc,CAGd,CAVD,CAYH,CAdD,EAcGC,KAdH,CAcS,UAAM,CACXC,YAAY,CAACC,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,gCAAV,CAAvB,CACH,CAhBD,CAiBH,CArCiC,CA6C5BC,CAAe,CAAG,SAASC,CAAT,CAAeC,CAAf,CAAuBC,CAAvB,CAAiC,CACrD,GAAwB,WAApB,QAAOA,CAAAA,CAAX,CAAqC,CACjCA,CAAQ,CAAG,EACd,CAED,GAAIC,CAAAA,CAAM,CAAG,CACT,aAAgBC,IAAI,CAACC,SAAL,CAAeH,CAAf,CADP,CAET,OAAUF,CAFD,CAGT,OAAUC,CAHD,CAAb,CAMArB,CAAQ,CAAC0B,OAAT,CAAiBxB,CAAjB,EACAP,CAAG,CAACS,UAAJ,CAAe,cAAf,CAA+B,kBAA/B,EAAmDC,IAAnD,CAAwD,SAACC,CAAD,CAAW,CAC/DN,CAAQ,CAAC2B,QAAT,CAAkBrB,CAAlB,EACAN,CAAQ,CAAC0B,OAAT,CAAiB7B,CAAQ,CAAC+B,YAAT,CAAsB,kBAAtB,CAA0C,mBAA1C,CAA+D7B,CAA/D,CAA0EwB,CAA1E,CAAjB,CAEH,CAJD,EAIGR,KAJH,CAIS,UAAM,CACXC,YAAY,CAACC,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,qCAAV,CAAvB,CACH,CAND,CAOH,CAhEiC,CAqElCpB,CAAa,CAAC+B,gBAAd,CAAiC,SAAST,CAAT,CAAeC,CAAf,CAAuB,CACpDF,CAAe,CAACC,CAAD,CAAOC,CAAP,CAAf,CACArB,CAAQ,CAAC8B,IAAT,EACH,CAHD,CAQAhC,CAAa,CAACiC,IAAd,CAAqB,SAASC,CAAT,CAAkBC,CAAlB,CAAoC,CACrDlC,CAAS,CAAGiC,CAAZ,CACA/B,CAAQ,CAAGgC,CAAX,CACA9B,CAAW,GACX+B,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmBnC,CAAnB,CAEH,CAND,CAQA,MAAOH,CAAAA,CACV,CAvFK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for report card display and processing.\n *\n * @package    local_assessfreq\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/modal_factory', 'core/fragment'],\nfunction(Str, ModalFactory, Fragment) {\n\n    /**\n     * Module level variables.\n     */\n    var OverrideModal = {};\n    var contextid;\n    var modalObj;\n    var callback;\n\n    const spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"></i>'\n        + '</p>';\n\n    /**\n     * Create the modal window.\n     *\n     * @private\n     */\n    const createModal = function() {\n        Str.get_string('loading', 'local_assessfreq').then((title) => {\n            // Create the Modal.\n            ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: title,\n                body: spinner,\n                large: true\n            })\n            .done((modal) => {\n                modalObj = modal;\n\n                // TODO: Explicitly handle form click events.\n            });\n            return;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loading'));\n        });\n    };\n\n    /**\n     * Updates the body of the modal window.\n     *\n     * @param {Object} formdata\n     * @private\n     */\n    const updateModalBody = function(quiz, userid, formdata) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n\n        let params = {\n            'jsonformdata': JSON.stringify(formdata),\n            'quizid': quiz,\n            'userid': userid\n        };\n\n        modalObj.setBody(spinner);\n        Str.get_string('useroverride', 'local_assessfreq').then((title) => {\n            modalObj.setTitle(title);\n            modalObj.setBody(Fragment.loadFragment('local_assessfreq', 'new_override_form', contextid, params));\n            return;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: useroverride'));\n        });\n    };\n\n    /**\n     * Display the Modal form.\n     */\n    OverrideModal.displayModalForm = function(quiz, userid) {\n        updateModalBody(quiz, userid);\n        modalObj.show();\n    };\n\n    /**\n     * Initialise method for quiz dashboard rendering.\n     */\n    OverrideModal.init = function(context, callbackFunction) {\n        contextid = context;\n        callback = callbackFunction;\n        createModal();\n        window.console.log(callback);\n\n    };\n\n    return OverrideModal;\n});\n"],"file":"override_modal.min.js"}